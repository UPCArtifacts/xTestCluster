/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 21:24:18 GMT 2021
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.HeadlessException;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.color.ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.geom.AffineTransform;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.ColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.RescaleOp;
import java.math.BigInteger;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Map;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import javax.swing.JDialog;
import javax.swing.JLayeredPane;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.JTree;
import javax.swing.plaf.multi.MultiListUI;
import javax.swing.plaf.multi.MultiTreeUI;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import javax.swing.tree.FixedHeightLayoutCache;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.DateTickUnit;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.StandardTickUnitSource;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.TickUnit;
import org.jfree.chart.axis.TickUnits;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.needle.ArrowNeedle;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.PaintScale;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.xy.XYBlockRenderer;
import org.jfree.chart.text.TextAnchor;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.SortOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.general.CombinedDataset;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Minute;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.Year;
import org.jfree.data.xy.XYDatasetTableModel;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CategoryPlot_ESTest extends CategoryPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(70.0, 1.0F);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation(500);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(axisLocation0);
      combinedDomainCategoryPlot0.rendererChanged(rendererChangeEvent0);
      combinedDomainXYPlot0.getDomainAxisEdge(500);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(true, 0.0, false, 0.0F, cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      combinedDomainCategoryPlot0.removeAnnotation(categoryLineAnnotation0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(2362);
      AxisLocation.getOpposite(axisLocation0);
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxis3D0.setAxisLineVisible(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F, "Null 'layer' not permitted.");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.getRowRenderingOrder();
      categoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRowRenderingOrder();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(10, 10);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      combinedDomainCategoryPlot0.zoomRangeAxes(0.05, (double) 10, plotRenderingInfo0, (Point2D) point0);
      combinedDomainCategoryPlot1.getDomainAxisIndex(categoryAxis3D0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedRangeCategoryPlot0, (Dataset) null);
      combinedRangeCategoryPlot0.datasetChanged(datasetChangeEvent0);
      TickUnits tickUnits0 = new TickUnits();
      // Undeclared exception!
      try { 
        tickUnits0.get(800);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 800, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      combinedDomainCategoryPlot0.clearRangeAxes();
      combinedRangeCategoryPlot0.getFixedRangeAxisSpace();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(4485.279877651465, 10.0);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Category Plot");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, subCategoryAxis0, cyclicNumberAxis0, areaRenderer0);
      categoryPlot0.getDataset();
      SubCategoryAxis subCategoryAxis1 = new SubCategoryAxis("Category Plot");
      CategoryPlot categoryPlot1 = new CategoryPlot(defaultKeyedValues2DDataset0, subCategoryAxis0, cyclicNumberAxis0, areaRenderer0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset1 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot2 = new CategoryPlot(defaultKeyedValues2DDataset1, subCategoryAxis1, cyclicNumberAxis0, areaRenderer0);
      Year year0 = new Year();
      CategoryMarker categoryMarker0 = new CategoryMarker(year0, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, areaRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot1.addDomainMarker(categoryMarker0, layer0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("$PN9(!J9gG<X.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot1.clone();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      categoryPlot1.equals(stackedAreaRenderer0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(2362);
      AxisLocation.getOpposite(axisLocation0);
      Graphics2D graphics2D0 = null;
      Rectangle2D rectangle2D0 = null;
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxis3D0.setAxisLineVisible(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F, "Null 'layer' not permitted.");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.getRowRenderingOrder();
      categoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRowRenderingOrder();
      JFreeChart jFreeChart0 = new JFreeChart("%IY3[Yu[d", combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, true, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot2.drawAxes((Graphics2D) null, (Rectangle2D) null, (Rectangle2D) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1499, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis numberAxis1 = (NumberAxis)numberAxis0.clone();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxis3D0.setAxisLineVisible(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getDataRange(numberAxis1);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1.0F, 0.0F, 10, 10);
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.getFrame();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getFixedDomainAxisSpace();
      combinedDomainCategoryPlot1.calculateRangeAxisSpace(graphics2D0, rectangle2D_Double1, (AxisSpace) null);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainCategoryPlot0.setRangeAxisLocation(axisLocation0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      combinedRangeCategoryPlot0.getRendererForDataset(defaultStatisticalCategoryDataset0);
      AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D_Double1, (AxisSpace) null);
      AxisSpace axisSpace1 = combinedDomainCategoryPlot0.calculateDomainAxisSpace(graphics2D0, rectangle2D_Double0, axisSpace0);
      combinedDomainCategoryPlot0.calculateDomainAxisSpace(graphics2D0, rectangle2D_Double1, axisSpace1);
      combinedRangeCategoryPlot0.getRenderer(10);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.isDomainGridlinesVisible();
      combinedRangeCategoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      combinedDomainCategoryPlot0.remove(combinedRangeCategoryPlot0);
      combinedDomainCategoryPlot0.clearRangeAxes();
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.getDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("$PN9(!J9gG<X.");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, subCategoryAxis0, cyclicNumberAxis0, areaRenderer0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot1 = new CategoryPlot(defaultKeyedValues2DDataset0, subCategoryAxis0, cyclicNumberAxis0, areaRenderer0);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.2, categoryPlot0.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot1.addDomainMarker(categoryMarker0, layer0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      Object object0 = combinedDomainCategoryPlot1.clone();
      categoryPlot1.equals(object0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.isDomainGridlinesVisible();
      combinedRangeCategoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.getDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot2 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot1.getDomainGridlinePosition();
      combinedRangeCategoryPlot1.getRowRenderingOrder();
      JTableHeader jTableHeader0 = new JTableHeader();
      jTableHeader0.getHeaderRect(10);
      combinedRangeCategoryPlot1.setRangeAxis(0, (ValueAxis) numberAxis0, false);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      GridBagLayout gridBagLayout1 = new GridBagLayout();
      Point point0 = gridBagLayout1.location(0, 10);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot2.zoomRangeAxes((double) 1.0F, (-1144.02454516369), plotRenderingInfo0, (Point2D) point0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (1.05) <= upper (-1201.2257724218746).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0E-8);
      categoryMarker0.setLabel("nrZ#zv!alNjLE~vw]D");
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      categoryMarker0.setLabelOffsetType(lengthAdjustmentType0);
      combinedRangeCategoryPlot0.setRangeCrosshairLockedOnData(true);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0, (Layer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1499, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis numberAxis1 = (NumberAxis)numberAxis0.clone();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxis3D0.setAxisLineVisible(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-420.67042787), 10, "Null 'layer' not permitted.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getDataRange(numberAxis1);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1.0F, 0.0F, 10, 10);
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.getFrame();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getFixedDomainAxisSpace();
      combinedDomainCategoryPlot1.calculateRangeAxisSpace(graphics2D0, rectangle2D_Double1, (AxisSpace) null);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainCategoryPlot0.setRangeAxisLocation(axisLocation0);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[1];
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      categoryItemRendererArray0[0] = (CategoryItemRenderer) barRenderer3D0;
      combinedDomainCategoryPlot1.setRenderers(categoryItemRendererArray0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      combinedRangeCategoryPlot0.getRendererForDataset(defaultStatisticalCategoryDataset0);
      AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D_Double1, (AxisSpace) null);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      axisSpace0.add(1.0, rectangleEdge0);
      AxisSpace axisSpace1 = combinedDomainCategoryPlot0.calculateDomainAxisSpace(graphics2D0, rectangle2D_Double0, axisSpace0);
      combinedDomainCategoryPlot0.calculateDomainAxisSpace(graphics2D0, rectangle2D_Double1, axisSpace1);
      combinedRangeCategoryPlot0.getRenderer((-1));
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeCrosshairPaint();
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      TreePath treePath0 = new TreePath(periodAxis0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      combinedDomainCategoryPlot1.equals(stackedBarRenderer0);
      JFreeChart jFreeChart1 = new JFreeChart("", combinedDomainCategoryPlot1);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-264), 304, 10, 10, 92, 15, true, true, false, false, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      chartRenderingInfo0.getPlotInfo();
      HashMap<LogarithmicAxis, DateAxis> hashMap0 = new HashMap<LogarithmicAxis, DateAxis>();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDomainGridlinesVisible(true);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = new BasicStroke();
      Line2D.Double line2D_Double0 = new Line2D.Double(2132.0, 10, (-3828.496109283547), (-3828.496109283547));
      Rectangle rectangle0 = line2D_Double0.getBounds();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
      combinedRangeCategoryPlot0.getRowRenderingOrder();
      combinedRangeCategoryPlot0.getCategories();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      combinedRangeCategoryPlot0.setRangeAxis(10, (ValueAxis) null, false);
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      TreePath treePath0 = new TreePath(defaultValueDataset0);
      combinedRangeCategoryPlot0.equals(treePath0);
      JFreeChart jFreeChart0 = new JFreeChart("V81{?D@6Kt*", categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 10, 5962, 10, 5962, 3839, true, false, true, true, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = areaRenderer0.initialise((Graphics2D) null, rectangle0, categoryPlot0, 1193, plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      chartRenderingInfo0.setEntityCollection(entityCollection0);
      chartRenderingInfo0.getPlotInfo();
      Map map0 = new HashMap<LogarithmicAxis, DateAxis>();
      combinedRangeCategoryPlot0.setDomainGridlinesVisible(false);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      Line2D.Double line2D_Double0 = new Line2D.Double(2132.0, 10, (-3811.1885832095413), (-3811.1885832095413));
      line2D_Double0.getBounds();
      categoryPlot0.setDomainGridlineStroke(basicStroke0);
      categoryPlot0.getLegendItems();
      categoryPlot0.clearRangeMarkers(3822);
      SortOrder sortOrder0 = categoryPlot0.getRowRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("W*ccclo8", false, 30.0, (-4718.535006402782));
      categoryPlot0.addAnnotation(categoryPointerAnnotation0);
      categoryPlot0.getDomainAxisEdge();
      CategoryMarker categoryMarker0 = new CategoryMarker(3.0, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, categoryPlot0.DEFAULT_OUTLINE_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE, 0);
      Layer layer0 = Layer.FOREGROUND;
      categoryPlot0.addDomainMarker(0, categoryMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BasicStroke basicStroke0 = new BasicStroke(10);
      areaRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(2362);
      AxisLocation.getOpposite(axisLocation0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[8];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) lineAndShapeRenderer0;
      categoryItemRendererArray0[2] = (CategoryItemRenderer) lineAndShapeRenderer0;
      categoryItemRendererArray0[3] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[4] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[5] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[6] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[7] = (CategoryItemRenderer) lineAndShapeRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      DefaultTableColumnModel defaultTableColumnModel1 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel1);
      jTableHeader0.getHeaderRect(1);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo0);
      categoryPlot0.render((Graphics2D) null, (Rectangle2D) null, 1, plotRenderingInfo1);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("&");
      combinedRangeCategoryPlot0.setRangeAxis(10, (ValueAxis) numberAxis3D0, true);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryPlot0.addRangeMarker((Marker) categoryMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("MWMW=V", categoryPlot0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.getDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
      combinedRangeCategoryPlot1.getRowRenderingOrder();
      JTableHeader jTableHeader0 = new JTableHeader();
      jTableHeader0.getHeaderRect(10);
      jFreeChart0.getCategoryPlot();
      combinedRangeCategoryPlot1.setRangeAxis(0, (ValueAxis) numberAxis0, false);
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      TreePath treePath0 = new TreePath(numberAxis0);
      Layer layer0 = Layer.BACKGROUND;
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      categoryPlot0.getFixedRangeAxisSpace();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, (double) areaRenderer0.ZERO, "l%rF1E''pb9");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      categoryPlot0.getDataset();
      categoryPlot0.setRangeCrosshairPaint(combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      cyclicNumberAxis0.setTickMarksVisible(false);
      categoryPlot0.getAxisOffset();
      LinkedList<ValueMarker> linkedList0 = new LinkedList<ValueMarker>();
      combinedDomainCategoryPlot0.setDataset((CategoryDataset) null);
      combinedDomainCategoryPlot0.setRangeCrosshairValue(2075.51757814081, false);
      ValueAxis[] valueAxisArray0 = new ValueAxis[2];
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      categoryPlot0.setRangeAxes(valueAxisArray0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      categoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE, areaRenderer0.DEFAULT_VALUE_LABEL_PAINT, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE, 0.0F);
      categoryPlot0.addDomainMarker(153, categoryMarker0, layer0);
      categoryPlot0.getRangeAxisEdge();
      combinedDomainCategoryPlot0.getDomainAxisForDataset((-621));
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      Line2D.Double line2D_Double0 = new Line2D.Double(2132.0, 10, (-3828.496109283547), (-3828.496109283547));
      Rectangle rectangle0 = line2D_Double0.getBounds();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
      combinedRangeCategoryPlot0.getRowRenderingOrder();
      combinedRangeCategoryPlot0.getCategories();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      combinedRangeCategoryPlot0.setRangeAxis(10, (ValueAxis) null, false);
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      TreePath treePath0 = new TreePath(defaultValueDataset0);
      combinedRangeCategoryPlot0.equals(treePath0);
      JFreeChart jFreeChart0 = new JFreeChart("V81{?D@6Kt*", categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      categoryPlot0.drawAxes((Graphics2D) null, rectangle0, rectangle0, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'location' for index 0 not permitted.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      int int0 = 2299;
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.setDomainAxisLocation(2299, axisLocation1, false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 0.05);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      float[] floatArray0 = new float[1];
      floatArray0[0] = 0.0F;
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(2299, 10, floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data array too small (is 1 and should be 22990
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      LinkedList<CombinedDataset> linkedList0 = new LinkedList<CombinedDataset>();
      categoryPlot0.getPlotType();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logarithmicAxis0);
      combinedRangeCategoryPlot0.zoom((-2116.3835292));
      JFreeChart jFreeChart0 = new JFreeChart("_Jm44o%s", combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, true);
      jFreeChart0.setBackgroundImageAlpha(1.0F);
      jFreeChart0.getRenderingHints();
      JFreeChart jFreeChart1 = new JFreeChart("CvPxq\\K", categoryPlot0);
      ModuloAxis moduloAxis0 = new ModuloAxis("CvPxq\\K", logarithmicAxis0.DEFAULT_RANGE);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(logarithmicAxis0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot1.setDomainAxis((-728), (CategoryAxis) categoryAxis3D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      PeriodAxis periodAxis0 = new PeriodAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getDomainAxisLocation(61);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, false);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      RingPlot ringPlot0 = new RingPlot();
      Quarter quarter0 = new Quarter();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRowRenderingOrder((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      categoryPlot0.getFixedRangeAxisSpace();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) lineAndShapeRenderer0;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) ganttRenderer0;
      combinedDomainCategoryPlot2.setRenderers(categoryItemRendererArray0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      categoryPlot0.getRendererForDataset(defaultStatisticalCategoryDataset0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot3 = new CombinedDomainCategoryPlot();
      CategoryAnchor categoryAnchor0 = CategoryAnchor.MIDDLE;
      combinedDomainCategoryPlot2.setDomainGridlinePosition(categoryAnchor0);
      combinedDomainCategoryPlot3.getCategoriesForAxis((CategoryAxis) null);
      combinedDomainCategoryPlot3.getDomainMarkers(layer0);
      combinedDomainCategoryPlot1.setFixedDomainAxisSpace((AxisSpace) null);
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'offset' argument.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedDomainCategoryPlot0.getCategoriesForAxis(subCategoryAxis0);
      String[] stringArray0 = new String[0];
      Number[][] numberArray0 = new Number[8][5];
      Number[] numberArray1 = new Number[8];
      numberArray1[0] = (Number) 10;
      numberArray1[1] = (Number) 10;
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      numberArray1[2] = (Number) integer0;
      numberArray1[3] = (Number) 10;
      numberArray1[4] = (Number) 2.0F;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-14);
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)59;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)29;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      numberArray1[5] = (Number) bigInteger0;
      numberArray1[6] = (Number) 1.0F;
      numberArray1[7] = (Number) 1.0F;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[0];
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[9];
      numberArray3[0] = combinedDomainCategoryPlot0.ZERO;
      numberArray3[1] = (Number) (byte) (-14);
      numberArray3[2] = (Number) 0.0F;
      numberArray3[3] = (Number) 10;
      numberArray3[4] = (Number) 2.0F;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      numberArray3[5] = (Number) integer1;
      numberArray3[6] = (Number) 0.2;
      numberArray3[7] = (Number) 0.05;
      numberArray3[8] = (Number) 0.2;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[6];
      numberArray4[0] = (Number) 10;
      numberArray4[1] = (Number) 0.0F;
      numberArray4[2] = (Number) (byte)50;
      numberArray4[3] = (Number) 1.0F;
      numberArray4[4] = (Number) integer1;
      numberArray4[5] = (Number) 1.0F;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[2];
      numberArray5[0] = (Number) bigInteger0;
      numberArray5[1] = (Number) integer1;
      numberArray0[4] = numberArray5;
      Number[] numberArray6 = new Number[5];
      numberArray6[0] = (Number) bigInteger0;
      numberArray6[1] = (Number) 0.0F;
      numberArray6[2] = (Number) 1.0F;
      numberArray6[3] = combinedDomainCategoryPlot0.ZERO;
      numberArray6[4] = (Number) 1.0F;
      numberArray0[5] = numberArray6;
      Number[] numberArray7 = new Number[1];
      numberArray7[0] = (Number) 1.0F;
      numberArray0[6] = numberArray7;
      Number[] numberArray8 = new Number[4];
      numberArray8[0] = (Number) integer1;
      numberArray8[1] = (Number) 0.0F;
      numberArray8[2] = (Number) 0.2;
      numberArray8[3] = (Number) 1.0F;
      numberArray0[7] = numberArray8;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, numberArray0);
      combinedDomainCategoryPlot0.setDataset(374, (CategoryDataset) defaultIntervalCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.clone();
      JTableHeader jTableHeader0 = new JTableHeader();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      LinkedList<ValueMarker> linkedList0 = new LinkedList<ValueMarker>();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      combinedDomainCategoryPlot0.setDataset((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BasicStroke basicStroke0 = new BasicStroke(10);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      AxisLocation.getOpposite(axisLocation0);
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxis3D0.setAxisLineVisible(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F, "Null 'layer' not permitted.");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.getRowRenderingOrder();
      categoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRowRenderingOrder();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedRangeCategoryPlot0.setDomainGridlineStroke(combinedDomainCategoryPlot1.DEFAULT_GRIDLINE_STROKE);
      categoryPlot0.getLegendItems();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.getDomainMarkers(layer0);
      categoryPlot0.getDataset();
      combinedDomainCategoryPlot1.getDomainAxis();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      Line2D.Double line2D_Double0 = new Line2D.Double(1.0F, 1015.04553066172, 1191.96296, 0.0);
      line2D_Double0.getBounds();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
      combinedRangeCategoryPlot0.getRowRenderingOrder();
      combinedRangeCategoryPlot0.getCategories();
      JTableHeader jTableHeader0 = new JTableHeader();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader1 = new JTableHeader(defaultTableColumnModel0);
      jTableHeader0.getHeaderRect(10);
      combinedRangeCategoryPlot0.setRangeAxis(1, (ValueAxis) null, true);
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      TreePath treePath0 = null;
      try {
        treePath0 = new TreePath((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // path in TreePath must be non null.
         //
         verifyException("javax.swing.tree.TreePath", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      Graphics2D graphics2D0 = null;
      Line2D.Double line2D_Double0 = new Line2D.Double(3105.748244164268, (-551.684), 3105.748244164268, (-328.47271222993));
      line2D_Double0.getBounds();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setBaseStroke((Stroke) basicStroke0);
      defaultPolarItemRenderer0.getItemOutlinePaint(1528, (-552));
      basicStroke0.getDashArray();
      double[][] doubleArray0 = new double[1][2];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (-1.7976931348623157E308);
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("FktkkH!6B6w3<q=@");
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      CategoryPlot categoryPlot0 = null;
      try {
        categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, logarithmicAxis0, statisticalLineAndShapeRenderer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Values less than or equal to zero not allowed with logarithmic axis
         //
         verifyException("org.jfree.chart.axis.LogarithmicAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryPlot0.addRangeMarker((Marker) categoryMarker0);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      categoryPlot0.getFixedRangeAxisSpace();
      combinedDomainCategoryPlot0.getDomainAxisEdge((-431));
      CategoryMarker categoryMarker1 = new CategoryMarker(10);
      StandardTickUnitSource standardTickUnitSource0 = new StandardTickUnitSource();
      standardTickUnitSource0.getCeilingTickUnit(836.84672102688);
      Layer layer0 = Layer.BACKGROUND;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("MWMW=V");
      PeriodAxis periodAxis0 = new PeriodAxis("MWMW=V");
      CategoryPlot categoryPlot1 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, periodAxis0, areaRenderer0);
      categoryPlot1.addDomainMarker(categoryMarker1, layer0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      combinedDomainCategoryPlot0.equals(defaultCategoryItemRenderer0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      categoryAxis3D0.setAxisLineStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      cyclicNumberAxis0.setUpperBound((-340.4810689630423));
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 500, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot)combinedDomainCategoryPlot0.clone();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      combinedDomainCategoryPlot1.add((CategoryPlot) combinedDomainCategoryPlot0, 10);
      combinedDomainCategoryPlot0.clearDomainAxes();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot2.setRangeGridlineStroke(cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainCategoryPlot1.getDomainAxisEdge((-335));
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.setDomainAxis((CategoryAxis) categoryAxis3D0);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.clearRangeMarkers();
      combinedDomainCategoryPlot1.getRowRenderingOrder();
      combinedDomainCategoryPlot1.getAnchorValue();
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryPlot0.addRangeMarker((Marker) categoryMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("MWMW=V", categoryPlot0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.add(categoryPlot0);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getDomainAxisLocation(15);
      AxisLocation axisLocation1 = AxisLocation.getOpposite(axisLocation0);
      AxisLocation axisLocation2 = axisLocation1.getOpposite();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation2, true);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      RingPlot ringPlot0 = new RingPlot();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      piePlot3D0.getBaseSectionOutlinePaint();
      SystemColor systemColor0 = SystemColor.control;
      ValueMarker valueMarker0 = new ValueMarker(1.0F, systemColor0, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainCategoryPlot0.addRangeMarker(500, (Marker) valueMarker0, (Layer) null);
      combinedDomainCategoryPlot0.setDrawSharedDomainAxis(false);
      ValueAxis[] valueAxisArray0 = new ValueAxis[4];
      valueAxisArray0[0] = (ValueAxis) numberAxis0;
      valueAxisArray0[1] = (ValueAxis) numberAxis0;
      valueAxisArray0[2] = (ValueAxis) numberAxis0;
      valueAxisArray0[3] = (ValueAxis) numberAxis0;
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 3827, 54, 10, 10, 500, 10, true, false, false, false, false, true);
      Point point0 = chartPanel0.getLocation((Point) null);
      categoryPlot0.zoomDomainAxes(0.4, plotRenderingInfo0, (Point2D) point0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      JFreeChart jFreeChart0 = new JFreeChart("MWMW=V", categoryPlot0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.getDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
      combinedRangeCategoryPlot0.getRowRenderingOrder();
      JTableHeader jTableHeader0 = new JTableHeader();
      jTableHeader0.getHeaderRect(10);
      combinedRangeCategoryPlot0.setRangeAxis(2145683521, (ValueAxis) numberAxis0, false);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      int int0 = 2778;
      Point point0 = gridBagLayout0.location(int0, combinedRangeCategoryPlot1.MINIMUM_WIDTH_TO_DRAW);
      ChartRenderingInfo chartRenderingInfo0 = null;
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      combinedRangeCategoryPlot0.zoomRangeAxes((double) point0.y, (double) point0.y, plotRenderingInfo0, (Point2D) point0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryPlot0.addRangeMarker((Marker) categoryMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("MWMW=V", categoryPlot0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.getDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
      combinedRangeCategoryPlot1.getRowRenderingOrder();
      JTableHeader jTableHeader0 = new JTableHeader();
      jTableHeader0.getHeaderRect(10);
      combinedRangeCategoryPlot1.setRangeAxis(760, (ValueAxis) numberAxis0, false);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(500, 760);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot1.zoomRangeAxes((double) 1.0F, (double) 0, plotRenderingInfo0, (Point2D) point0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (1.05) <= upper (0.0).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryPlot0.addRangeMarker((Marker) categoryMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("MWMW=V", categoryPlot0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.getDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
      combinedRangeCategoryPlot1.getRowRenderingOrder();
      JTableHeader jTableHeader0 = new JTableHeader();
      jTableHeader0.getHeaderRect(10);
      jFreeChart0.getCategoryPlot();
      combinedRangeCategoryPlot1.setRangeAxis(760, (ValueAxis) numberAxis0, false);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(500, 760);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot1.zoomRangeAxes((double) 1.0F, (double) 0, plotRenderingInfo0, (Point2D) point0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (1.05) <= upper (0.0).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.isDomainGridlinesVisible();
      combinedRangeCategoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      combinedDomainCategoryPlot0.clearRangeAxes();
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      combinedRangeCategoryPlot0.getDataset();
      combinedRangeCategoryPlot0.setRangeCrosshairPaint(areaRenderer0.DEFAULT_OUTLINE_PAINT);
      combinedRangeCategoryPlot0.getAxisOffset();
      LinkedList<ValueMarker> linkedList0 = new LinkedList<ValueMarker>();
      combinedDomainCategoryPlot0.drawRangeGridlines((Graphics2D) null, (Rectangle2D) null, linkedList0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1499, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      numberAxis0.clone();
      Line2D.Double line2D_Double0 = new Line2D.Double(15, 10, 100000.0, 2043.86216);
      line2D_Double0.getBounds2D();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      AffineTransform affineTransform0 = new AffineTransform(1.0E-8, 10, 0.05, 10.0, 15, 2);
      multiplePiePlot0.setParent(combinedRangeCategoryPlot0);
      affineTransform0.translate(10, 1.0F);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("k~n_", true, (-246.385382824));
      TextAnchor textAnchor0 = TextAnchor.BASELINE_CENTER;
      categoryTextAnnotation0.setRotationAnchor(textAnchor0);
      combinedRangeCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      Rectangle2D rectangle2D0 = affineTransformOp0.getBounds2D(bufferedImage0);
      combinedRangeCategoryPlot0.drawRangeCrosshair(graphics2D0, rectangle2D0, plotOrientation0, 1.0F, numberAxis0, numberAxis0.DEFAULT_AXIS_LINE_STROKE, multiplePiePlot0.DEFAULT_BACKGROUND_PAINT);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      combinedRangeCategoryPlot0.getLegendItems();
      combinedRangeCategoryPlot1.getDomainAxisCount();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot1.setDataset((-1135), (CategoryDataset) defaultCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryPlot0.addRangeMarker((Marker) categoryMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("MWMW=V", categoryPlot0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.add(categoryPlot0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.getDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
      combinedRangeCategoryPlot1.getRowRenderingOrder();
      JTableHeader jTableHeader0 = new JTableHeader();
      jTableHeader0.getHeaderRect(10);
      jFreeChart0.getCategoryPlot();
      combinedRangeCategoryPlot0.setRangeAxis(4081, (ValueAxis) numberAxis0, false);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      gridBagLayout0.location((-3677), 4081);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      Line2D.Double line2D_Double0 = new Line2D.Double(3105.748244164268, 10, 3105.748244164268, 3105.748244164268);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setBaseStroke(categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      rectangle0.width = (-3086);
      Paint paint0 = defaultPolarItemRenderer0.getItemOutlinePaint(250, (-451));
      basicStroke0.getDashArray();
      categoryPlot0.clearDomainMarkers();
      // Undeclared exception!
      try { 
        categoryPlot0.drawRangeLine((Graphics2D) null, rectangle0, 1191.96296, basicStroke0, paint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      Line2D.Double line2D_Double0 = new Line2D.Double(3105.647373442165, 10, 3105.647373442165, 3105.647373442165);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setBaseStroke(categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      rectangle0.width = (-3086);
      defaultPolarItemRenderer0.getItemOutlinePaint(250, (-451));
      basicStroke0.getDashArray();
      categoryPlot0.clearDomainMarkers();
      Layer layer0 = Layer.BACKGROUND;
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot((ValueAxis) null);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      Line2D.Double line2D_Double0 = new Line2D.Double(3105.748244164268, 10, (-3828.496109283547), (-3828.496109283547));
      line2D_Double0.getBounds();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
      combinedRangeCategoryPlot0.getRowRenderingOrder();
      combinedRangeCategoryPlot0.getCategories();
      JTableHeader jTableHeader0 = new JTableHeader();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader1 = new JTableHeader(defaultTableColumnModel0);
      jTableHeader1.getHeaderRect(305);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRangeAxis((-1626), (ValueAxis) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      categoryAxis3D0.setAxisLineStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(10);
      AxisLocation.getOpposite(axisLocation0);
      axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      RingPlot ringPlot0 = new RingPlot();
      Paint paint0 = ringPlot0.getBaseSectionOutlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(1.0, paint0, ringPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainCategoryPlot0.addRangeMarker(10, (Marker) valueMarker0, (Layer) null);
      combinedDomainCategoryPlot0.setDrawSharedDomainAxis(false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      int int0 = Plot.MINIMUM_HEIGHT_TO_DRAW;
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(false);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1499, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis numberAxis1 = (NumberAxis)numberAxis0.clone();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxis3D0.setAxisLineVisible(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-420.67042787), 10, "Null 'layer' not permitted.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getDataRange(numberAxis1);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      numberAxis0.setLabelAngle(811.725103524);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1.0F, 0.0F, 10, 10);
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.getFrame();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getFixedDomainAxisSpace();
      combinedDomainCategoryPlot1.calculateRangeAxisSpace(graphics2D0, rectangle2D_Double1, (AxisSpace) null);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[1];
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      barRenderer3D0.setItemLabelAnchorOffset(0.0);
      categoryItemRendererArray0[0] = (CategoryItemRenderer) barRenderer3D0;
      combinedDomainCategoryPlot1.setRenderers(categoryItemRendererArray0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      combinedRangeCategoryPlot0.getRendererForDataset(defaultStatisticalCategoryDataset0);
      AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D_Double1, (AxisSpace) null);
      AxisSpace axisSpace1 = combinedDomainCategoryPlot0.calculateDomainAxisSpace(graphics2D0, rectangle2D_Double0, axisSpace0);
      combinedDomainCategoryPlot0.calculateDomainAxisSpace(graphics2D0, rectangle2D_Double1, axisSpace1);
      combinedDomainCategoryPlot0.configureRangeAxes();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Stroke stroke0 = categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.setDomainGridlineStroke(stroke0);
      categoryPlot0.getLegendItems();
      categoryPlot0.clearRangeMarkers(10);
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      categoryPlot0.setRowRenderingOrder(sortOrder0);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("wY)N>z},;u=H~^M", 1.0F, (-656.91382630146), 1.0F);
      categoryPlot0.addAnnotation(categoryPointerAnnotation0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      categoryPlot0.getFixedRangeAxisSpace();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getSeriesURLGenerator(2411);
      areaRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, (double) areaRenderer0.ZERO, "l%rF1E''pb9");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      categoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      categoryPlot0.getDataset();
      categoryPlot0.setRangeCrosshairPaint(combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      cyclicNumberAxis0.setTickMarksVisible(false);
      categoryPlot0.getAxisOffset();
      LinkedList<ValueMarker> linkedList0 = new LinkedList<ValueMarker>();
      combinedDomainCategoryPlot0.setDataset((CategoryDataset) null);
      combinedDomainCategoryPlot0.setRangeCrosshairValue(2075.51757814081, false);
      ValueAxis[] valueAxisArray0 = new ValueAxis[2];
      valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      categoryPlot0.setRangeAxes(valueAxisArray0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      categoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE, areaRenderer0.DEFAULT_VALUE_LABEL_PAINT, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE, 0.0F);
      categoryPlot0.addDomainMarker(153, categoryMarker0, layer0);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("l%rF1E''pb9", 10, 1.0F, (-4838.741));
      categoryPlot0.addAnnotation(categoryPointerAnnotation0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      AxisSpace axisSpace0 = new AxisSpace();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1191.96296, "l%rF1E''pb9");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      categoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, axisSpace0);
      categoryPlot0.getDataset();
      categoryPlot0.setRangeCrosshairPaint(combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      categoryPlot0.getAxisOffset();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(categoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Color color0 = Color.magenta;
      combinedDomainCategoryPlot0.getDomainGridlinePaint();
      categoryPlot0.getFixedLegendItems();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      categoryPlot0.getFixedRangeAxisSpace();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, (double) areaRenderer0.ZERO, "l%rF1E''pb9");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      categoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      categoryPlot0.getDataset();
      categoryPlot0.setRangeCrosshairPaint(combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      categoryPlot0.getAxisOffset();
      LinkedList<ValueMarker> linkedList0 = new LinkedList<ValueMarker>();
      combinedDomainCategoryPlot0.setDataset((CategoryDataset) null);
      combinedDomainCategoryPlot0.setRangeCrosshairValue(2075.51757814081, false);
      ValueAxis[] valueAxisArray0 = new ValueAxis[2];
      valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      categoryPlot0.setRangeAxes(valueAxisArray0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      categoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Ku?!?*J");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      categoryAxis3D0.clone();
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      categoryItemRendererArray0[1] = (CategoryItemRenderer) lineAndShapeRenderer0;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      combinedDomainCategoryPlot0.getRendererForDataset(defaultStatisticalCategoryDataset0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      CategoryAnchor categoryAnchor0 = CategoryAnchor.MIDDLE;
      combinedDomainCategoryPlot0.setDomainGridlinePosition(categoryAnchor0);
      combinedDomainCategoryPlot1.getCategoriesForAxis((CategoryAxis) null);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      Line2D.Double line2D_Double0 = new Line2D.Double(3105.748244164268, 10, (-3828.496109283547), (-3828.496109283547));
      Rectangle rectangle0 = line2D_Double0.getBounds();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Ku?!?*J");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getFixedDomainAxisSpace();
      combinedDomainCategoryPlot1.calculateRangeAxisSpace((Graphics2D) null, rectangle0, (AxisSpace) null);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      categoryItemRendererArray0[1] = (CategoryItemRenderer) lineAndShapeRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      combinedDomainCategoryPlot0.getRendererForDataset(defaultStatisticalCategoryDataset0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
      combinedDomainCategoryPlot0.setDomainGridlinePosition(categoryAnchor0);
      combinedDomainCategoryPlot1.getCategoriesForAxis((CategoryAxis) null);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.isDomainGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      Graphics2D graphics2D0 = null;
      Rectangle2D rectangle2D0 = null;
      combinedRangeCategoryPlot0.getFixedRangeAxisSpace();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(781.56, 1915.0, "l%rF1E''pb9");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("", zoneInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[6];
      TimeZone.getDefault();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      categoryAxisArray0[0] = (CategoryAxis) subCategoryAxis0;
      CategoryAxis categoryAxis0 = new CategoryAxis("qPdPx9zjit+");
      categoryAxisArray0[1] = categoryAxis0;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      zoneInfo0.clone();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D("");
      categoryAxisArray0[5] = (CategoryAxis) categoryAxis3D1;
      CategoryAxis categoryAxis1 = new CategoryAxis();
      CategoryAxis categoryAxis2 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D2 = new CategoryAxis3D("H");
      combinedRangeCategoryPlot0.setDomainAxes(categoryAxisArray0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)69;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)2;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(131, byteArray0);
      JFreeChart jFreeChart0 = new JFreeChart("", subCategoryAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeCategoryPlot0, true);
      jFreeChart0.getRenderingHints();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      combinedRangeCategoryPlot0.configureDomainAxes();
      combinedRangeCategoryPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BasicStroke basicStroke0 = new BasicStroke(10);
      categoryPlot0.getDomainAxisEdge();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(2362);
      AxisLocation.getOpposite(axisLocation0);
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ArrayList<CombinedRangeXYPlot> arrayList0 = new ArrayList<CombinedRangeXYPlot>();
      combinedDomainCategoryPlot0.drawRangeGridlines((Graphics2D) null, (Rectangle2D) null, arrayList0);
      categoryAxis3D0.setAxisLineVisible(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F, "Null 'layer' not permitted.");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.getRowRenderingOrder();
      combinedDomainCategoryPlot1.getFixedDomainAxisSpace();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[10];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[2] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[3] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[4] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[5] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[6] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[7] = (CategoryItemRenderer) areaRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateDomainAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1499, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis numberAxis1 = (NumberAxis)numberAxis0.clone();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxis3D0.setAxisLineVisible(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-420.67042787), 10, "Null 'layer' not permitted.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getDataRange(numberAxis1);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1.0F, 0.0F, 10, 10);
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.getFrame();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getFixedDomainAxisSpace();
      combinedDomainCategoryPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D_Double1, (AxisSpace) null);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[1];
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      combinedRangeCategoryPlot0.getRendererForDataset(defaultStatisticalCategoryDataset0);
      AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D_Double1, (AxisSpace) null);
      AxisSpace axisSpace1 = combinedDomainCategoryPlot0.calculateDomainAxisSpace(graphics2D0, rectangle2D_Double0, axisSpace0);
      combinedDomainCategoryPlot0.calculateDomainAxisSpace(graphics2D0, rectangle2D_Double1, axisSpace1);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1499, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      numberAxis0.clone();
      Line2D.Double line2D_Double0 = new Line2D.Double(15, 10, 100000.0, 2043.86216);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      AffineTransform affineTransform0 = new AffineTransform(1.0E-8, 10, 0.05, 10.0, 15, 2);
      multiplePiePlot0.setParent(combinedRangeCategoryPlot0);
      affineTransform0.translate(10, 1.0F);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      line2D_Double0.clone();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("k~n_", true, (-246.385382824));
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      combinedRangeCategoryPlot0.getRendererForDataset(defaultStatisticalCategoryDataset0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedRangeCategoryPlot0.getFixedRangeAxisSpace();
      AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D0, (AxisSpace) null);
      combinedRangeCategoryPlot0.calculateDomainAxisSpace(graphics2D0, rectangle2D0, (AxisSpace) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.calculateDomainAxisSpace(graphics2D0, rectangle2D0, axisSpace0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1499, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis numberAxis1 = (NumberAxis)numberAxis0.clone();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxis3D0.setAxisLineVisible(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-420.67042787), 10, "Null 'layer' not permitted.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getDataRange(numberAxis1);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1.0F, 0.0F, 10, 10);
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.getFrame();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getFixedDomainAxisSpace();
      combinedDomainCategoryPlot1.calculateRangeAxisSpace(graphics2D0, rectangle2D_Double1, (AxisSpace) null);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[1];
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      categoryItemRendererArray0[0] = (CategoryItemRenderer) barRenderer3D0;
      combinedDomainCategoryPlot1.setRenderers(categoryItemRendererArray0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      combinedRangeCategoryPlot0.getRendererForDataset(defaultStatisticalCategoryDataset0);
      AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D_Double1, (AxisSpace) null);
      AxisSpace axisSpace1 = combinedDomainCategoryPlot0.calculateDomainAxisSpace(graphics2D0, rectangle2D_Double0, axisSpace0);
      combinedDomainCategoryPlot0.calculateDomainAxisSpace(graphics2D0, rectangle2D_Double1, axisSpace1);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryPlot0.addRangeMarker((Marker) categoryMarker0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.getDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot1.getRowRenderingOrder();
      JTableHeader jTableHeader0 = new JTableHeader();
      JTableHeader jTableHeader1 = new JTableHeader();
      jTableHeader1.getHeaderRect(10);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot1.setRangeAxis((-2770), (ValueAxis) numberAxis0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      categoryPlot0.getFixedRangeAxisSpace();
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      categoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      categoryPlot0.getDataset();
      categoryPlot0.setRangeCrosshairPaint(combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      categoryPlot0.getAxisOffset();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(categoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Color color0 = Color.magenta;
      combinedDomainCategoryPlot0.getDomainGridlinePaint();
      combinedDomainCategoryPlot0.getWeight();
      combinedDomainCategoryPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BasicStroke basicStroke0 = new BasicStroke(10);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(2362);
      AxisLocation.getOpposite(axisLocation0);
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxis3D0.setAxisLineVisible(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F, "Null 'layer' not permitted.");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.getRowRenderingOrder();
      categoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRowRenderingOrder();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2132, 10, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      chartRenderingInfo0.clone();
      JTableHeader jTableHeader0 = new JTableHeader();
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(1);
      jTableHeader0.setVerifyInputWhenFocusTarget(false);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot1.render((Graphics2D) null, rectangle0, 8, plotRenderingInfo0);
      combinedRangeCategoryPlot0.setRangeAxis(2132, (ValueAxis) cyclicNumberAxis0, true);
      combinedRangeCategoryPlot0.getWeight();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis((String) null);
      numberAxis0.setLabel((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      numberAxis0.setAutoRange(true);
      combinedRangeCategoryPlot0.setNoDataMessage((String) null);
      combinedRangeCategoryPlot0.setOutlinePaint(numberAxis0.DEFAULT_TICK_MARK_PAINT);
      combinedRangeCategoryPlot0.getAxisOffset();
      combinedRangeCategoryPlot0.getRangeCrosshairStroke();
      combinedRangeCategoryPlot0.getFixedLegendItems();
      System.setCurrentTimeMillis(2022L);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedRangeCategoryPlot0.setOrientation(plotOrientation0);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((double) 1.0F, (double) 0.0F, (-1287.2), 0.05);
      JFreeChart jFreeChart0 = new JFreeChart("", numberAxis0.DEFAULT_AXIS_LABEL_FONT, combinedRangeCategoryPlot0, true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      byte[][] byteArray0 = new byte[8][9];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-128);
      byteArray1[1] = (byte) (-125);
      byteArray1[2] = (byte)67;
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte) (-126);
      byteArray1[5] = (byte)115;
      byteArray1[6] = (byte) (-56);
      byteArray1[7] = (byte)8;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte)8;
      byteArray2[1] = (byte) (-125);
      byteArray2[2] = (byte)67;
      byteArray2[3] = (byte) (-125);
      byteArray2[4] = (byte)115;
      byteArray2[5] = (byte) (-125);
      byteArray2[6] = (byte)7;
      byteArray2[7] = (byte)67;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[6];
      byteArray3[0] = (byte)21;
      byteArray3[1] = (byte) (-128);
      byteArray3[2] = (byte)8;
      byteArray3[3] = (byte)115;
      byteArray3[4] = (byte) (-128);
      byteArray3[5] = (byte)7;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[6];
      byteArray4[0] = (byte) (-56);
      byteArray4[1] = (byte)67;
      byteArray4[2] = (byte)115;
      byteArray4[3] = (byte)7;
      byteArray4[4] = (byte)115;
      byteArray4[5] = (byte) (-128);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[8];
      byteArray5[0] = (byte) (-14);
      byteArray5[1] = (byte) (-125);
      byteArray5[2] = (byte)67;
      byteArray5[3] = (byte)7;
      byteArray5[4] = (byte) (-128);
      byteArray5[5] = (byte)21;
      byteArray5[6] = (byte)67;
      byteArray5[7] = (byte)0;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[8];
      byteArray6[0] = (byte)21;
      byteArray6[1] = (byte) (-126);
      byteArray6[2] = (byte)8;
      byteArray6[3] = (byte) (-125);
      byteArray6[4] = (byte)76;
      byteArray6[5] = (byte)21;
      byteArray6[6] = (byte) (-56);
      byteArray6[7] = (byte)27;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[6];
      byteArray7[0] = (byte)76;
      byteArray7[1] = (byte)0;
      byteArray7[2] = (byte) (-126);
      byteArray7[3] = (byte)7;
      byteArray7[4] = (byte)7;
      byteArray7[5] = (byte)67;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[3];
      byteArray8[0] = (byte)28;
      byteArray8[1] = (byte)7;
      byteArray8[2] = (byte) (-126);
      byteArray0[7] = byteArray8;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(10, byteArray0);
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints0);
      int int0 = (-38);
      int int1 = 1941;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((byte)115, (-3041), byteArray4, byteArray8, byteArray3, byteArray3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("s`I*8:@{ibWe{X", zoneInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[6];
      TimeZone.getDefault();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("s`I*8:@{ibWe{X");
      categoryAxisArray0[0] = (CategoryAxis) subCategoryAxis0;
      CategoryAxis categoryAxis0 = new CategoryAxis("qPdPx9zjit+");
      categoryAxisArray0[1] = categoryAxis0;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      zoneInfo0.clone();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D("");
      categoryAxisArray0[5] = (CategoryAxis) categoryAxis3D1;
      CategoryAxis categoryAxis1 = new CategoryAxis();
      CategoryAxis categoryAxis2 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D2 = new CategoryAxis3D("H");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)69;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte)2;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(131, byteArray0);
      JFreeChart jFreeChart0 = new JFreeChart("s`I*8:@{ibWe{X", subCategoryAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeCategoryPlot0, true);
      jFreeChart0.getRenderingHints();
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.getDomainMarkers(500, layer0);
      combinedRangeCategoryPlot0.getRangeAxisCount();
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(true);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("", zoneInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[6];
      TimeZone.getDefault();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      categoryAxisArray0[0] = (CategoryAxis) subCategoryAxis0;
      CategoryAxis categoryAxis0 = new CategoryAxis("qPdPx9zjit+");
      categoryAxisArray0[1] = categoryAxis0;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      zoneInfo0.clone();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D("");
      categoryAxisArray0[5] = (CategoryAxis) categoryAxis3D1;
      CategoryAxis categoryAxis1 = new CategoryAxis();
      CategoryAxis categoryAxis2 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D2 = new CategoryAxis3D("H");
      combinedRangeCategoryPlot0.setDomainAxes(categoryAxisArray0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)69;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)2;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(131, byteArray0);
      JFreeChart jFreeChart0 = new JFreeChart("", subCategoryAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeCategoryPlot0, true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints0);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.getDomainMarkers(500, layer0);
      combinedRangeCategoryPlot0.getRangeAxisCount();
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(true);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1499, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      numberAxis0.clone();
      Line2D.Double line2D_Double0 = new Line2D.Double(15, 10, 100000.0, 2043.86216);
      line2D_Double0.getBounds2D();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      AffineTransform affineTransform0 = new AffineTransform(1.0E-8, 10, 0.05, 10.0, 15, 2);
      multiplePiePlot0.setParent(combinedRangeCategoryPlot0);
      affineTransform0.translate(10, 1.0F);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("k~n_", true, (-246.385382824));
      combinedRangeCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      Rectangle2D rectangle2D0 = affineTransformOp0.getBounds2D(bufferedImage0);
      combinedRangeCategoryPlot0.drawRangeCrosshair(graphics2D0, rectangle2D0, plotOrientation0, 1.0F, numberAxis0, numberAxis0.DEFAULT_AXIS_LINE_STROKE, multiplePiePlot0.DEFAULT_BACKGROUND_PAINT);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      combinedRangeCategoryPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("", zoneInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[6];
      TimeZone.getDefault();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      categoryAxisArray0[0] = (CategoryAxis) subCategoryAxis0;
      CategoryAxis categoryAxis0 = new CategoryAxis("qPdPx9zjit+");
      categoryAxisArray0[1] = categoryAxis0;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      zoneInfo0.clone();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D("");
      categoryAxisArray0[5] = (CategoryAxis) categoryAxis3D1;
      CategoryAxis categoryAxis1 = new CategoryAxis();
      CategoryAxis categoryAxis2 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D2 = new CategoryAxis3D("H");
      combinedRangeCategoryPlot0.setDomainAxes(categoryAxisArray0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)69;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)2;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(131, byteArray0);
      JFreeChart jFreeChart0 = new JFreeChart("", subCategoryAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeCategoryPlot0, true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints0);
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getDomainAxisLocation((int) (byte)2);
      combinedDomainCategoryPlot0.setDomainAxisLocation((int) (byte)2, axisLocation0, true);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      categoryAxis3D0.setAxisLineStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(10);
      AxisLocation.getOpposite(axisLocation0);
      axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      RingPlot ringPlot0 = new RingPlot();
      Paint paint0 = ringPlot0.getBaseSectionOutlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(1.0, paint0, ringPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainCategoryPlot0.addRangeMarker(10, (Marker) valueMarker0, (Layer) null);
      combinedDomainCategoryPlot0.setDrawSharedDomainAxis(false);
      ValueAxis[] valueAxisArray0 = new ValueAxis[1];
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot0.getRangeAxisEdge(10);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.getDomainMarkers(2958465, (Layer) null);
      combinedRangeCategoryPlot0.getRangeAxisCount();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Ku?!?*J");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      categoryItemRendererArray0[1] = (CategoryItemRenderer) lineAndShapeRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect((-3570));
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.render((Graphics2D) null, rectangle0, 2146472115, plotRenderingInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.drawDomainMarkers((Graphics2D) null, rectangle0, 0, layer0);
      combinedDomainCategoryPlot1.setRangeCrosshairValue(2500000.0, true);
      combinedRangeCategoryPlot0.getAnnotations();
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, rectangle0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      LinkedList<CombinedDataset> linkedList0 = new LinkedList<CombinedDataset>();
      categoryPlot0.getPlotType();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logarithmicAxis0);
      combinedRangeCategoryPlot0.zoom(1191.96296);
      JFreeChart jFreeChart0 = new JFreeChart("_Jm44o%s", combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, true);
      jFreeChart0.setBackgroundImageAlpha(1.0F);
      jFreeChart0.getRenderingHints();
      JFreeChart jFreeChart1 = new JFreeChart("CvPxq\\K", categoryPlot0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(logarithmicAxis0);
      combinedRangeCategoryPlot1.add((CategoryPlot) combinedRangeCategoryPlot0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot1.getDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot2 = new CombinedRangeCategoryPlot(logarithmicAxis0);
      combinedRangeCategoryPlot2.getDomainGridlinePosition();
      combinedRangeCategoryPlot0.getRowRenderingOrder();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedRangeCategoryPlot2.getCategories();
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage(305, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      chartRenderingInfo0.clone();
      JTableHeader jTableHeader0 = new JTableHeader();
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(10);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      categoryPlot0.render(graphics2D0, rectangle0, 0, plotRenderingInfo0);
      combinedRangeCategoryPlot2.setRangeAxis(4, (ValueAxis) logarithmicAxis0, true);
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      TreePath treePath0 = new TreePath(xYDatasetTableModel0);
      fixedHeightLayoutCache0.getBounds(treePath0, rectangle0);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.drawDomainMarkers(graphics2D0, (Rectangle2D) null, 2200, layer0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      Line2D.Double line2D_Double0 = new Line2D.Double(2132.0, 10, (-3828.496109283547), (-3828.496109283547));
      line2D_Double0.getBounds();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
      combinedRangeCategoryPlot0.getRowRenderingOrder();
      combinedRangeCategoryPlot0.getCategories();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRangeAxis((-1626), (ValueAxis) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      categoryPlot0.getFixedRangeAxisSpace();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1191.96296, "l%rF1E''pb9");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      categoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      categoryPlot0.getDataset();
      categoryPlot0.setRangeCrosshairPaint(combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      categoryPlot0.getAxisOffset();
      LinkedList<ValueMarker> linkedList0 = new LinkedList<ValueMarker>();
      categoryPlot0.drawRangeGridlines((Graphics2D) null, (Rectangle2D) null, linkedList0);
      combinedDomainCategoryPlot0.setDataset((CategoryDataset) null);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1499, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      numberAxis0.clone();
      Line2D.Double line2D_Double0 = new Line2D.Double(15, 10, 100000.0, 2043.86216);
      line2D_Double0.getBounds2D();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      AffineTransform affineTransform0 = arrowNeedle0.getTransform();
      multiplePiePlot0.setParent(combinedRangeCategoryPlot0);
      affineTransform0.translate(10, 1.0F);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      Rectangle2D rectangle2D0 = affineTransformOp0.getBounds2D(bufferedImage0);
      combinedRangeCategoryPlot0.drawRangeCrosshair(graphics2D0, rectangle2D0, plotOrientation0, 1.0F, numberAxis0, numberAxis0.DEFAULT_AXIS_LINE_STROKE, multiplePiePlot0.DEFAULT_BACKGROUND_PAINT);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      combinedRangeCategoryPlot1.configureDomainAxes();
      combinedRangeCategoryPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      Graphics2D graphics2D0 = null;
      Line2D.Double line2D_Double0 = new Line2D.Double(3105.748244164268, (-551.684), 3105.748244164268, (-328.47271222993));
      line2D_Double0.getBounds();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setBaseStroke((Stroke) basicStroke0);
      defaultPolarItemRenderer0.getItemOutlinePaint(1528, (-552));
      basicStroke0.getDashArray();
      double[][] doubleArray0 = new double[1][2];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (-1.7976931348623157E308);
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("FktkkH6B6w3< 8@");
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getAnchorValue();
      categoryPlot0.getIndexOf(statisticalLineAndShapeRenderer0);
      categoryPlot0.clearDomainMarkers();
      MultiListUI multiListUI0 = new MultiListUI();
      DateAxis[] dateAxisArray0 = new DateAxis[0];
      JList<DateAxis> jList0 = new JList<DateAxis>(dateAxisArray0);
      // Undeclared exception!
      try { 
        multiListUI0.getCellBounds(jList0, 224, 10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      categoryPlot0.getFixedRangeAxisSpace();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "Category Plot");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      categoryPlot0.getDataset();
      categoryPlot0.setRangeCrosshairPaint(combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      categoryPlot0.getAxisOffset();
      LinkedList<ValueMarker> linkedList0 = new LinkedList<ValueMarker>();
      combinedDomainCategoryPlot0.setDataset((CategoryDataset) null);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      LinkedList<CombinedDataset> linkedList0 = new LinkedList<CombinedDataset>();
      categoryPlot0.getPlotType();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logarithmicAxis0);
      combinedRangeCategoryPlot0.zoom(1191.96296);
      JFreeChart jFreeChart0 = new JFreeChart("_Jm44o%s", combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, true);
      jFreeChart0.setBackgroundImageAlpha(1.0F);
      jFreeChart0.getRenderingHints();
      JFreeChart jFreeChart1 = new JFreeChart("CvPxq\\K", categoryPlot0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(logarithmicAxis0);
      combinedRangeCategoryPlot1.add((CategoryPlot) combinedRangeCategoryPlot0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot1.getDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot2 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot2.getDomainGridlinePosition();
      combinedRangeCategoryPlot0.getRowRenderingOrder();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage(305, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      chartRenderingInfo0.clone();
      JTableHeader jTableHeader0 = new JTableHeader();
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(10);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      categoryPlot0.render(graphics2D0, rectangle0, 0, plotRenderingInfo0);
      combinedRangeCategoryPlot2.setRangeAxis(4, (ValueAxis) numberAxis0, true);
      categoryPlot0.setDataset(2, (CategoryDataset) null);
      combinedRangeCategoryPlot2.getIndexOf((CategoryItemRenderer) null);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BasicStroke basicStroke0 = new BasicStroke(10);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(2362);
      AxisLocation.getOpposite(axisLocation0);
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxis3D0.setAxisLineVisible(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F, "Null 'layer' not permitted.");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.getRowRenderingOrder();
      categoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRowRenderingOrder();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2132, 10, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      chartRenderingInfo0.clone();
      JTableHeader jTableHeader0 = new JTableHeader();
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(1);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot1.render((Graphics2D) null, rectangle0, 8, plotRenderingInfo0);
      combinedRangeCategoryPlot0.setRangeAxis(2132, (ValueAxis) cyclicNumberAxis0, true);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setAxisOffset(categoryAxis0.DEFAULT_TICK_LABEL_INSETS);
      combinedDomainCategoryPlot0.isDomainGridlinesVisible();
      combinedDomainCategoryPlot0.setRangeCrosshairPaint(categoryAxis3D0.DEFAULT_AXIS_LABEL_PAINT);
      PiePlot piePlot0 = new PiePlot();
      piePlot0.setExplodePercent(0.2, 10);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(3290.23201496, 1160.7126656, 0.0F, (-4782.9204781));
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot1.getRangeCrosshairPaint();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setAxisOffset((RectangleInsets) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'offset' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("O^");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      int int0 = (-3041);
      combinedDomainCategoryPlot0.getDomainAxis((-3041));
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      int int1 = 713;
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage((-3041), 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (-3041) and height (1) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      cyclicNumberAxis0.getAdvanceLineStroke();
      CategoryAxis categoryAxis0 = new CategoryAxis("%v");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      CategoryAxis categoryAxis1 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis1);
      combinedRangeCategoryPlot0.setAnchorValue(305.0, true);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("QGD$wb7!{>tP<},t");
      subCategoryAxis0.removeChangeListener(combinedRangeCategoryPlot0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[2] = (ValueAxis) cyclicNumberAxis0;
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot0.getRangeAxisEdge(500);
      combinedDomainCategoryPlot0.setRangeGridlinePaint(combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedRangeCategoryPlot0.getRangeCrosshairPaint();
      combinedDomainCategoryPlot0.getDomainGridlinePaint();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRenderers((CategoryItemRenderer[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("", zoneInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[6];
      TimeZone.getDefault();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      categoryAxisArray0[0] = (CategoryAxis) subCategoryAxis0;
      CategoryAxis categoryAxis0 = new CategoryAxis("qPdPx9zjit+");
      categoryAxisArray0[1] = categoryAxis0;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxisArray0[2] = (CategoryAxis) categoryAxis3D0;
      zoneInfo0.clone();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D("");
      categoryAxisArray0[5] = (CategoryAxis) categoryAxis3D1;
      CategoryAxis categoryAxis1 = new CategoryAxis();
      CategoryAxis categoryAxis2 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D2 = new CategoryAxis3D("H");
      combinedRangeCategoryPlot0.setDomainAxes(categoryAxisArray0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)69;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)2;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(131, byteArray0);
      JFreeChart jFreeChart0 = new JFreeChart("", subCategoryAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeCategoryPlot0, true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints0);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.getDomainMarkers(500, layer0);
      combinedRangeCategoryPlot0.getRangeAxisCount();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      categoryAxis3D0.setAxisLineStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(10);
      AxisLocation.getOpposite(axisLocation0);
      axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      RingPlot ringPlot0 = new RingPlot();
      Paint paint0 = ringPlot0.getBaseSectionOutlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(1.0, paint0, ringPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainCategoryPlot0.addRangeMarker(10, (Marker) valueMarker0, (Layer) null);
      combinedDomainCategoryPlot0.setDrawSharedDomainAxis(false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainMarkers(500, (Layer) null);
      combinedRangeCategoryPlot0.getRangeAxisCount();
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(false);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      categoryAxis0.setTickMarkStroke(combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      ValueAxis[] valueAxisArray0 = new ValueAxis[7];
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      valueAxisArray0[1] = (ValueAxis) periodAxis0;
      valueAxisArray0[2] = (ValueAxis) periodAxis0;
      valueAxisArray0[3] = (ValueAxis) periodAxis0;
      combinedRangeCategoryPlot0.setAnchorValue((double) 0.0F, false);
      valueAxisArray0[4] = (ValueAxis) periodAxis0;
      valueAxisArray0[5] = (ValueAxis) periodAxis0;
      categoryAxis0.removeChangeListener(combinedRangeCategoryPlot0);
      valueAxisArray0[6] = (ValueAxis) periodAxis0;
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot0.getRangeAxisEdge(57);
      combinedDomainCategoryPlot0.setRangeGridlinePaint(periodAxis0.DEFAULT_TICK_MARK_PAINT);
      combinedRangeCategoryPlot0.getRangeCrosshairPaint();
      combinedDomainCategoryPlot0.getDomainGridlinePaint();
      combinedDomainCategoryPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryPlot0.addRangeMarker((Marker) categoryMarker0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.add(categoryPlot0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.getDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot1.getRangeAxisLocation(10);
      combinedRangeCategoryPlot0.setDomainAxisLocation(10, axisLocation0, true);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
      combinedRangeCategoryPlot1.getRowRenderingOrder();
      JTableHeader jTableHeader0 = new JTableHeader();
      combinedRangeCategoryPlot0.setRangeAxis(4081, (ValueAxis) numberAxis0, false);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      gridBagLayout0.location((-3677), 4081);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2775.072011801804, (-1550.904105802));
      cyclicNumberAxis0.getAdvanceLineStroke();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxis3D0.setAxisLineStroke(categoryPlot0.DEFAULT_GRIDLINE_STROKE);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation((-3570));
      AxisLocation axisLocation1 = AxisLocation.getOpposite(axisLocation0);
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation1, false);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      RingPlot ringPlot0 = new RingPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.clearRangeMarkers();
      combinedDomainCategoryPlot1.getRowRenderingOrder();
      combinedDomainCategoryPlot0.getAnchorValue();
      categoryPlot0.getDomainAxisCount();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[7];
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      valueAxisArray0[1] = (ValueAxis) periodAxis0;
      valueAxisArray0[2] = (ValueAxis) periodAxis0;
      valueAxisArray0[3] = (ValueAxis) periodAxis0;
      combinedRangeCategoryPlot0.setAnchorValue((double) 0.0F, false);
      valueAxisArray0[4] = (ValueAxis) periodAxis0;
      valueAxisArray0[5] = (ValueAxis) periodAxis0;
      categoryAxis0.removeChangeListener(combinedRangeCategoryPlot0);
      valueAxisArray0[6] = (ValueAxis) periodAxis0;
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot0.getRangeAxisEdge(57);
      combinedDomainCategoryPlot0.setRangeGridlinePaint(periodAxis0.DEFAULT_TICK_MARK_PAINT);
      combinedRangeCategoryPlot0.getRangeCrosshairPaint();
      combinedDomainCategoryPlot0.getDomainGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryPlot0.addRangeMarker((Marker) categoryMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("MWMW=V", categoryPlot0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.add(categoryPlot0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.getDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
      combinedRangeCategoryPlot1.getRowRenderingOrder();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      chartRenderingInfo0.clone();
      JTableHeader jTableHeader0 = new JTableHeader();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Ku?!?*J");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      categoryItemRendererArray0[1] = (CategoryItemRenderer) lineAndShapeRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect((-3570));
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.render((Graphics2D) null, rectangle0, 2146472115, plotRenderingInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Ku?!?*J");
      combinedRangeCategoryPlot0.setRangeAxis(10, (ValueAxis) numberAxis3D0, false);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryPlot0.addRangeMarker((Marker) categoryMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("MWMW=V", categoryPlot0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.add(categoryPlot0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.getDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
      combinedRangeCategoryPlot1.getRowRenderingOrder();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(305, 10, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      chartRenderingInfo0.clone();
      JTableHeader jTableHeader0 = new JTableHeader();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryMarker0.setLabelFont(categoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      categoryPlot0.addRangeMarker((Marker) categoryMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("MWMW=V", categoryPlot0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.add(categoryPlot0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.getDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
      combinedRangeCategoryPlot1.getRowRenderingOrder();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.clear();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      combinedRangeCategoryPlot1.setRangeCrosshairPaint(combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      categoryPlot0.getAxisOffset();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot2 = new CombinedRangeCategoryPlot();
      Color color0 = Color.magenta;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      ModuloAxis moduloAxis0 = new ModuloAxis((String) null, logarithmicAxis0.DEFAULT_RANGE);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(moduloAxis0);
      combinedRangeCategoryPlot0.zoom((-1550.904105802));
      JFreeChart jFreeChart0 = new JFreeChart("Chart_Properties", combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, true);
      jFreeChart0.setBackgroundImageAlpha(3.0F);
      jFreeChart0.getRenderingHints();
      JFreeChart jFreeChart1 = new JFreeChart((String) null, combinedDomainCategoryPlot0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(moduloAxis0);
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot1);
      combinedRangeCategoryPlot1.isRangeZoomable();
      combinedRangeCategoryPlot1.getDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot2 = new CombinedRangeCategoryPlot(logarithmicAxis0);
      combinedRangeCategoryPlot1.getDomainGridlinePosition();
      combinedRangeCategoryPlot2.getRowRenderingOrder();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxis((-3657), (ValueAxis) numberAxis0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      categoryPlot0.setDomainGridlineStroke(basicStroke0);
      categoryPlot0.getFixedLegendItems();
      categoryPlot0.getFixedRangeAxisSpace();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Graphics2D graphics2D0 = null;
      String string0 = "";
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      Point point0 = new Point();
      Point point1 = chartPanel0.getLocation(point0);
      Rectangle rectangle0 = null;
      try {
        rectangle0 = new Rectangle(point1, (Dimension) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Rectangle", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      combinedRangeCategoryPlot0.zoom(0.0F);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      jFreeChart0.setBackgroundImageAlpha(1.0F);
      jFreeChart0.getRenderingHints();
      JFreeChart jFreeChart1 = new JFreeChart("%8", combinedRangeCategoryPlot0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.getDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot2 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot2.getDomainGridlinePosition();
      combinedRangeCategoryPlot2.getRowRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("", zoneInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      TimeZone.getDefault();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("'L");
      Range range0 = Range.shift((Range) dateAxis0.DEFAULT_DATE_RANGE, (double) 1.0F, true);
      ModuloAxis moduloAxis0 = new ModuloAxis("'L", range0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(moduloAxis0);
      combinedRangeCategoryPlot0.zoom((-551.684));
      JFreeChart jFreeChart0 = new JFreeChart("'L", moduloAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeCategoryPlot0, true);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedRangeCategoryPlot1.setDomainAxisLocation(axisLocation0);
      jFreeChart0.setBackgroundImageAlpha(2099.4F);
      jFreeChart0.getRenderingHints();
      JFreeChart jFreeChart1 = new JFreeChart("=|o8gJz", combinedRangeCategoryPlot1);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot2 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot2.add((CategoryPlot) combinedRangeCategoryPlot0);
      combinedRangeCategoryPlot2.isRangeZoomable();
      combinedRangeCategoryPlot0.getDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot3 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot1.getDomainGridlinePosition();
      combinedRangeCategoryPlot0.getRowRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1499, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      numberAxis0.clone();
      Line2D.Double line2D_Double0 = new Line2D.Double(15, 10, 100000.0, 2043.86216);
      line2D_Double0.getBounds2D();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      AffineTransform affineTransform0 = arrowNeedle0.getTransform();
      multiplePiePlot0.setParent(combinedRangeCategoryPlot0);
      affineTransform0.translate(10, 1.0F);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      Rectangle2D rectangle2D0 = affineTransformOp0.getBounds2D(bufferedImage0);
      combinedRangeCategoryPlot0.drawRangeCrosshair(graphics2D0, rectangle2D0, plotOrientation0, 1.0F, numberAxis0, numberAxis0.DEFAULT_AXIS_LINE_STROKE, multiplePiePlot0.DEFAULT_BACKGROUND_PAINT);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      combinedRangeCategoryPlot1.getDomainMarkers(layer0);
      combinedRangeCategoryPlot1.setRangeCrosshairLockedOnData(false);
      combinedRangeCategoryPlot0.getAnnotations();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      categoryAxis3D0.setAxisLineStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.setRangeCrosshairLockedOnData(true);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(10);
      AxisLocation.getOpposite(axisLocation0);
      axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, true);
      Color color0 = (Color)AbstractRenderer.DEFAULT_OUTLINE_PAINT;
      categoryAxis3D0.setTickLabelPaint((Comparable) 0.0F, (Paint) color0);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      RingPlot ringPlot0 = new RingPlot();
      Paint paint0 = ringPlot0.getBaseSectionOutlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(1.0, paint0, ringPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainCategoryPlot0.getRangeMarkers(10, (Layer) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      categoryAxis3D0.setAxisLineStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.setRangeCrosshairLockedOnData(true);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(10);
      AxisLocation.getOpposite(axisLocation0);
      axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, true);
      Color color0 = (Color)AbstractRenderer.DEFAULT_OUTLINE_PAINT;
      categoryAxis3D0.setTickLabelPaint((Comparable) 0.0F, (Paint) color0);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      RingPlot ringPlot0 = new RingPlot();
      Paint paint0 = ringPlot0.getBaseSectionOutlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(1.0, paint0, ringPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainCategoryPlot0.getRangeMarkers(10, (Layer) null);
      ValueAxis[] valueAxisArray0 = new ValueAxis[1];
      valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis0;
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot0.getRangeAxisEdge(10);
      boolean boolean0 = CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE;
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      combinedDomainCategoryPlot0.setRenderer((CategoryItemRenderer) stackedBarRenderer0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      categoryAxis3D0.setAxisLineStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      cyclicNumberAxis0.setUpperBound((-340.4810689630423));
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 500, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      combinedDomainCategoryPlot0.clone();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      combinedDomainCategoryPlot0.clearDomainAxes();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.setRangeGridlineStroke(cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      categoryAxis3D0.setAxisLineStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      cyclicNumberAxis0.setUpperBound((-340.4810689630423));
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 500, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      combinedDomainCategoryPlot0.clone();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.setRangeGridlineStroke(cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainCategoryPlot1.getPlotType();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      LinkedList<CombinedDataset> linkedList0 = new LinkedList<CombinedDataset>();
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      AxisLocation axisLocation0 = categoryPlot0.getDomainAxisLocation(10);
      AxisLocation.getOpposite(axisLocation0);
      axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.getBaseSectionOutlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(3355.9, ringPlot0.DEFAULT_LABEL_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainCategoryPlot0.addRangeMarker(9, (Marker) valueMarker0, (Layer) null);
      combinedDomainCategoryPlot0.setDrawSharedDomainAxis(true);
      ValueAxis[] valueAxisArray0 = new ValueAxis[4];
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(";'nVuE<_Bd");
      valueAxisArray0[0] = (ValueAxis) logarithmicAxis0;
      ModuloAxis moduloAxis0 = new ModuloAxis("", logarithmicAxis0.DEFAULT_RANGE);
      valueAxisArray0[1] = (ValueAxis) moduloAxis0;
      DateAxis dateAxis0 = new DateAxis(";'nVuE<_Bd");
      valueAxisArray0[2] = (ValueAxis) dateAxis0;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1556.7241017751903, "");
      valueAxisArray0[3] = (ValueAxis) cyclicNumberAxis0;
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot0.getRangeAxisEdge(9);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Ku?!?*J");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      categoryAxis3D0.clone();
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      categoryItemRendererArray0[1] = (CategoryItemRenderer) lineAndShapeRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      combinedDomainCategoryPlot0.getRendererForDataset(defaultStatisticalCategoryDataset0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      CategoryAnchor categoryAnchor0 = CategoryAnchor.MIDDLE;
      combinedDomainCategoryPlot0.setDomainGridlinePosition(categoryAnchor0);
      combinedDomainCategoryPlot1.getCategoriesForAxis((CategoryAxis) null);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.isDomainGridlinesVisible();
      combinedRangeCategoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      combinedDomainCategoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      combinedRangeCategoryPlot0.getDataset();
      combinedRangeCategoryPlot0.getAxisOffset();
      LinkedList<ValueMarker> linkedList0 = new LinkedList<ValueMarker>();
      combinedDomainCategoryPlot0.drawRangeGridlines((Graphics2D) null, (Rectangle2D) null, linkedList0);
      combinedRangeCategoryPlot0.getFixedLegendItems();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      categoryAxis3D0.setAxisLineStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart("", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, combinedDomainCategoryPlot0, false);
      jFreeChart0.setBackgroundImageAlpha(0.0F);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart1 = multiplePiePlot0.getPieChart();
      jFreeChart1.getRenderingHints();
      JFreeChart jFreeChart2 = new JFreeChart("", combinedDomainCategoryPlot0);
      NumberAxis numberAxis0 = new NumberAxis();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.getDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot1.getDomainGridlinePosition();
      combinedRangeCategoryPlot0.getRowRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) categoryMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("MWMW=V", combinedDomainCategoryPlot0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("MWMW=V");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot1.getRangeGridlinePaint();
      CategoryMarker categoryMarker1 = new CategoryMarker(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot1.clearRangeMarkers();
      combinedDomainCategoryPlot1.getRowRenderingOrder();
      boolean boolean0 = CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE;
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      Line2D.Double line2D_Double0 = new Line2D.Double(3105.748244164268, 1191.96296, (-3828.496109283547), (-3828.496109283547));
      Rectangle rectangle0 = line2D_Double0.getBounds();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      rectangle0.width = (-3086);
      Paint paint0 = defaultPolarItemRenderer0.getItemOutlinePaint(250, (-451));
      // Undeclared exception!
      try { 
        categoryPlot0.drawRangeLine((Graphics2D) null, rectangle0, 1191.96296, basicStroke0, paint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      categoryPlot0.setAnchorValue((-1.0), true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      categoryPlot0.getDomainAxisEdge(0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      categoryPlot0.addDomainMarker(categoryMarker0, layer0);
      categoryPlot0.equals(stroke0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      categoryPlot0.getFixedRangeAxisSpace();
      categoryPlot0.getDomainAxisEdge((-621));
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      StandardTickUnitSource standardTickUnitSource0 = new StandardTickUnitSource();
      standardTickUnitSource0.getCeilingTickUnit(689.33322);
      Layer layer1 = Layer.BACKGROUND;
      categoryPlot0.addDomainMarker(categoryMarker0, layer0);
      categoryPlot0.equals(categoryMarker0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.isDomainGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
      combinedRangeCategoryPlot0.zoom(1191.96296);
      JFreeChart jFreeChart0 = new JFreeChart(",", combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, true);
      jFreeChart0.setBackgroundImageAlpha(844.5889F);
      jFreeChart0.getRenderingHints();
      JFreeChart jFreeChart1 = new JFreeChart(",", combinedRangeCategoryPlot0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot1.add((CategoryPlot) combinedRangeCategoryPlot0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot1.getDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot2 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
      combinedRangeCategoryPlot0.getRowRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.getRangeMarkers(layer0);
      Layer layer1 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.getDomainMarkers(layer1);
      combinedRangeCategoryPlot0.clearRangeAxes();
      combinedRangeCategoryPlot0.setRangeCrosshairVisible(false);
      combinedRangeCategoryPlot0.getDataset(308);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(14, 0, (byte[]) null, (byte[]) null, (byte[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Map size (0) must be >= 1
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("\u00B0F");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedDomainCategoryPlot0.isRangeGridlinesVisible();
      int int0 = 0;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(500000.0, 10);
      cyclicNumberAxis0.getAdvanceLineStroke();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxis3D0.setAxisLineStroke(subCategoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(categoryAxis3D1);
      combinedDomainCategoryPlot2.getDomainAxisLocation(0);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation();
      AxisLocation.getOpposite(axisLocation0);
      axisLocation0.getOpposite();
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      PaintScale paintScale0 = xYBlockRenderer0.getPaintScale();
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, cyclicNumberAxis0);
      AxisLocation axisLocation1 = paintScaleLegend0.getAxisLocation();
      combinedDomainCategoryPlot2.setDomainAxisLocation(axisLocation1, true);
      combinedDomainCategoryPlot2.getRangeGridlinePaint();
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.getBaseSectionOutlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(0, combinedDomainCategoryPlot2.DEFAULT_BACKGROUND_PAINT, xYBlockRenderer0.DEFAULT_STROKE);
      ValueMarker valueMarker1 = new ValueMarker(90.0);
      combinedDomainCategoryPlot2.addRangeMarker(10, (Marker) valueMarker1, (Layer) null);
      combinedDomainCategoryPlot0.setDrawSharedDomainAxis(true);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot2.setRangeAxes((ValueAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BasicStroke basicStroke0 = new BasicStroke(10);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(2362);
      AxisLocation.getOpposite(axisLocation0);
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxis3D0.setAxisLineVisible(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F, "Null 'layer' not permitted.");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.getRowRenderingOrder();
      categoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[8];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[2] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[3] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[4] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[5] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[6] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[7] = (CategoryItemRenderer) areaRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      categoryPlot0.getRendererForDataset(defaultStatisticalCategoryDataset0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateDomainAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Ku?!?*J");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      categoryAxis3D0.clone();
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      categoryItemRendererArray0[1] = (CategoryItemRenderer) lineAndShapeRenderer0;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      combinedDomainCategoryPlot0.getRendererForDataset(defaultStatisticalCategoryDataset0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getCategoriesForAxis((CategoryAxis) null);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      categoryPlot0.getFixedRangeAxisSpace();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1191.96296, "l%rF1E''pb9");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      categoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      categoryPlot0.getDataset();
      categoryPlot0.setRangeCrosshairPaint(combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      categoryPlot0.getAxisOffset();
      JTableHeader jTableHeader0 = new JTableHeader();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      combinedDomainCategoryPlot0.getRendererForDataset((CategoryDataset) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
      combinedDomainCategoryPlot0.setDomainGridlinePosition(categoryAnchor0);
      combinedDomainCategoryPlot1.getCategoriesForAxis((CategoryAxis) null);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers((-1326), layer0);
      combinedDomainCategoryPlot0.getRangeCrosshairPaint();
      combinedDomainCategoryPlot0.getLegendItems();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedDomainCategoryPlot0.getRangeAxisLocation(178);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(92, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      combinedDomainCategoryPlot0.clone();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getAnchorValue();
      combinedDomainCategoryPlot1.clearRangeMarkers();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      categoryPlot0.setDomainGridlineStroke(basicStroke0);
      categoryPlot0.getLegendItems();
      categoryPlot0.clearRangeMarkers(1360);
      categoryPlot0.getDomainMarkers((Layer) null);
      categoryPlot0.getRangeCrosshairValue();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      categoryPlot0.setAnchorValue((-1.0), true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      categoryPlot0.getDomainAxisEdge(0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDomainAxis(4001, (CategoryAxis) null, true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.getDomainGridlinePosition();
      combinedRangeCategoryPlot1.getDomainAxisEdge(10);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      categoryAxis3D0.setAxisLineStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(10);
      AxisLocation.getOpposite(axisLocation0);
      axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      RingPlot ringPlot0 = new RingPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(0.2);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.clearRangeMarkers();
      combinedDomainCategoryPlot0.getDomainAxisForDataset(71);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeCrosshairPaint();
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(92, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot)combinedDomainCategoryPlot0.clone();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      combinedDomainCategoryPlot1.getDomainAxisForDataset(1193);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      categoryPlot0.setAnchorValue((-1.0), true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.getDomainAxisForDataset(0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      categoryPlot0.clearRangeMarkers((-1));
      categoryPlot0.getDomainMarkers((Layer) null);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[4];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[2] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[3] = (CategoryItemRenderer) areaRenderer0;
      categoryPlot0.setRenderers(categoryItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      categoryAxis3D0.setAxisLineStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(10);
      AxisLocation.getOpposite(axisLocation0);
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
      categoryAxis3D0.setAxisLineVisible(false);
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(0.0F, 1191.96296, "v5HZH");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      combinedDomainCategoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[0];
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.isDomainGridlinesVisible();
      combinedRangeCategoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      combinedDomainCategoryPlot0.remove(combinedRangeCategoryPlot0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainCategoryPlot0.getAxisOffset();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      Color color0 = Color.magenta;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.getRangeMarkers(layer0);
      combinedRangeCategoryPlot0.zoom(1191.96296);
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers((-1331), layer0);
      combinedDomainCategoryPlot0.getRangeCrosshairPaint();
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      combinedDomainCategoryPlot0.setFixedLegendItems(legendItemCollection0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(92, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      combinedDomainCategoryPlot0.clone();
      PeriodAxis periodAxis0 = new PeriodAxis("6tX$F*H^L]$w_-Cj");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      combinedRangeCategoryPlot0.setDomainAxis(1, categoryAxis0, false);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      categoryAxis3D0.setAxisLineStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(10);
      AxisLocation.getOpposite(axisLocation0);
      axisLocation0.getOpposite();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setAnchorValue(1.0E-8, false);
      categoryAxis3D0.removeChangeListener(combinedRangeCategoryPlot0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxes((ValueAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getFixedRangeAxisSpace();
      combinedRangeCategoryPlot0.setRangeCrosshairPaint(combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      Color color0 = Color.magenta;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[7];
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      valueAxisArray0[1] = (ValueAxis) periodAxis0;
      valueAxisArray0[2] = (ValueAxis) periodAxis0;
      valueAxisArray0[3] = (ValueAxis) periodAxis0;
      combinedRangeCategoryPlot0.setAnchorValue((double) 0.0F, false);
      valueAxisArray0[4] = (ValueAxis) periodAxis0;
      valueAxisArray0[5] = (ValueAxis) periodAxis0;
      categoryAxis0.removeChangeListener(combinedRangeCategoryPlot0);
      valueAxisArray0[6] = (ValueAxis) periodAxis0;
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot0.getRangeAxisEdge(57);
      combinedRangeCategoryPlot0.getRangeCrosshairPaint();
      combinedDomainCategoryPlot0.getDomainGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[7];
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      valueAxisArray0[1] = (ValueAxis) periodAxis0;
      valueAxisArray0[2] = (ValueAxis) periodAxis0;
      valueAxisArray0[3] = (ValueAxis) periodAxis0;
      valueAxisArray0[4] = (ValueAxis) periodAxis0;
      valueAxisArray0[5] = (ValueAxis) periodAxis0;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.addRangeMarker((-2412), (Marker) categoryMarker0, layer0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot2.getSubplots();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(valueAxisArray0[3]);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      categoryAxis3D0.setAxisLineStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(10);
      AxisLocation.getOpposite(axisLocation0);
      axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, true);
      Color color0 = (Color)AbstractRenderer.DEFAULT_OUTLINE_PAINT;
      categoryAxis3D0.setTickLabelPaint((Comparable) 0.0F, (Paint) color0);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      RingPlot ringPlot0 = new RingPlot();
      Paint paint0 = ringPlot0.getBaseSectionOutlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(1.0, paint0, ringPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainCategoryPlot0.getRangeMarkers(10, (Layer) null);
      ValueAxis[] valueAxisArray0 = new ValueAxis[1];
      valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis0;
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot0.getRangeAxisEdge(10);
      combinedDomainCategoryPlot0.getDrawSharedDomainAxis();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers((-1326), layer0);
      combinedDomainCategoryPlot0.getRangeCrosshairPaint();
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(92, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      Object object0 = combinedDomainCategoryPlot0.clone();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      combinedDomainCategoryPlot0.clearDomainAxes();
      combinedDomainCategoryPlot0.setRangeGridlineStroke(((CategoryPlot) object0).DEFAULT_CROSSHAIR_STROKE);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[7];
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      valueAxisArray0[1] = (ValueAxis) periodAxis0;
      valueAxisArray0[2] = (ValueAxis) periodAxis0;
      valueAxisArray0[3] = (ValueAxis) periodAxis0;
      valueAxisArray0[4] = (ValueAxis) periodAxis0;
      valueAxisArray0[5] = (ValueAxis) periodAxis0;
      valueAxisArray0[6] = (ValueAxis) periodAxis0;
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      combinedDomainCategoryPlot0.clearRangeMarkers();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      categoryPlot0.setDomainGridlineStroke(basicStroke0);
      categoryPlot0.getLegendItems();
      categoryPlot0.clearRangeMarkers(1);
      categoryPlot0.getDomainMarkers((Layer) null);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      boolean boolean0 = CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
      combinedRangeCategoryPlot0.configureRangeAxes();
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.getDomainMarkers(layer0);
      combinedRangeCategoryPlot0.clearRangeAxes();
      combinedRangeCategoryPlot0.setRangeCrosshairVisible(false);
      combinedRangeCategoryPlot0.getDataset(0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot((ValueAxis) null);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot1.getRangeAxisLocation();
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation1, true);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      RingPlot ringPlot0 = new RingPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("{0}: ({1}, {2})");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot2.clearRangeMarkers();
      combinedDomainCategoryPlot0.getDomainAxisForDataset(10);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      Line2D.Double line2D_Double0 = new Line2D.Double(3105.748244164268, 10, (-3828.496109283547), (-3828.496109283547));
      Rectangle rectangle0 = line2D_Double0.getBounds();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      rectangle0.width = (-3086);
      Paint paint0 = defaultPolarItemRenderer0.getItemOutlinePaint(250, (-451));
      // Undeclared exception!
      try { 
        categoryPlot0.drawRangeLine((Graphics2D) null, rectangle0, 1191.96296, basicStroke0, paint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("", zoneInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[6];
      TimeZone.getDefault();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("SansSeif");
      categoryAxisArray0[0] = (CategoryAxis) subCategoryAxis0;
      CategoryAxis categoryAxis0 = new CategoryAxis("qPdPx9zjit+");
      categoryAxisArray0[1] = categoryAxis0;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("SansSeif");
      categoryAxisArray0[2] = (CategoryAxis) categoryAxis3D0;
      zoneInfo0.clone();
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setFixedLegendItems(legendItemCollection0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      Object object0 = new Object();
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.getDomainMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1499, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      numberAxis0.clone();
      Line2D.Double line2D_Double0 = new Line2D.Double(1.0F, 1.0E-8, 0.05, 0.0);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedRangeCategoryPlot0.drawRangeCrosshair(graphics2D0, rectangle2D0, plotOrientation0, (-840.5), numberAxis0, multiplePiePlot0.DEFAULT_OUTLINE_STROKE, numberAxis0.DEFAULT_AXIS_LINE_PAINT);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot1.setDomainAxis(37, (CategoryAxis) null, false);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1499, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      numberAxis0.clone();
      Line2D.Double line2D_Double0 = new Line2D.Double(1.0F, 1.0E-8, 0.05, 0.0);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedRangeCategoryPlot0.drawRangeCrosshair(graphics2D0, rectangle2D0, plotOrientation0, 500, numberAxis0, multiplePiePlot0.DEFAULT_OUTLINE_STROKE, numberAxis0.DEFAULT_AXIS_LINE_PAINT);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      combinedRangeCategoryPlot1.getDomainMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("", zoneInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[6];
      TimeZone.getDefault();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("SansSeif");
      categoryAxisArray0[0] = (CategoryAxis) subCategoryAxis0;
      CategoryAxis categoryAxis0 = new CategoryAxis("qPdPx9zjit+");
      categoryAxisArray0[1] = categoryAxis0;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxisArray0[2] = (CategoryAxis) categoryAxis3D0;
      zoneInfo0.clone();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D("');\" onMouseOut=\"return nd();\"");
      categoryAxisArray0[3] = (CategoryAxis) categoryAxis3D1;
      CategoryAxis categoryAxis1 = new CategoryAxis();
      categoryAxisArray0[4] = categoryAxis1;
      categoryAxis1.clone();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultStatisticalCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3046, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      combinedRangeCategoryPlot0.clone();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.getDomainMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(2362);
      AxisLocation.getOpposite(axisLocation0);
      Paint paint0 = combinedDomainCategoryPlot0.getRangeCrosshairPaint();
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      combinedDomainCategoryPlot0.setFixedLegendItems(legendItemCollection0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(5, 2, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      categoryPlot0.clone();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      CategoryMarker categoryMarker0 = new CategoryMarker(10, ganttRenderer0.DEFAULT_OUTLINE_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE, paint0, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE, 1.0F);
      categoryMarker0.setKey(10);
      categoryPlot0.addRangeMarker(2, (Marker) categoryMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedDomainCategoryPlot0.remove(combinedRangeCategoryPlot0);
      combinedDomainCategoryPlot0.clearRangeAxes();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis3D0);
      combinedRangeCategoryPlot1.getFixedRangeAxisSpace();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(45.7728, 1.0F);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.getDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Ku?!?*J");
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, subCategoryAxis0, cyclicNumberAxis0, categoryStepRenderer0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot1 = new CategoryPlot((CategoryDataset) null, subCategoryAxis0, numberAxis3D0, categoryStepRenderer0);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.2, categoryStepRenderer0.DEFAULT_VALUE_LABEL_PAINT, cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot1.addDomainMarker(categoryMarker0, layer0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedRangeCategoryPlot0.clone();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      categoryPlot1.equals(stackedBarRenderer3D0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      int int0 = 0;
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      categoryPlot0.setAnchorValue((-1.0), true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.getRangeGridlinePaint();
      categoryPlot0.clearDomainMarkers(6);
      categoryPlot0.getOrientation();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(561, (-3284), 5);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.DataBufferByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.isDomainGridlinesVisible();
      combinedRangeCategoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      combinedDomainCategoryPlot0.remove(combinedRangeCategoryPlot0);
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
      PeriodAxis periodAxis0 = new PeriodAxis("Category Plot");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(periodAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot2 = new CombinedRangeCategoryPlot(periodAxis0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot2.setDomainAxis((-401), categoryAxis0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      categoryAxis3D0.setAxisLineStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(10);
      AxisLocation.getOpposite(axisLocation0);
      axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, true);
      Color color0 = (Color)AbstractRenderer.DEFAULT_OUTLINE_PAINT;
      categoryAxis3D0.setTickLabelPaint((Comparable) 0.0F, (Paint) color0);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      RingPlot ringPlot0 = new RingPlot();
      Paint paint0 = ringPlot0.getBaseSectionOutlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(1.0, paint0, ringPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainCategoryPlot0.getRangeMarkers(10, (Layer) null);
      combinedDomainCategoryPlot0.addRangeMarker(0, (Marker) valueMarker0, (Layer) null);
      combinedDomainCategoryPlot0.getSubplots();
      combinedDomainCategoryPlot0.setDrawSharedDomainAxis(true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      categoryAxis3D0.setAxisLineStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(10);
      AxisLocation.getOpposite(axisLocation0);
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, true);
      Color color0 = (Color)AbstractRenderer.DEFAULT_OUTLINE_PAINT;
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      RingPlot ringPlot0 = new RingPlot();
      Paint paint0 = ringPlot0.getBaseSectionOutlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(1.0, paint0, ringPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainCategoryPlot0.getRangeMarkers(10, (Layer) null);
      combinedDomainCategoryPlot0.setDrawSharedDomainAxis(true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getRangeAxisEdge(10);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      categoryPlot0.getFixedRangeAxisSpace();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1191.96296, "Category Plot");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.getBaseSectionOutlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(0.05, ringPlot0.DEFAULT_BACKGROUND_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      combinedDomainCategoryPlot0.getRangeMarkers(2045, layer0);
      combinedDomainCategoryPlot0.setDrawSharedDomainAxis(true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getRangeAxisEdge((-990));
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(valueAxis0);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(valueAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = combinedRangeCategoryPlot1.getDatasetRenderingOrder();
      combinedRangeCategoryPlot1.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot1.setRangeAxis(valueAxis0);
      CategoryAxis categoryAxis0 = new CategoryAxis("Null 'paint' argument.");
      MockDate mockDate0 = new MockDate((-1L));
      Minute minute0 = new Minute(mockDate0, simpleTimeZone0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", minute0, 1);
      valueAxis0.equals(categoryTextAnnotation0);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(2);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      combinedRangeCategoryPlot1.getDataRange(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("", zoneInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[6];
      TimeZone.getDefault();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("SansSerif");
      categoryAxisArray0[0] = (CategoryAxis) subCategoryAxis0;
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      DatasetRenderingOrder datasetRenderingOrder1 = combinedRangeCategoryPlot0.getDatasetRenderingOrder();
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder1);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.setRangeAxis((ValueAxis) dateAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      categoryAxis0.setMaximumCategoryLabelWidthRatio(102.542015F);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot2 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot2.setDomainAxis(categoryAxisArray0[0]);
      combinedRangeCategoryPlot2.setRangeGridlineStroke(categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) null);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot1.isRangeGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
      piePlot0.getBaseSectionOutlinePaint();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 10, 10, 904, 540, 500, true, false, true, false, true, true);
      Color color0 = chartPanel0.getForeground();
      ValueMarker valueMarker0 = new ValueMarker(13.64903684167, color0, piePlot0.DEFAULT_LABEL_OUTLINE_STROKE);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.addRangeMarker(10, (Marker) valueMarker0, (Layer) null);
      combinedDomainCategoryPlot0.setDrawSharedDomainAxis(false);
      ValueAxis[] valueAxisArray0 = new ValueAxis[2];
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      valueAxisArray0[1] = (ValueAxis) periodAxis0;
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot0.getRangeAxisEdge(1449);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      categoryAxis3D0.setAxisLineStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(10);
      AxisLocation.getOpposite(axisLocation0);
      axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      RingPlot ringPlot0 = new RingPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setDomainAxis((CategoryAxis) categoryAxis3D0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      combinedDomainCategoryPlot0.clearRangeMarkers();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.clearRangeMarkers();
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      PeriodAxis periodAxis0 = new PeriodAxis("org.jfree.chart.renderer.AbstractRenderer");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      TimeZone timeZone0 = TimeZone.getDefault();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("SansSerif");
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      timeZone0.clone();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D("qPdPx9zjit+");
      CategoryAxis categoryAxis1 = new CategoryAxis();
      combinedRangeCategoryPlot0.getRangeGridlineStroke();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation((-1));
      AxisLocation axisLocation1 = AxisLocation.BOTTOM_OR_RIGHT;
      axisLocation0.getOpposite();
      combinedRangeCategoryPlot0.setRangeAxisLocation(axisLocation1, false);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.clearRangeMarkers(10);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.isDomainGridlinesVisible();
      combinedRangeCategoryPlot0.getPlotType();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.remove(combinedRangeCategoryPlot0);
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F);
      Range.expand(cyclicNumberAxis0.DEFAULT_RANGE, 1.0F, 0.05);
      combinedRangeCategoryPlot0.getDataset();
      LinkedList<ValueMarker> linkedList0 = new LinkedList<ValueMarker>();
      combinedRangeCategoryPlot0.isRangeZoomable();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      categoryPlot0.setAnchorValue((-1.0), true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.getDataset();
      combinedRangeCategoryPlot0.setDomainAxis(3, (CategoryAxis) null, false);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryPlot0.addRangeMarker((Marker) categoryMarker0);
      categoryPlot0.mapDatasetToRangeAxis(10, (-3765));
      int int0 = (-20);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      int int1 = (-1066);
      String string0 = "Rotation.CLOCKWISE";
      // Undeclared exception!
      try { 
        NumberFormat.getIntegerInstance((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      categoryPlot0.getFixedRangeAxisSpace();
      combinedDomainCategoryPlot0.clearRangeMarkers(10);
      categoryPlot0.getDomainMarkers((Layer) null);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Graphics2D graphics2D0 = null;
      Rectangle2D rectangle2D0 = null;
      combinedDomainCategoryPlot0.clearDomainMarkers(10);
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateDomainAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      double double0 = 1191.96296;
      Graphics2D graphics2D0 = null;
      Rectangle2D rectangle2D0 = null;
      categoryPlot0.getFixedRangeAxisSpace();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateDomainAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      AxisLocation axisLocation0 = categoryPlot0.getDomainAxisLocation(1611);
      AxisLocation.getOpposite(axisLocation0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setDomainGridlinePaint(areaRenderer0.DEFAULT_OUTLINE_PAINT);
      axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, false);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.getBaseSectionOutlinePaint();
      categoryPlot0.getDomainMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      categoryAxis3D0.setAxisLineStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(10);
      AxisLocation.getOpposite(axisLocation0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      categoryAxis3D0.setAxisLineStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.getDatasetGroup();
      combinedRangeCategoryPlot0.setDatasetGroup((DatasetGroup) null);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer0);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      JFreeChart jFreeChart0 = new JFreeChart("Ub-&M<A>|ak`.A@Rx", combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      rectangle0.contains(rectangle2D0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(valueAxis0);
      combinedRangeCategoryPlot0.equals("&>7$;DqP");
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(161.0667276606896, 10, "Null 'layer' not permitted.");
      cyclicNumberAxis0.getRange();
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      combinedDomainCategoryPlot0.getDomainAxis(3);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      int int0 = 0;
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      categoryPlot0.setAnchorValue((-1.0), true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      categoryPlot0.getDomainAxisEdge(0);
      categoryPlot0.getOrientation();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JDialog jDialog0 = null;
      try {
        jDialog0 = new JDialog();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(10);
      AxisLocation.getOpposite(axisLocation0);
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      RingPlot ringPlot0 = new RingPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(0.2);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.addRangeMarker((Marker) categoryMarker0, (Layer) null);
      combinedRangeCategoryPlot0.setRangeAxisLocation(axisLocation1, false);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(0.0, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot1.DEFAULT_CROSSHAIR_STROKE);
      ValueAxis[] valueAxisArray0 = new ValueAxis[1];
      NumberAxis numberAxis0 = new NumberAxis();
      valueAxisArray0[0] = (ValueAxis) numberAxis0;
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(categoryAxis3D0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("O eK");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxes((ValueAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryPlot0.addRangeMarker((Marker) categoryMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("MWMW=V", categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.clone();
      JTableHeader jTableHeader0 = new JTableHeader();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      LinkedList<ValueMarker> linkedList0 = new LinkedList<ValueMarker>();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot1.setDomainAxis(37, (CategoryAxis) null, false);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("", zoneInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[6];
      TimeZone.getDefault();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      categoryAxisArray0[0] = (CategoryAxis) subCategoryAxis0;
      CategoryAxis categoryAxis0 = new CategoryAxis("qPdPx9zjit+");
      categoryAxisArray0[1] = categoryAxis0;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      zoneInfo0.clone();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D("");
      categoryAxisArray0[5] = (CategoryAxis) categoryAxis3D1;
      CategoryAxis categoryAxis1 = new CategoryAxis();
      CategoryAxis categoryAxis2 = new CategoryAxis();
      combinedRangeCategoryPlot0.setDomainAxes(categoryAxisArray0);
      categoryAxis3D1.setMaximumCategoryLabelWidthRatio(0.0F);
      combinedRangeCategoryPlot0.setDomainAxis((CategoryAxis) categoryAxis3D0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(dateAxis0.DEFAULT_AXIS_LINE_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      String string0 = "";
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("", zoneInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[6];
      TimeZone.getDefault();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("SansSerif");
      categoryAxisArray0[0] = (CategoryAxis) subCategoryAxis0;
      CategoryAxis categoryAxis0 = new CategoryAxis("qPdPx9zjit+");
      categoryAxisArray0[1] = categoryAxis0;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxisArray0[2] = (CategoryAxis) categoryAxis3D0;
      zoneInfo0.clone();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D("");
      categoryAxisArray0[3] = (CategoryAxis) categoryAxis3D1;
      CategoryAxis categoryAxis1 = new CategoryAxis();
      categoryAxisArray0[4] = categoryAxis1;
      categoryAxis1.clone();
      CategoryAxis3D categoryAxis3D2 = new CategoryAxis3D("H");
      categoryAxisArray0[5] = (CategoryAxis) categoryAxis3D2;
      combinedRangeCategoryPlot0.setDomainAxes(categoryAxisArray0);
      int int0 = 0;
      BarRenderer barRenderer0 = new BarRenderer();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)69;
      byteArray0[2] = (byte) (-14);
      byteArray0[3] = (byte)48;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-110);
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(131, byteArray0);
      JFreeChart jFreeChart0 = new JFreeChart("", subCategoryAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeCategoryPlot0, true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints0);
      // Undeclared exception!
      try { 
        lookupOp0.filter((BufferedImage) null, (BufferedImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.LookupOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(135.0, 10, "Null 'layer' not permitted.");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("\u00B0F");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedDomainCategoryPlot0.isRangeGridlinesVisible();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("R&3DKHA}Y[!u?", mockSimpleDateFormat0);
      standardCategoryItemLabelGenerator0.clone();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setColumnRenderingOrder((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("\u00B0F");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedDomainCategoryPlot0.isRangeGridlinesVisible();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("R&3DKHA}Y[!u?", mockSimpleDateFormat0);
      standardCategoryItemLabelGenerator0.clone();
      minMaxCategoryRenderer0.setSeriesItemLabelGenerator(10, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      combinedDomainCategoryPlot0.setRenderer(0, (CategoryItemRenderer) minMaxCategoryRenderer0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setColumnRenderingOrder((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(161.0667276606896, 10, "Null 'layer' not permitted.");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      combinedDomainCategoryPlot0.setRenderer((CategoryItemRenderer) groupedStackedBarRenderer0);
      combinedDomainCategoryPlot0.getDomainAxis(3);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      categoryPlot0.setAnchorValue((-1.0), true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.getDataset();
      combinedRangeCategoryPlot0.setDomainAxis(3, (CategoryAxis) null, false);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
      combinedRangeCategoryPlot0.clearRangeAxes();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.configureRangeAxes();
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.clearRangeAxes();
      combinedRangeCategoryPlot0.getDataset(0);
      int int0 = (-4694);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      // Undeclared exception!
      try { 
        Quarter.parseQuarter("org.jfree.chart.util.StandardGradientPaintTransformer");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Missing Q.
         //
         verifyException("org.jfree.data.time.Quarter", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      cyclicNumberAxis0.addChangeListener(combinedDomainXYPlot0);
      cyclicNumberAxis0.getAdvanceLineStroke();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairPaint();
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      combinedDomainCategoryPlot0.setFixedLegendItems(legendItemCollection0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      combinedDomainCategoryPlot0.clone();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      combinedDomainCategoryPlot0.setRangeCrosshairVisible(true);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.isDomainGridlinesVisible();
      combinedRangeCategoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      combinedDomainCategoryPlot0.remove(combinedRangeCategoryPlot0);
      combinedDomainCategoryPlot0.clearRangeAxes();
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.getDataset();
      combinedRangeCategoryPlot0.setRangeCrosshairPaint(areaRenderer0.DEFAULT_OUTLINE_PAINT);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      combinedRangeCategoryPlot0.setDomainAxis(10, categoryAxis0, false);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryMarker0.setLabelOffset(categoryPlot0.DEFAULT_INSETS);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      categoryMarker0.setLabelOffsetType(lengthAdjustmentType0);
      categoryPlot0.addRangeMarker((Marker) categoryMarker0);
      categoryPlot0.setRangeCrosshairVisible(false);
      categoryPlot0.mapDatasetToRangeAxis(0, (-3765));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      // Undeclared exception!
      try { 
        Quarter.parseQuarter("I}i0*N/lGGx49]Q=LI");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"=\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.isDomainGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.getDomainMarkers(layer0);
      combinedRangeCategoryPlot0.clearRangeAxes();
      combinedRangeCategoryPlot0.setRangeCrosshairVisible(false);
      combinedRangeCategoryPlot0.getDataset(0);
      int int0 = (-4694);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-4694), 0, (byte[]) null, (byte[]) null, (byte[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("O^");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      int int0 = 1;
      combinedDomainCategoryPlot0.getDomainAxis(1);
      float[] floatArray0 = new float[0];
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      int int1 = 713;
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(713, 1);
      ColorModel colorModel0 = ColorModel.getRGBdefault();
      BufferedImage bufferedImage1 = rescaleOp0.createCompatibleDestImage(bufferedImage0, colorModel0);
      bufferedImage1.createGraphics();
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(15, 1, floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data array too small (is 0 and should be 15
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(161.0667276606896, 10, "Null 'layer' not permitted.");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      combinedDomainCategoryPlot0.getDomainAxis(3);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.getSubplots();
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      combinedDomainCategoryPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers((-1331), layer0);
      Paint paint0 = combinedDomainCategoryPlot0.getRangeCrosshairPaint();
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      combinedDomainCategoryPlot0.setFixedLegendItems(legendItemCollection0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(92, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) bufferedImage0;
      objectArray0[1] = (Object) chartRenderingInfo0;
      objectArray0[2] = (Object) bufferedImage0;
      objectArray0[3] = (Object) bufferedImage0;
      objectArray0[4] = (Object) paint0;
      objectArray0[5] = (Object) graphics2D0;
      Object object0 = combinedDomainCategoryPlot0.clone();
      objectArray0[6] = object0;
      JTree jTree0 = new JTree(objectArray0);
      // Undeclared exception!
      try { 
        multiTreeUI0.getEditingPath(jTree0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedRangeCategoryPlot0.setRangeAxisLocation(axisLocation0);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.isDomainGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
      combinedRangeCategoryPlot0.zoom(1191.96296);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot1.add((CategoryPlot) combinedRangeCategoryPlot0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot1.getDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot2 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
      combinedRangeCategoryPlot0.getRowRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers((-1326), layer0);
      combinedDomainCategoryPlot0.getRangeCrosshairPaint();
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(92, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      Object object0 = combinedDomainCategoryPlot0.clone();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      combinedDomainCategoryPlot0.getRangeMarkers(layer0);
      combinedDomainCategoryPlot0.clearDomainAxes();
      combinedDomainCategoryPlot0.setRangeGridlineStroke(((CategoryPlot) object0).DEFAULT_CROSSHAIR_STROKE);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.getRangeMarkers(layer0);
      combinedRangeCategoryPlot0.zoom(1191.96296);
      combinedRangeCategoryPlot0.getDomainAxisEdge(2);
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
      categoryPlot0.getDomainAxisEdge(10);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      StandardTickUnitSource standardTickUnitSource0 = new StandardTickUnitSource();
      TickUnit tickUnit0 = null;
      try {
        tickUnit0 = new DateTickUnit(10, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DateTickUnit.getMillisecondCount() : unit must be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, SECOND or MILLISECOND defined in the DateTickUnit class. Do *not* use the constants defined in java.util.Calendar.
         //
         verifyException("org.jfree.chart.axis.DateTickUnit", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 1.0E-5);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      Boolean boolean0 = new Boolean(true);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot1.setDomainAxis(2370, (CategoryAxis) categoryAxis3D0, true);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Stroke stroke0 = categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.setDomainGridlineStroke(stroke0);
      categoryPlot0.getLegendItems();
      categoryPlot0.clearRangeMarkers(10);
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.clearDomainAxes();
      combinedDomainCategoryPlot0.setRangeGridlineStroke(categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      int int0 = 420;
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
      // Undeclared exception!
      try { 
        tickUnits0.get(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "CategoryItemEntity: rowKey=";
      stringArray0[1] = "CategoryItemEntity: rowKey=";
      stringArray0[2] = "CategoryItemEntity: rowKey=";
      stringArray0[3] = "CategoryItemEntity: rowKey=";
      stringArray0[4] = "CategoryItemEntity: rowKey=";
      SymbolAxis symbolAxis0 = new SymbolAxis("CategoryItemEntity: rowKey=", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer0);
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JScrollPane jScrollPane0 = new JScrollPane();
      jScrollPane0.getViewportBorderBounds();
      combinedDomainCategoryPlot0.getAnchorValue();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Stroke stroke0 = combinedDomainCategoryPlot0.getDomainGridlineStroke();
      combinedDomainCategoryPlot0.setDomainGridlineStroke(stroke0);
      combinedDomainCategoryPlot0.getFixedLegendItems();
      combinedDomainCategoryPlot0.clearRangeMarkers((-1083));
      combinedDomainCategoryPlot0.getOrientation();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setWeight(10);
      combinedRangeCategoryPlot0.getPlotType();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((-1), (-1), 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (-1) and height (-1) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      ValueAxis[] valueAxisArray0 = new ValueAxis[7];
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDataset((-3657));
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      combinedDomainCategoryPlot0.getDomainAxisEdge((-621));
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      StandardTickUnitSource standardTickUnitSource0 = new StandardTickUnitSource();
      standardTickUnitSource0.getCeilingTickUnit(689.33322);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      combinedDomainCategoryPlot0.equals(defaultKeyedValues2DDataset0);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.isRangeGridlinesVisible();
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
      categoryPlot0.setParent(piePlot0);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getRenderer((-1917));
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("Null 'position' argument.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setAnchorValue(0.05);
      combinedDomainCategoryPlot0.mapDatasetToDomainAxis(2312, 2312);
      categoryAxis0.setTickMarksVisible(true);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.mapDatasetToDomainAxis((-1210), (-1210));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeCrosshairPaint();
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(92, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      combinedDomainCategoryPlot0.clone();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getLegendItems();
      categoryPlot0.clearRangeMarkers(1);
      categoryPlot0.getDomainMarkers((Layer) null);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      BasicStroke basicStroke0 = new BasicStroke();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getColumnRenderingOrder();
      Layer layer0 = Layer.BACKGROUND;
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      LinkedList<CombinedDataset> linkedList0 = new LinkedList<CombinedDataset>();
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      combinedDomainCategoryPlot0.clearDomainMarkers(10);
      combinedDomainCategoryPlot0.getDomainMarkers((Layer) null);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer0);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getLegendItems();
      categoryPlot0.clearRangeMarkers((-1083));
      categoryPlot0.getDomainMarkers((Layer) null);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getItemStroke(10, 10);
      combinedDomainCategoryPlot0.setRangeCrosshairStroke(areaRenderer0.DEFAULT_OUTLINE_STROKE);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      categoryAxis3D0.setAxisLineStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(10);
      AxisLocation.getOpposite(axisLocation0);
      axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      RingPlot ringPlot0 = new RingPlot();
      Paint paint0 = ringPlot0.getBaseSectionOutlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(1.0, paint0, ringPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainCategoryPlot0.addRangeMarker(0, (Marker) valueMarker0, (Layer) null);
      combinedDomainCategoryPlot0.setDrawSharedDomainAxis(false);
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot0.getRangeAxisEdge(0);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryPlot0.addRangeMarker((Marker) categoryMarker0);
      int int0 = 0;
      categoryPlot0.mapDatasetToRangeAxis(0, (-3765));
      int int1 = (-20);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      int int2 = (-1066);
      String string0 = "Rotation.CLOCKWISE";
      // Undeclared exception!
      try { 
        NumberFormat.getIntegerInstance((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      Graphics2D graphics2D0 = null;
      Line2D.Double line2D_Double0 = new Line2D.Double(3105.748244164268, (-551.684), 3105.748244164268, (-328.47271222993));
      line2D_Double0.getBounds();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setBaseStroke((Stroke) basicStroke0);
      defaultPolarItemRenderer0.getItemOutlinePaint(1528, (-552));
      basicStroke0.getDashArray();
      double[][] doubleArray0 = new double[1][2];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (-1.7976931348623157E308);
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("FktkkH6B6w3< 8@");
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      CategoryPlot categoryPlot0 = null;
      try {
        categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, logarithmicAxis0, statisticalLineAndShapeRenderer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Values less than or equal to zero not allowed with logarithmic axis
         //
         verifyException("org.jfree.chart.axis.LogarithmicAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("#i24");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-5, 2.5E10);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      categoryAxis3D0.setAxisLineStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(10);
      AxisLocation.getOpposite(axisLocation0);
      axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      RingPlot ringPlot0 = new RingPlot();
      Paint paint0 = ringPlot0.getBaseSectionOutlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(1.0, paint0, ringPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainCategoryPlot0.addRangeMarker(10, (Marker) valueMarker0, (Layer) null);
      combinedDomainCategoryPlot0.setDrawSharedDomainAxis(false);
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot0.getRangeAxisEdge(10);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxisLocation((-1879), axisLocation0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      PropertyResourceBundle propertyResourceBundle0 = (PropertyResourceBundle)ThermometerPlot.localizationResources;
      propertyResourceBundle0.containsKey("");
      CategoryPlot.localizationResources = (ResourceBundle) propertyResourceBundle0;
      categoryPlot0.getLegendItems();
      AxisLocation axisLocation0 = categoryPlot0.getDomainAxisLocation((-3418));
      categoryPlot0.setRangeAxisLocation(4, axisLocation0);
      categoryPlot0.clearRangeMarkers(1);
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PiePlot piePlot0 = new PiePlot();
      Stroke stroke0 = piePlot0.getBaseSectionOutlineStroke();
      combinedRangeCategoryPlot0.setOutlineStroke(stroke0);
      combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(valueAxis0);
      combinedRangeCategoryPlot0.getRangeGridlineStroke();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(4001);
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      combinedRangeCategoryPlot0.setRangeAxisLocation(axisLocation1, true);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(valueAxis0);
      combinedRangeCategoryPlot0.getRangeGridlineStroke();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(0);
      axisLocation0.getOpposite();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("hfVy");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      CategoryMarker categoryMarker0 = new CategoryMarker(2.0F);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.clearRangeMarkers();
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers((-1331), layer0);
      combinedDomainCategoryPlot0.getRangeCrosshairPaint();
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      combinedDomainCategoryPlot0.setFixedLegendItems(legendItemCollection0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(92, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      combinedDomainCategoryPlot0.clone();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.chart.plot.MultiplePiePlot");
      categoryPlot0.getDataRange(logarithmicAxis0);
      categoryPlot0.isDomainGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.setDrawSharedDomainAxis(true);
      ValueAxis[] valueAxisArray0 = new ValueAxis[2];
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot0.getRangeAxisEdge((-1));
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1601.0, 1601.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedRangeCategoryPlot0.getRangeGridlinePaint();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedRangeCategoryPlot0.handleClick(10, 21, plotRenderingInfo0);
      combinedRangeCategoryPlot0.getRangeAxis();
      combinedRangeCategoryPlot0.getRangeAxisEdge((-830));
      int int0 = (-769);
      int[] intArray0 = new int[3];
      intArray0[0] = 10;
      intArray0[1] = (-830);
      intArray0[2] = 0;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(2, (-769), intArray0, 10, true, 500, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Map size (-769) must be >= 1
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }
}
