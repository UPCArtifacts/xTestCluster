/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 21:37:59 GMT 2021
 */

package org.jfree.chart.block;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ConvolveOp;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.sql.Connection;
import java.sql.Statement;
import java.text.AttributedCharacterIterator;
import java.util.TimeZone;
import javax.swing.JLayeredPane;
import javax.swing.JScrollPane;
import javax.swing.JViewport;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.block.BlockBorder;
import org.jfree.chart.block.BlockContainer;
import org.jfree.chart.block.BorderArrangement;
import org.jfree.chart.block.ColumnArrangement;
import org.jfree.chart.block.LabelBlock;
import org.jfree.chart.block.LengthConstraintType;
import org.jfree.chart.block.RectangleConstraint;
import org.jfree.chart.util.HorizontalAlignment;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.Size2D;
import org.jfree.chart.util.UnitType;
import org.jfree.chart.util.VerticalAlignment;
import org.jfree.data.Range;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset;
import org.jfree.data.statistics.SimpleHistogramDataset;
import org.jfree.data.time.Hour;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.time.Year;
import org.jfree.data.xy.IntervalXYDelegate;
import org.jfree.data.xy.XYDatasetTableModel;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BorderArrangement_ESTest extends BorderArrangement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Graphics2D graphics2D0 = null;
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 464.4698065367129);
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Object object0 = new Object();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(true);
      Range range1 = Range.shift(range0, 464.4698065367129, true);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, range1);
      RectangleConstraint rectangleConstraint1 = blockContainer0.toContentConstraint(rectangleConstraint0);
      // Undeclared exception!
      try { 
        blockContainer0.arrange((Graphics2D) null, rectangleConstraint1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      Size2D size2D0 = borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 0.0);
      BorderArrangement borderArrangement1 = new BorderArrangement();
      borderArrangement1.arrangeFN(blockContainer0, (Graphics2D) null, 0.0);
      borderArrangement0.equals(borderArrangement1);
      Range range0 = new Range(0.0, 0.0);
      borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
      borderArrangement0.equals(size2D0);
      // Undeclared exception!
      try { 
        borderArrangement1.arrangeFF(blockContainer0, (Graphics2D) null, (RectangleConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Graphics2D graphics2D0 = null;
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 464.4698065367129);
      borderArrangement0.add(blockContainer0, (Object) null);
      Object object0 = new Object();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(false);
      Range.shift(range0, 0.0, true);
      RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
      RectangleConstraint rectangleConstraint1 = blockContainer0.toContentConstraint(rectangleConstraint0);
      // Undeclared exception!
      try { 
        blockContainer0.arrange(graphics2D0, rectangleConstraint1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

//   @Test(timeout = 4000)
//   public void test03()  throws Throwable  {
//       BorderArrangement borderArrangement0 = new BorderArrangement();
//       borderArrangement0.clear();
//       BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
//       Size2D size2D0 = new Size2D();
//       borderArrangement0.add(blockContainer0, (Object) null);
//       Object object0 = new Object();
//       DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
//       Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(false);
//       Range range1 = Range.shift(range0, 0.0, true);
//       borderArrangement0.equals(size2D0);
//       Range range2 = new Range((-584.7186), 1223.5256703);
//       borderArrangement0.arrangeRR(blockContainer0, range2, range1, (Graphics2D) null);
//   }

//   @Test(timeout = 4000)
//   public void test04()  throws Throwable  {
//       BorderArrangement borderArrangement0 = new BorderArrangement();
//       borderArrangement0.clear();
//       BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
//       Size2D size2D0 = new Size2D();
//       borderArrangement0.add(blockContainer0, (Object) null);
//       Object object0 = new Object();
//       DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
//       Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(false);
//       Range range1 = Range.shift(range0, 0.0, false);
//       borderArrangement0.equals(size2D0);
//       Range range2 = new Range((-584.7186), 1223.5256703);
//       borderArrangement0.arrangeRR(blockContainer0, range2, range1, (Graphics2D) null);
//   }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Graphics2D graphics2D0 = null;
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 464.4698065367129);
      borderArrangement0.add(blockContainer0, (Object) null);
      Object object0 = new Object();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(false);
      Range range1 = Range.shift(range0, 0.0, true);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, range1);
      RectangleConstraint rectangleConstraint1 = blockContainer0.toContentConstraint(rectangleConstraint0);
      // Undeclared exception!
      try { 
        blockContainer0.arrange((Graphics2D) null, rectangleConstraint1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 0.0);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add(blockContainer0, (Object) null);
      blockContainer0.getBlocks();
      Object object0 = new Object();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      System.setCurrentTimeMillis(0L);
      RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
      borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

//   @Test(timeout = 4000)
//   public void test07()  throws Throwable  {
//       BorderArrangement borderArrangement0 = new BorderArrangement();
//       borderArrangement0.clear();
//       BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
//       borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 464.4698065367129);
//       RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
//       borderArrangement0.add(blockContainer0, rectangleEdge0);
//       Object object0 = new Object();
//       DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
//       defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(true);
//       BorderArrangement borderArrangement1 = new BorderArrangement();
//       borderArrangement1.arrangeFN(blockContainer0, (Graphics2D) null, 464.4698065367129);
//       BorderArrangement borderArrangement2 = new BorderArrangement();
//       borderArrangement2.equals(borderArrangement1);
//       Range range0 = new Range((-1809.370245353), 0.0);
//       borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
//   }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Graphics2D graphics2D0 = null;
      Size2D size2D0 = new Size2D(464.4698065367129, 464.4698065367129);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Object object0 = new Object();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(true);
      Range range1 = Range.shift(range0, (-1.0), true);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(464.4698065367129, range1);
      RectangleConstraint rectangleConstraint1 = blockContainer0.toContentConstraint(rectangleConstraint0);
      // Undeclared exception!
      try { 
        blockContainer0.arrange((Graphics2D) null, rectangleConstraint1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Graphics2D graphics2D0 = null;
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 464.4698065367129);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Object object0 = new Object();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(true);
      Range range1 = Range.shift(range0, (-1.0), true);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, range1);
      RectangleConstraint rectangleConstraint1 = blockContainer0.toContentConstraint(rectangleConstraint0);
      // Undeclared exception!
      try { 
        blockContainer0.arrange((Graphics2D) null, rectangleConstraint1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Graphics2D graphics2D0 = null;
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 464.4698065367129);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Object object0 = new Object();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(true);
      Range range1 = Range.shift(range0, 464.4698065367129, true);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, range1);
      RectangleConstraint rectangleConstraint1 = blockContainer0.toContentConstraint(rectangleConstraint0);
      // Undeclared exception!
      try { 
        blockContainer0.arrange((Graphics2D) null, rectangleConstraint1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(false);
      TimeZone timeZone0 = TimeZone.getDefault();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeZone0);
      timeSeriesCollection0.getDomainBounds(false);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(range0, range0);
      Range range1 = Range.expandToInclude(range0, 764.6);
      BorderArrangement borderArrangement1 = new BorderArrangement();
      borderArrangement1.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.RANGE;
      RectangleConstraint rectangleConstraint1 = new RectangleConstraint(1521.9795970270918, (Range) null, lengthConstraintType0, Double.NEGATIVE_INFINITY, range1, lengthConstraintType0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 464.4698065367129);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Object object0 = new Object();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      borderArrangement0.equals(borderArrangement1);
      System.setCurrentTimeMillis(1561L);
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      System.setCurrentTimeMillis((-1680L));
      JViewport jViewport0 = new JViewport();
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

//   @Test(timeout = 4000)
//   public void test13()  throws Throwable  {
//       BorderArrangement borderArrangement0 = new BorderArrangement();
//       borderArrangement0.clear();
//       BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
//       borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 464.4698065367129);
//       RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
//       borderArrangement0.add(blockContainer0, rectangleEdge0);
//       Object object0 = new Object();
//       BorderArrangement borderArrangement1 = new BorderArrangement();
//       System.setCurrentTimeMillis(1561L);
//       RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
//       borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
//   }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(false);
      Year year0 = new Year();
      XYSeries xYSeries0 = new XYSeries(year0);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      xYSeriesCollection0.getDomainBounds(true);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((-1.0), (Range) null);
      BlockContainer blockContainer0 = new BlockContainer();
      borderArrangement0.arrangeFF(blockContainer0, (Graphics2D) null, rectangleConstraint0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      borderArrangement0.add(blockContainer0, (Object) null);
      Object object0 = new Object();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      borderArrangement1.equals(blockContainer0);
      BorderArrangement borderArrangement2 = new BorderArrangement();
      borderArrangement0.equals(borderArrangement1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      Range range0 = jDBCXYDataset0.getRangeBounds(true);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, range0);
      borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      Size2D size2D0 = new Size2D(0.0, 0.0);
      Object object0 = new Object();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      borderArrangement0.equals(borderArrangement1);
      Range range1 = new Range(0.0, 0.0);
      borderArrangement1.arrangeRR(blockContainer0, range1, range1, (Graphics2D) null);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Graphics2D graphics2D0 = null;
      borderArrangement0.clear();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(timeSeriesCollection0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(true);
      RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
      double double0 = (-1.0);
      RectangleConstraint rectangleConstraint1 = new RectangleConstraint(1527.94267655, range0);
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      blockContainer0.toContentConstraint(rectangleConstraint1);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.FIXED;
      LengthConstraintType lengthConstraintType1 = LengthConstraintType.NONE;
      RectangleConstraint rectangleConstraint2 = new RectangleConstraint(0.0, range0, lengthConstraintType0, 0.0, range0, lengthConstraintType1);
      blockContainer0.arrange((Graphics2D) null, rectangleConstraint2);
      Range.shift(range0, (-1.0), true);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((-3066), (-3066), (-3036));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -3036
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 464.4698065367129);
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Object object0 = new Object();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(false);
      Range.shift(range0, 464.4698065367129, true);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 0.0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(false);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((-1.0), range0);
      RectangleConstraint rectangleConstraint1 = blockContainer0.toContentConstraint(rectangleConstraint0);
      blockContainer0.arrange((Graphics2D) null, rectangleConstraint1);
      borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
      BlockContainer blockContainer1 = new BlockContainer();
      Size2D size2D0 = borderArrangement0.arrange(blockContainer1, (Graphics2D) null, rectangleConstraint1);
      assertEquals(0.0, size2D0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Object object0 = new Object();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      boolean boolean0 = borderArrangement0.equals(borderArrangement1);
      assertFalse(boolean0);
      
      BorderArrangement borderArrangement2 = new BorderArrangement();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      boolean boolean1 = borderArrangement2.equals(integer0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      boolean boolean0 = borderArrangement0.equals(borderArrangement0);
      BorderArrangement borderArrangement1 = new BorderArrangement();
      boolean boolean1 = borderArrangement1.equals(borderArrangement0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(timeSeriesCollection0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(true);
      RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      RectangleConstraint rectangleConstraint1 = RectangleConstraint.NONE;
      blockContainer0.toContentConstraint(rectangleConstraint1);
      blockContainer0.arrange((Graphics2D) null, rectangleConstraint0);
      borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.READING;
      boolean boolean0 = borderArrangement0.equals(attributedCharacterIterator_Attribute0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Size2D size2D0 = blockContainer0.arrange((Graphics2D) null);
      assertEquals(0.0, size2D0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(timeSeriesCollection0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(true);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(range0, range0);
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      blockContainer0.toContentConstraint(rectangleConstraint0);
      blockContainer0.arrange((Graphics2D) null, rectangleConstraint0);
      borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.READING;
      boolean boolean0 = borderArrangement0.equals(attributedCharacterIterator_Attribute0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(timeSeriesCollection0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(false);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((-1.0), range0);
      RectangleConstraint rectangleConstraint1 = blockContainer0.toContentConstraint(rectangleConstraint0);
      blockContainer0.arrange((Graphics2D) null, rectangleConstraint1);
      borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      boolean boolean0 = borderArrangement0.equals(xYDatasetTableModel0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(215.08610709459, 1526.1248438);
      RectangleConstraint rectangleConstraint1 = rectangleConstraint0.toUnconstrainedHeight();
      BlockContainer blockContainer0 = new BlockContainer();
      borderArrangement0.arrangeFF(blockContainer0, (Graphics2D) null, rectangleConstraint1);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((-5403), (-5403), 894);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 894
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Object object0 = new Object();
      borderArrangement0.equals(borderArrangement0);
      System.setCurrentTimeMillis(1561L);
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      int int0 = 0;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)76;
      byteArray0[1] = (byte)57;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(0, 0, byteArray0, byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Object object0 = new Object();
      boolean boolean0 = borderArrangement0.equals(borderArrangement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 0.0);
      Object object0 = new Object();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      borderArrangement0.equals((Object) null);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(true);
      defaultBoxAndWhiskerCategoryDataset0.clone();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(range0, (-409.254));
      RectangleConstraint rectangleConstraint1 = new RectangleConstraint((-1554.8151565873475), (-1046.4));
      borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint1);
      borderArrangement0.equals(rectangleConstraint0);
      System.setCurrentTimeMillis(0L);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(false);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((-1.0), range0);
      RectangleConstraint rectangleConstraint1 = new RectangleConstraint(0.0, range0);
      Size2D size2D0 = blockContainer0.arrange((Graphics2D) null, rectangleConstraint1);
      borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
      Size2D size2D1 = borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
      assertNotSame(size2D1, size2D0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      Object object0 = new Object();
      borderArrangement1.equals(object0);
      Range range0 = new Range(1526.1248438, 1526.1248438);
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement1);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range1 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(true);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(1.0, range1);
      blockContainer0.arrange((Graphics2D) null, rectangleConstraint0);
      borderArrangement1.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
      Size2D size2D0 = borderArrangement1.arrangeNN(blockContainer0, (Graphics2D) null);
      assertEquals(0.0, size2D0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(timeSeriesCollection0);
      intervalXYDelegate0.getDomainBounds(false);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
      Size2D size2D0 = borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      assertEquals(Double.POSITIVE_INFINITY, size2D0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 0.0);
      Object object0 = new Object();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      borderArrangement1.equals("u|dGgKd-");
      System.setCurrentTimeMillis(1561L);
      Range range0 = new Range(0.0, 0.0);
      Range range1 = new Range((-2.147483648E9), (-816.9531908333427));
      Range range2 = Range.combine(range0, range1);
      Size2D size2D0 = borderArrangement0.arrangeRR(blockContainer0, range2, range1, (Graphics2D) null);
      assertEquals(0.0, size2D0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Object object0 = new Object();
      boolean boolean0 = borderArrangement0.equals(object0);
      assertFalse(boolean0);
      
      BlockContainer blockContainer0 = new BlockContainer();
      Hour.parseHour("Pba\"l");
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset("Pba\"l");
      defaultBoxAndWhiskerXYDataset0.getRangeBounds(false);
      borderArrangement0.equals("Pba\"l");
      System.setCurrentTimeMillis((-291L));
      BorderArrangement borderArrangement1 = new BorderArrangement();
      System.setCurrentTimeMillis(23);
      RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
      Size2D size2D0 = borderArrangement1.arrangeFF(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      assertEquals(0.0, size2D0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(timeSeriesCollection0);
      intervalXYDelegate0.getDomainBounds(false);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, Double.POSITIVE_INFINITY);
      Size2D size2D0 = borderArrangement0.arrangeFF(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      assertEquals(0.0, size2D0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (0.0) <= upper (-1.0).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      blockContainer0.setPadding(567.5333242263, 567.5333242263, (-2.147483648E9), (-2.147483648E9));
      Size2D size2D0 = borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 0.0);
      boolean boolean0 = borderArrangement0.equals(size2D0);
      assertFalse(boolean0);
      assertEquals((-2.1474830804666758E9), size2D0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Object object0 = new Object();
      borderArrangement0.equals(object0);
      BlockContainer blockContainer0 = new BlockContainer();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((-10.409215942591764), (-10.409215942591764));
      RectangleConstraint rectangleConstraint1 = rectangleConstraint0.toUnconstrainedHeight();
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (0.0) <= upper (-10.409215942591764).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      timeSeriesCollection0.getDomainBounds(false);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, (Range) null);
      // Undeclared exception!
      try { 
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 0.0);
      Object object0 = new Object();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      borderArrangement0.equals(borderArrangement1);
      System.setCurrentTimeMillis(1561L);
      BorderArrangement borderArrangement2 = new BorderArrangement();
      SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(0.0);
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(simpleHistogramDataset0, true);
      intervalXYDelegate0.getDomainBounds(true);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, (Range) null);
      // Undeclared exception!
      try { 
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(false);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((-1.0), range0);
      RectangleConstraint rectangleConstraint1 = blockContainer0.toContentConstraint(rectangleConstraint0);
      blockContainer0.arrange((Graphics2D) null, rectangleConstraint1);
      Size2D size2D0 = borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
      assertEquals(0.0, size2D0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 0.0);
      Object object0 = new Object();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      boolean boolean0 = borderArrangement0.equals(borderArrangement1);
      assertTrue(boolean0);
      
      System.setCurrentTimeMillis(1561L);
      Range range0 = new Range(0.0, 0.0);
      borderArrangement1.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
      assertTrue(borderArrangement0.equals((Object)borderArrangement1));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 0.0);
      Size2D size2D0 = borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 0.0);
      borderArrangement0.equals(borderArrangement0);
      Range range0 = new Range(0.0, 0.0);
      Size2D size2D1 = borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
      assertTrue(size2D1.equals((Object)size2D0));
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 0.0);
      Object object0 = new Object();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      borderArrangement1.arrangeNN(blockContainer0, (Graphics2D) null);
      boolean boolean0 = borderArrangement0.equals(borderArrangement1);
      assertTrue(boolean0);
      
      System.setCurrentTimeMillis(1561L);
      BorderArrangement borderArrangement2 = new BorderArrangement();
      assertTrue(borderArrangement2.equals((Object)borderArrangement0));
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Size2D size2D0 = borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
      assertEquals(0.0, size2D0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      boolean boolean0 = borderArrangement0.equals(borderArrangement0);
      assertTrue(boolean0);
      
      BorderArrangement borderArrangement1 = new BorderArrangement();
      assertFalse(borderArrangement1.equals((Object)borderArrangement0));
      
      boolean boolean1 = borderArrangement1.equals(borderArrangement0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Object object0 = new Object();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      boolean boolean0 = borderArrangement0.equals(borderArrangement1);
      assertFalse(boolean0);
      
      System.setCurrentTimeMillis(1561L);
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      boolean boolean1 = borderArrangement1.equals(integer0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = null;
      Graphics2D graphics2D0 = null;
      borderArrangement0.clear();
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFN((BlockContainer) null, (Graphics2D) null, 294.828168);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Object object0 = new Object();
      borderArrangement0.equals(object0);
      BlockContainer blockContainer0 = new BlockContainer();
      Hour.parseHour("Pba\"l");
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset((Comparable) null);
      defaultBoxAndWhiskerXYDataset0.getRangeBounds(true);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, (-2.147483648E9));
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 0.0);
      Font font0 = new Font("Null or zero length 'values' argument.", 2958465, 2958465);
      Font font1 = font0.deriveFont(32);
      Font font2 = font1.deriveFont(0);
      LabelBlock labelBlock0 = new LabelBlock("Null or zero length 'values' argument.", font2);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, 1698.0738569573);
      Size2D size2D0 = borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      assertEquals(0.0, size2D0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      BlockContainer blockContainer1 = new BlockContainer(borderArrangement0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeRR(blockContainer1, (Range) null, (Range) null, (Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Object object0 = new Object();
      borderArrangement0.equals(object0);
      BlockContainer blockContainer0 = new BlockContainer();
      Hour.parseHour("Pba\"l");
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset((Comparable) null);
      defaultBoxAndWhiskerXYDataset0.getRangeBounds(true);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, (-2.147483648E9));
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeRR(blockContainer0, (Range) null, (Range) null, (Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      System.setCurrentTimeMillis((-1680L));
      JViewport jViewport0 = new JViewport();
      borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
      Range range0 = new Range((-2151.250076), 0.0);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((-1680L), range0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (0.0) <= upper (-1680.0).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(timeSeriesCollection0);
      intervalXYDelegate0.getDomainBounds(false);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, Double.POSITIVE_INFINITY);
      // Undeclared exception!
      try { 
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Graphics2D graphics2D0 = null;
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 0.0);
      Object object0 = new Object();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      borderArrangement0.equals(borderArrangement1);
      System.setCurrentTimeMillis(1561L);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      JDBCXYDataset jDBCXYDataset0 = null;
      try {
        jDBCXYDataset0 = new JDBCXYDataset(connection0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.jdbc.JDBCXYDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Object object0 = new Object();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      boolean boolean0 = borderArrangement0.equals(borderArrangement1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = null;
      Graphics2D graphics2D0 = null;
      BlockContainer blockContainer1 = new BlockContainer(borderArrangement0);
      BlockBorder blockBorder0 = new BlockBorder();
      blockContainer1.setFrame(blockBorder0);
      borderArrangement0.arrangeFN(blockContainer1, (Graphics2D) null, 0.0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFR((BlockContainer) null, (Graphics2D) null, (RectangleConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Object object0 = new Object();
      borderArrangement0.equals(object0);
      BlockContainer blockContainer0 = new BlockContainer();
      Hour.parseHour("Pba\"l");
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset((Comparable) null);
      defaultBoxAndWhiskerXYDataset0.getRangeBounds(true);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, (-2.147483648E9));
      Size2D size2D0 = borderArrangement0.arrangeFF(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      assertEquals(0.0, size2D0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      JScrollPane jScrollPane0 = new JScrollPane();
      jScrollPane0.getColumnHeader();
      borderArrangement0.add(blockContainer0, (Object) null);
      borderArrangement0.equals((Object) null);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection((TimeSeries) null);
      timeSeriesCollection0.getDomainBounds(false);
      ConvolveOp convolveOp0 = new ConvolveOp((Kernel) null);
      double double0 = 0.0;
      double double1 = (-1865.2877227);
      // Undeclared exception!
      try { 
        Range.expand((Range) null, (-1865.2877227), Double.NEGATIVE_INFINITY);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 5.594099744516889);
      borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
      borderArrangement0.add(blockContainer0, (Object) null);
      assertEquals(0.0, blockContainer0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(215.08610709459, 1526.1248438);
      RectangleConstraint rectangleConstraint1 = rectangleConstraint0.toUnconstrainedHeight();
      BlockContainer blockContainer0 = new BlockContainer();
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = null;
      Graphics2D graphics2D0 = null;
      borderArrangement0.clear();
      BlockContainer blockContainer1 = new BlockContainer(borderArrangement0);
      borderArrangement0.arrangeFN(blockContainer1, (Graphics2D) null, 0.0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFR((BlockContainer) null, (Graphics2D) null, (RectangleConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Size2D size2D0 = borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 0.0);
      assertEquals(0.0, size2D0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      boolean boolean0 = borderArrangement0.equals(borderArrangement0);
      assertTrue(boolean0);
      
      BorderArrangement borderArrangement1 = new BorderArrangement();
      assertFalse(borderArrangement1.equals((Object)borderArrangement0));
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Font font0 = Font.decode("5.");
      Font font1 = font0.deriveFont(2958465);
      LabelBlock labelBlock0 = new LabelBlock("TimePeriodAnchor unknown.", font1);
      // Undeclared exception!
      try { 
        borderArrangement0.add(labelBlock0, "TimePeriodAnchor unknown.");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.jfree.chart.util.RectangleEdge
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Size2D size2D0 = borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 1.0);
      // Undeclared exception!
      try { 
        borderArrangement0.add(blockContainer0, size2D0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.util.Size2D cannot be cast to org.jfree.chart.util.RectangleEdge
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = null;
      int int0 = 0;
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(0);
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: 0
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      Object object0 = new Object();
      boolean boolean0 = borderArrangement0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      boolean boolean0 = borderArrangement0.equals(borderArrangement0);
      BorderArrangement borderArrangement1 = new BorderArrangement();
      boolean boolean1 = borderArrangement1.equals(borderArrangement0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      RectangleConstraint rectangleConstraint0 = null;
      borderArrangement0.equals((Object) null);
      UnitType unitType0 = UnitType.ABSOLUTE;
      // Undeclared exception!
      try { 
        blockContainer0.trimPadding((Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      VerticalAlignment verticalAlignment0 = VerticalAlignment.BOTTOM;
      ColumnArrangement columnArrangement0 = new ColumnArrangement((HorizontalAlignment) null, verticalAlignment0, 0.0, 0.0);
      BlockContainer blockContainer0 = new BlockContainer(columnArrangement0);
      int int0 = (-5);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)0;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-741), (-5), byteArray0, 0, true, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }
}
