/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 18:54:21 GMT 2021
 */

package org.apache.commons.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.PrintStream;
import java.text.ParseException;
import java.util.ConcurrentModificationException;
import java.util.Locale;
import java.util.NoSuchElementException;
import org.apache.commons.math.MathRuntimeException;
import org.apache.commons.math.exception.util.DummyLocalizable;
import org.apache.commons.math.exception.util.Localizable;
import org.apache.commons.math.exception.util.LocalizedFormats;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MathRuntimeException_ESTest extends MathRuntimeException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException((Localizable) null, objectArray0);
      String string0 = mathRuntimeException0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException((Localizable) null, objectArray0);
      String string0 = mathRuntimeException0.getLocalizedMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable((Throwable) null);
      IllegalArgumentException illegalArgumentException0 = MathRuntimeException.createIllegalArgumentException((Throwable) mockThrowable0);
      assertNotNull(illegalArgumentException0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException((Localizable) null, objectArray0);
      IOException iOException0 = MathRuntimeException.createIOException(mathRuntimeException0);
      assertNotNull(iOException0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException((Throwable) null);
      // Undeclared exception!
      try { 
        mathRuntimeException0.printStackTrace((PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException((Throwable) null);
      Locale locale0 = Locale.CANADA_FRENCH;
      // Undeclared exception!
      try { 
        mathRuntimeException0.getMessage(locale0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to [Ljava.lang.Object;
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      ParseException parseException0 = MathRuntimeException.createParseException((-1), (Localizable) null, objectArray0);
      // Undeclared exception!
      try { 
        MathRuntimeException.createInternalError(parseException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathRuntimeException.createIOException((Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      ParseException parseException0 = MathRuntimeException.createParseException(2742, (Localizable) null, objectArray0);
      MathRuntimeException mathRuntimeException0 = null;
      try {
        mathRuntimeException0 = new MathRuntimeException(parseException0, (Localizable) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL;
      ConcurrentModificationException concurrentModificationException0 = MathRuntimeException.createConcurrentModificationException(localizedFormats0, (Object[]) null);
      MathRuntimeException mathRuntimeException0 = null;
      try {
        mathRuntimeException0 = new MathRuntimeException(concurrentModificationException0, localizedFormats0, (Object[]) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to [Ljava.lang.Object;
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException((Throwable) null);
      // Undeclared exception!
      try { 
        mathRuntimeException0.getMessage((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException((Throwable) null);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("'A4T)/q");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0, 1014);
      MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0);
      mathRuntimeException0.printStackTrace((PrintStream) mockPrintStream0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException((Throwable) null);
      // Undeclared exception!
      try { 
        mathRuntimeException0.getMessage();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to [Ljava.lang.Object;
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException((Localizable) null, objectArray0);
      Locale locale0 = Locale.CANADA_FRENCH;
      String string0 = mathRuntimeException0.getMessage(locale0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RuntimeException runtimeException0 = MathRuntimeException.createInternalError((Throwable) null);
      MathRuntimeException mathRuntimeException0 = null;
      try {
        mathRuntimeException0 = new MathRuntimeException(runtimeException0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to [Ljava.lang.Object;
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RuntimeException runtimeException0 = MathRuntimeException.createInternalError((Throwable) null);
      // Undeclared exception!
      try { 
        MathRuntimeException.createIllegalArgumentException((Throwable) runtimeException0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to [Ljava.lang.Object;
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DummyLocalizable dummyLocalizable0 = new DummyLocalizable("o7!d{");
      Object[] objectArray0 = new Object[6];
      NoSuchElementException noSuchElementException0 = MathRuntimeException.createNoSuchElementException(dummyLocalizable0, objectArray0);
      MathRuntimeException mathRuntimeException0 = null;
      try {
        mathRuntimeException0 = new MathRuntimeException(noSuchElementException0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unmatched braces in the pattern.
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.CONTRACTION_CRITERIA_SMALLER_THAN_EXPANSION_FACTOR;
      Object[] objectArray0 = new Object[0];
      IllegalStateException illegalStateException0 = MathRuntimeException.createIllegalStateException(localizedFormats0, objectArray0);
      MathRuntimeException mathRuntimeException0 = null;
      try {
        mathRuntimeException0 = new MathRuntimeException(illegalStateException0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to [Ljava.lang.Object;
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.NO_REGRESSORS;
      IllegalArgumentException illegalArgumentException0 = MathRuntimeException.createIllegalArgumentException((Localizable) localizedFormats0, (Object[]) null);
      MathRuntimeException mathRuntimeException0 = null;
      try {
        mathRuntimeException0 = new MathRuntimeException(illegalArgumentException0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to [Ljava.lang.Object;
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.NEGATIVE_NUMBER_OF_SUCCESSES;
      ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException0 = MathRuntimeException.createArrayIndexOutOfBoundsException(localizedFormats0, (Object[]) null);
      MathRuntimeException mathRuntimeException0 = null;
      try {
        mathRuntimeException0 = new MathRuntimeException(arrayIndexOutOfBoundsException0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to [Ljava.lang.Object;
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ArithmeticException arithmeticException0 = MathRuntimeException.createArithmeticException((Localizable) null, (Object[]) null);
      MathRuntimeException mathRuntimeException0 = null;
      try {
        mathRuntimeException0 = new MathRuntimeException(arithmeticException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.USER_EXCEPTION;
      Object[] objectArray0 = new Object[0];
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException((Throwable) null, localizedFormats0, objectArray0);
      MathRuntimeException mathRuntimeException1 = null;
      try {
        mathRuntimeException1 = new MathRuntimeException(mathRuntimeException0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to [Ljava.lang.Object;
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.INFINITE_VALUE_CONVERSION;
      Object[] objectArray0 = new Object[0];
      IllegalArgumentException illegalArgumentException0 = MathRuntimeException.createIllegalArgumentException((Localizable) localizedFormats0, objectArray0);
      // Undeclared exception!
      try { 
        MathRuntimeException.createIllegalArgumentException((Throwable) illegalArgumentException0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to [Ljava.lang.Object;
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException((Throwable) null);
      LocalizedFormats localizedFormats0 = LocalizedFormats.INITIAL_CAPACITY_NOT_POSITIVE;
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        mathRuntimeException0.addMessage(localizedFormats0, objectArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // This class is deprecated; calling this method is a bug.
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ParseException parseException0 = MathRuntimeException.createParseException((-4381), (Localizable) null, (Object[]) null);
      // Undeclared exception!
      try { 
        MathRuntimeException.createIllegalArgumentException((Throwable) parseException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.TOO_MANY_REGRESSORS;
      Object[] objectArray0 = new Object[0];
      ArithmeticException arithmeticException0 = MathRuntimeException.createArithmeticException(localizedFormats0, objectArray0);
      // Undeclared exception!
      try { 
        MathRuntimeException.createIOException(arithmeticException0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to [Ljava.lang.Object;
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.NOT_INCREASING_NUMBER_OF_POINTS;
      ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException0 = MathRuntimeException.createArrayIndexOutOfBoundsException(localizedFormats0, (Object[]) null);
      // Undeclared exception!
      try { 
        MathRuntimeException.createIOException(arrayIndexOutOfBoundsException0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to [Ljava.lang.Object;
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException((Throwable) null);
      // Undeclared exception!
      try { 
        mathRuntimeException0.setContext("", (Object) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // This class is deprecated; calling this method is a bug.
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.NOT_POSITIVE_SHAPE;
      IllegalStateException illegalStateException0 = MathRuntimeException.createIllegalStateException(localizedFormats0, (Object[]) null);
      // Undeclared exception!
      try { 
        MathRuntimeException.createIllegalArgumentException((Throwable) illegalStateException0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to [Ljava.lang.Object;
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.NUMERATOR_OVERFLOW_AFTER_MULTIPLY;
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException(localizedFormats0, (Object[]) null);
      // Undeclared exception!
      try { 
        MathRuntimeException.createIllegalArgumentException((Throwable) mathRuntimeException0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to [Ljava.lang.Object;
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE;
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException((Throwable) null, localizedFormats0, (Object[]) null);
      // Undeclared exception!
      try { 
        mathRuntimeException0.getContextKeys();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // This class is deprecated; calling this method is a bug.
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException((Throwable) null);
      // Undeclared exception!
      try { 
        mathRuntimeException0.getContext("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // This class is deprecated; calling this method is a bug.
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.NOT_POWER_OF_TWO_PLUS_ONE;
      Object[] objectArray0 = new Object[1];
      EOFException eOFException0 = MathRuntimeException.createEOFException(localizedFormats0, objectArray0);
      // Undeclared exception!
      try { 
        MathRuntimeException.createInternalError(eOFException0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to [Ljava.lang.Object;
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException((Throwable) null);
      // Undeclared exception!
      try { 
        mathRuntimeException0.getLocalizedMessage();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to [Ljava.lang.Object;
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException((Throwable) null);
      mathRuntimeException0.printStackTrace();
  }
}
