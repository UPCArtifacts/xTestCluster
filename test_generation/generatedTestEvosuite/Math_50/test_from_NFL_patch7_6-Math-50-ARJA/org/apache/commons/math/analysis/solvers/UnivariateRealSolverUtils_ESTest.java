/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 18:41:00 GMT 2021
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.function.Atan;
import org.apache.commons.math.analysis.function.Atanh;
import org.apache.commons.math.analysis.function.Ceil;
import org.apache.commons.math.analysis.function.Log;
import org.apache.commons.math.analysis.function.Log10;
import org.apache.commons.math.analysis.function.Logit;
import org.apache.commons.math.analysis.function.Power;
import org.apache.commons.math.analysis.function.Sigmoid;
import org.apache.commons.math.analysis.function.Sin;
import org.apache.commons.math.analysis.function.Sinh;
import org.apache.commons.math.analysis.function.Sqrt;
import org.apache.commons.math.analysis.function.Ulp;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BracketedUnivariateRealSolver;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.apache.commons.math.analysis.solvers.PegasusSolver;
import org.apache.commons.math.analysis.solvers.RegulaFalsiSolver;
import org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UnivariateRealSolverUtils_ESTest extends UnivariateRealSolverUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      boolean boolean0 = UnivariateRealSolverUtils.isSequence((-2125.39236052755), 0.0, 0.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = UnivariateRealSolverUtils.isSequence(3671.6228395, (-1.0), 0.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Log10 log10_0 = new Log10();
      assertNotNull(log10_0);
      
      UnivariateRealSolverUtils.verifyBracketing(log10_0, 1.1102230246251565E-16, 1.0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Sin sin0 = new Sin();
      assertNotNull(sin0);
      
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.verifyBracketing(sin0, 0.0, Double.NaN);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [0, \uFFFD], values: [0, \uFFFD]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Atan atan0 = new Atan();
      assertNotNull(atan0);
      
      boolean boolean0 = UnivariateRealSolverUtils.isBracketing(atan0, 0.0, 0.0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Sqrt sqrt0 = new Sqrt();
      assertNotNull(sqrt0);
      
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) sqrt0, 0.875, 0.5, 587.585, 200);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of iterations=200, maximum iterations=200, initial=0.875, lower bound=0.5, upper bound=587.585, final a value=0.5, final b value=200.875, f(a)=0.707, f(b)=14.173
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Sigmoid sigmoid0 = new Sigmoid();
      assertNotNull(sigmoid0);
      
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) sigmoid0, 0.5, 0.5, 0.5, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bad value for maximum iterations number: 0
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Sin sin0 = new Sin();
      assertNotNull(sin0);
      
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1.0, 1.0);
      assertEquals(0.0, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(1.0, illinoisSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(1.0E-15, illinoisSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(1.0, illinoisSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, illinoisSolver0.getMin(), 0.01);
      assertEquals(0.0, illinoisSolver0.getMax(), 0.01);
      assertNotNull(illinoisSolver0);
      
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = UnivariateRealSolverUtils.forceSide(148, sin0, illinoisSolver0, (-3088.85522), 777.068812715105, 777.068812715105, allowedSolution0);
      assertEquals(1.0, illinoisSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(1.0E-15, illinoisSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(777.068812715105, illinoisSolver0.getMin(), 0.01);
      assertEquals(1.0, illinoisSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals((-3088.85522), illinoisSolver0.getStartValue(), 0.01);
      assertEquals(0.0, illinoisSolver0.getMax(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Log10 log10_0 = new Log10();
      assertNotNull(log10_0);
      
      PegasusSolver pegasusSolver0 = new PegasusSolver((-517.55172813), 0.0);
      assertEquals(0.0, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals((-517.55172813), pegasusSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
      assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
      assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
      assertNotNull(pegasusSolver0);
      
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = UnivariateRealSolverUtils.forceSide(18, log10_0, pegasusSolver0, (-517.55172813), 1.0, 18, allowedSolution0);
      assertEquals(0.0, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(18.0, pegasusSolver0.getMax(), 0.01);
      assertEquals((-517.55172813), pegasusSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(1.0, pegasusSolver0.getMin(), 0.01);
      assertEquals((-517.55172813), pegasusSolver0.getStartValue(), 0.01);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Sin sin0 = new Sin();
      assertNotNull(sin0);
      
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      assertEquals(1.0E-6, bracketingNthOrderBrentSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(1.0E-15, bracketingNthOrderBrentSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getMax(), 0.01);
      assertEquals(1.0E-14, bracketingNthOrderBrentSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getStartValue(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getMin(), 0.01);
      assertEquals(5, bracketingNthOrderBrentSolver0.getMaximalOrder());
      assertNotNull(bracketingNthOrderBrentSolver0);
      
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.forceSide(200, sin0, bracketingNthOrderBrentSolver0, 0.5, (-971.0), (-1.1611909749216809), allowedSolution0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [0.5, -1.161]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Log10 log10_0 = new Log10();
      assertNotNull(log10_0);
      
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
      assertEquals(1.0E-14, pegasusSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
      assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
      assertEquals(1.0E-6, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
      assertNotNull(pegasusSolver0);
      
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.forceSide(135, log10_0, pegasusSolver0, 0.5, 0.5, 0.5, allowedSolution0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of iterations=136, maximum iterations=135, initial=0.5, lower bound=0.5, upper bound=0.5, final a value=0.5, final b value=0.5, f(a)=-0.301, f(b)=-0.301
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Power power0 = new Power(4295.5963094);
      assertNotNull(power0);
      
      double double0 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) power0, 1.3443E-318, 4295.5963094, (-1547.8));
      assertEquals(1.3443E-318, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Atanh atanh0 = new Atanh();
      assertNotNull(atanh0);
      
      double double0 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) atanh0, (-3820.2773127545565), -0.0);
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Sin sin0 = new Sin();
      assertNotNull(sin0);
      
      double double0 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) sin0, (-2548.4), (-1609.7));
      assertEquals((-1655.619328441821), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = UnivariateRealSolverUtils.midpoint(0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = UnivariateRealSolverUtils.midpoint(1.633123935319537E16, 1.633123935319537E16);
      assertEquals(1.633123935319537E16, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Sin sin0 = new Sin();
      assertNotNull(sin0);
      
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      assertEquals(1.0E-6, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
      assertEquals(1.0E-14, pegasusSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
      assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
      assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
      assertNotNull(pegasusSolver0);
      
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      double double0 = UnivariateRealSolverUtils.forceSide((-2988), sin0, pegasusSolver0, (-2988), 1.0, 1948.222, allowedSolution0);
      assertEquals(1.0E-6, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
      assertEquals(1.0E-14, pegasusSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
      assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
      assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals((-2988.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Log10 log10_0 = new Log10();
      assertNotNull(log10_0);
      
      double[] doubleArray0 = UnivariateRealSolverUtils.bracket((UnivariateRealFunction) log10_0, (-509.97235351408), (-517.55172813), 0.0);
      assertNotNull(doubleArray0);
      assertArrayEquals(new double[] {(-510.97235351408), (-508.97235351408)}, doubleArray0, 0.01);
      assertEquals(2, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.verifySequence(0.5, 2819.609, 0.5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [2,819.609, 0.5]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Log10 log10_0 = new Log10();
      assertNotNull(log10_0);
      
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.verifyBracketing(log10_0, 491.122675578, 491.122675578);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [491.123, 491.123]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Sinh sinh0 = new Sinh();
      assertNotNull(sinh0);
      
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) sinh0, 1.7029898543501842E-8, (-0.8732972972139946));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [0, -0.437]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.isBracketing((UnivariateRealFunction) null, 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Sinh sinh0 = new Sinh();
      assertNotNull(sinh0);
      
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1024, 1315.0319121);
      assertEquals(0.0, regulaFalsiSolver0.getMax(), 0.01);
      assertEquals(1024.0, regulaFalsiSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(1.0E-15, regulaFalsiSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(1315.0319121, regulaFalsiSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, regulaFalsiSolver0.getMin(), 0.01);
      assertEquals(0.0, regulaFalsiSolver0.getStartValue(), 0.01);
      assertNotNull(regulaFalsiSolver0);
      
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.forceSide(1024, sinh0, regulaFalsiSolver0, (-472.4103), (-3975.634726759049), 1024, allowedSolution0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (1,022) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Sin sin0 = new Sin();
      assertNotNull(sin0);
      
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getStartValue(), 0.01);
      assertEquals(1.0E-6, bracketingNthOrderBrentSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(1.0E-15, bracketingNthOrderBrentSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getMax(), 0.01);
      assertEquals(1.0E-14, bracketingNthOrderBrentSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getMin(), 0.01);
      assertEquals(5, bracketingNthOrderBrentSolver0.getMaximalOrder());
      assertNotNull(bracketingNthOrderBrentSolver0);
      
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.forceSide(200, sin0, bracketingNthOrderBrentSolver0, 0.5, (-971.0), 0.0, allowedSolution0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [0.5, 0]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Sqrt sqrt0 = new Sqrt();
      assertNotNull(sqrt0);
      
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.forceSide(815, sqrt0, (BracketedUnivariateRealSolver<UnivariateRealFunction>) null, 0.5, 2174.572, 0.5, allowedSolution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Sqrt sqrt0 = new Sqrt();
      assertNotNull(sqrt0);
      
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) sqrt0, (double) 200, 587.585, 587.585, 200);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [587.585, 200]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) null, 1.2246467991473532E-16, 0.0, (-15.92870871003697));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UnivariateRealSolverUtils.verifyInterval(0.0, 2086);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.verifyInterval(0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [0, 0]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Log log0 = new Log();
      assertNotNull(log0);
      
      boolean boolean0 = UnivariateRealSolverUtils.isBracketing(log0, 0.0, 1262.0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Log log0 = new Log();
      assertNotNull(log0);
      
      boolean boolean0 = UnivariateRealSolverUtils.isBracketing(log0, 587.585, 0.3333333134651184);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Ulp ulp0 = new Ulp();
      assertNotNull(ulp0);
      
      boolean boolean0 = UnivariateRealSolverUtils.isBracketing(ulp0, 2086, 2086);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      UnivariateRealSolverUtils.verifySequence((-132.0), (-0.7743820675922738), 2109.04);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      boolean boolean0 = UnivariateRealSolverUtils.isSequence((-4.799999996313596E-5), 200, 1.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      boolean boolean0 = UnivariateRealSolverUtils.isSequence((-1025.7885215306146), 1368.6, 1614.888920343);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      boolean boolean0 = UnivariateRealSolverUtils.isSequence(3671.6228395, 3671.6228395, 0.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Ceil ceil0 = new Ceil();
      assertNotNull(ceil0);
      
      boolean boolean0 = UnivariateRealSolverUtils.isBracketing(ceil0, (-1.0), (-1595.320046));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Ulp ulp0 = new Ulp();
      assertNotNull(ulp0);
      
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) ulp0, 188.875, (-2177.0), 551.801615506154, 2086);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of iterations=2,086, maximum iterations=2,086, initial=188.875, lower bound=-2,177, upper bound=551.802, final a value=-1,897.125, final b value=551.802, f(a)=0, f(b)=0
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Sin sin0 = new Sin();
      assertNotNull(sin0);
      
      double[] doubleArray0 = UnivariateRealSolverUtils.bracket((UnivariateRealFunction) sin0, (-1.0), (-971.0), 0.5, 200);
      assertNotNull(doubleArray0);
      assertArrayEquals(new double[] {(-2.0), 0.0}, doubleArray0, 0.01);
      assertEquals(2, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Atan atan0 = new Atan();
      assertNotNull(atan0);
      
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) atan0, 1.1730463525082348E-7, (-398.51), 0.0, (-414));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bad value for maximum iterations number: -414
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) null, 1.3443E-318, 1.3443E-318, 4.914046479261593, 2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      assertEquals(1.0E-6, bracketingNthOrderBrentSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(1.0E-14, bracketingNthOrderBrentSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(5, bracketingNthOrderBrentSolver0.getMaximalOrder());
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getMin(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getMax(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getStartValue(), 0.01);
      assertEquals(1.0E-15, bracketingNthOrderBrentSolver0.getFunctionValueAccuracy(), 0.01);
      assertNotNull(bracketingNthOrderBrentSolver0);
      
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      Sinh sinh0 = new Sinh();
      assertNotNull(sinh0);
      
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.forceSide(200, sinh0, bracketingNthOrderBrentSolver0, (-3371.358150411266), (-1.0), (-1.0), allowedSolution0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of iterations=200, maximum iterations=200, initial=-3,371.358, lower bound=-1, upper bound=-1, final a value=-1, final b value=-3,371.358, f(a)=-1.175, f(b)=-\u221E
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Log10 log10_0 = new Log10();
      assertNotNull(log10_0);
      
      PegasusSolver pegasusSolver0 = new PegasusSolver(2506, (-509.97235351408), (-509.97235351408));
      assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
      assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
      assertEquals((-509.97235351408), pegasusSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
      assertEquals(2506.0, pegasusSolver0.getRelativeAccuracy(), 0.01);
      assertEquals((-509.97235351408), pegasusSolver0.getAbsoluteAccuracy(), 0.01);
      assertNotNull(pegasusSolver0);
      
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.forceSide(2506, log10_0, pegasusSolver0, (-519.2289241688147), (-509.97235351408), 2506, allowedSolution0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of iterations=2,506, maximum iterations=2,506, initial=-519.229, lower bound=-509.972, upper bound=2,506, final a value=-509.972, final b value=2,506, f(a)=\uFFFD, f(b)=3.399
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Ulp ulp0 = new Ulp();
      assertNotNull(ulp0);
      
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      PegasusSolver pegasusSolver0 = new PegasusSolver(Integer.MAX_VALUE, (-340.5340287216), (-3304.217657));
      assertEquals((-3304.217657), pegasusSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
      assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
      assertEquals(2.147483647E9, pegasusSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
      assertEquals((-340.5340287216), pegasusSolver0.getAbsoluteAccuracy(), 0.01);
      assertNotNull(pegasusSolver0);
      
      // Undeclared exception!
      UnivariateRealSolverUtils.forceSide(Integer.MAX_VALUE, ulp0, pegasusSolver0, (-6.918029881908042), 122.72, (-3304.217657), allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Sin sin0 = new Sin();
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(0.5, 200);
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.forceSide(1023, sin0, illinoisSolver0, 0.5, 1023, 200, allowedSolution0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of iterations=1,023, maximum iterations=1,023, initial=0.5, lower bound=1,023, upper bound=200, final a value=1,023, final b value=200, f(a)=-0.916, f(b)=-0.873
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Ulp ulp0 = new Ulp();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      PegasusSolver pegasusSolver0 = new PegasusSolver(4375.57455307731, 4375.57455307731);
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.forceSide(22, ulp0, pegasusSolver0, 4375.57455307731, (-1969.815491), 608.0257, allowedSolution0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of iterations=22, maximum iterations=22, initial=4,375.575, lower bound=-1,969.815, upper bound=608.026, final a value=-1,969.815, final b value=608.026, f(a)=0, f(b)=0
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) null, (-289.7800955819), 9.946733132038881, (-289.7800955819));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Logit logit0 = new Logit();
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) logit0, 3711.046105423, (-2834.89667906655), 3711.046105423);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [3,711.046, 438.075]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) null, 0.167, (-765.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Sin sin0 = new Sin();
      double double0 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) sin0, (-124.32622741), (double) 200);
      assertEquals(40.840704494147964, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      double double0 = UnivariateRealSolverUtils.midpoint((-1543.922), 691.65634325636);
      assertEquals((-426.13282837182004), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Log10 log10_0 = new Log10();
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) log10_0, (-509.97235351408), (-517.55172813), (-509.97235351408));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [-509.972, -509.972]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Ulp ulp0 = new Ulp();
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) ulp0, 0.875, (-1.0), 2062.875, 2086);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of iterations=2,062, maximum iterations=2,086, initial=0.875, lower bound=-1, upper bound=2,062.875, final a value=-1, final b value=2,062.875, f(a)=0, f(b)=0
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }
}
