/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 11 02:15:27 GMT 2022
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.event.MouseEvent;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Arc2D;
import java.awt.geom.Area;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import javax.swing.JToggleButton;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.PeriodAxisLabelInfo;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.PieDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PiePlot3D_ESTest extends PiePlot3D_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("-&hY`KwuJSJ>;_9R<", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      Rectangle2D rectangle2D0 = piePlot3D0.DEFAULT_INSETS.createAdjustedRectangle(rectangle0, lengthAdjustmentType0, lengthAdjustmentType0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(rectangle2D0, (-499.2), (-0.5485559295027547), 0);
      Area area0 = new Area(arc2D_Double0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      piePlot3D0.drawSide(graphics2D0, defaultCaret0, arc2D_Double0, area0, area0, spiderWebPlot0.DEFAULT_LABEL_BACKGROUND_PAINT, jFreeChart0.DEFAULT_BACKGROUND_PAINT, spiderWebPlot0.DEFAULT_OUTLINE_STROKE, true, true);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(piePlot3D0);
      RectangleInsets rectangleInsets0 = jFreeChart0.getPadding();
      piePlot3D0.setInsets(rectangleInsets0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      jFreeChart0.createBufferedImage(6394, 10, chartRenderingInfo0);
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("|&hY`KwuJSJ>;_9R<", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 1.0F, (-2770.163), chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      Point point0 = new Point();
      PlotState plotState0 = new PlotState();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      piePlot3D0.draw(graphics2D0, rectangle2D0, point0, plotState0, plotRenderingInfo0);
      assertFalse(piePlot3D0.isCircular());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      
      piePlot3D0.setDepthFactor(0.0);
      double double0 = piePlot3D0.getDepthFactor();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      piePlot3D0.setDepthFactor((-3856.16991035178));
      double double0 = piePlot3D0.getDepthFactor();
      assertEquals((-3856.16991035178), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
      assertFalse(piePlot3D0.getDarkerSides());
      
      piePlot3D0.setDarkerSides(true);
      boolean boolean0 = piePlot3D0.getDarkerSides();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      Area area0 = new Area(piePlot3D0.DEFAULT_LEGEND_ITEM_BOX);
      Rectangle rectangle0 = new Rectangle();
      // Undeclared exception!
      try { 
        piePlot3D0.drawSide((Graphics2D) null, rectangle0, arc2D_Float0, area0, area0, piePlot3D0.DEFAULT_LABEL_PAINT, piePlot3D0.DEFAULT_BACKGROUND_PAINT, piePlot3D0.DEFAULT_OUTLINE_STROKE, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PiePlot3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("4O~\"Zk,1&BB", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, false);
      BufferedImage bufferedImage0 = new BufferedImage(15, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(90.0);
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, false, false);
      Rectangle2D rectangle2D0 = jFreeChart0.DEFAULT_TITLE_FONT.getStringBounds("4O~\"Zk,1&BB", fontRenderContext0);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double();
      Area area0 = new Area();
      // Undeclared exception!
      try { 
        piePlot3D0.drawSide(graphics2D0, rectangle2D0, arc2D_Double0, area0, area0, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT, piePlot3D0.DEFAULT_BACKGROUND_PAINT, (Stroke) null, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("", piePlot3D0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotState plotState0 = new PlotState();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        piePlot3D0.draw(graphics2D0, (Rectangle2D) null, (Point2D) null, plotState0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("4O~\"Zk,1B", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(15, (-1459));
      PlotState plotState0 = new PlotState();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        piePlot3D0.draw(graphics2D0, rectangle0, (Point2D) null, plotState0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.data.general.DatasetUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
      boolean boolean0 = piePlot3D0.getDarkerSides();
      assertFalse(boolean0);
      assertFalse(piePlot3D0.isCircular());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      PiePlot3D piePlot3D1 = new PiePlot3D();
      boolean boolean0 = piePlot3D0.equals(piePlot3D1);
      assertEquals(0.12, piePlot3D1.getDepthFactor(), 0.01);
      assertFalse(piePlot3D1.getDarkerSides());
      assertTrue(boolean0);
      assertFalse(piePlot3D1.isCircular());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      boolean boolean0 = piePlot3D0.equals(piePlot3D0);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertTrue(boolean0);
      assertFalse(piePlot3D0.isCircular());
      assertFalse(piePlot3D0.getDarkerSides());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("-&hY`KwuJSJ>;_9R<", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
      boolean boolean0 = piePlot3D0.equals(jFreeChart0);
      assertFalse(piePlot3D0.isCircular());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(boolean0);
      assertFalse(piePlot3D0.getDarkerSides());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("4O~\"Zk,1&BB", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Arc2D.Double arc2D_Double0 = new Arc2D.Double();
      Rectangle rectangle0 = new Rectangle();
      Area area0 = new Area();
      JToggleButton jToggleButton0 = new JToggleButton("4O~\"Zk,1&BB");
      MouseEvent mouseEvent0 = new MouseEvent(jToggleButton0, 1302, 15, 0, 0, 2149, 0, false);
      Point point0 = mouseEvent0.getPoint();
      arc2D_Double0.setAngles((Point2D) point0, (Point2D) point0);
      piePlot3D0.drawSide(graphics2D0, rectangle0, arc2D_Double0, area0, area0, piePlot3D0.DEFAULT_LABEL_BACKGROUND_PAINT, piePlot3D0.DEFAULT_BACKGROUND_PAINT, piePlot3D0.DEFAULT_LABEL_OUTLINE_STROKE, false, true);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      BufferedImage bufferedImage0 = new BufferedImage(15, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Arc2D.Double arc2D_Double0 = new Arc2D.Double();
      Rectangle rectangle0 = new Rectangle();
      Area area0 = new Area();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(0, 10);
      point0.move((-3585), 0);
      arc2D_Double0.setAngles((Point2D) point0, (Point2D) point0);
      piePlot3D0.drawSide(graphics2D0, rectangle0, arc2D_Double0, area0, area0, piePlot3D0.DEFAULT_LABEL_PAINT, piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT, piePlot3D0.DEFAULT_LABEL_OUTLINE_STROKE, true, true);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      BufferedImage bufferedImage0 = new BufferedImage(15, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(Float.NEGATIVE_INFINITY, Float.NEGATIVE_INFINITY, 10, 10, 10, 10, 0);
      piePlot3D0.drawSide(graphics2D0, rectangle0, arc2D_Float0, area0, area0, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT, piePlot3D0.DEFAULT_OUTLINE_PAINT, piePlot3D0.DEFAULT_LABEL_OUTLINE_STROKE, false, true);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      BufferedImage bufferedImage0 = new BufferedImage(15, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(Float.NEGATIVE_INFINITY, Float.NEGATIVE_INFINITY, 10, 10, 10, 10, 0);
      piePlot3D0.drawSide(graphics2D0, rectangle0, arc2D_Float0, area0, area0, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT, piePlot3D0.DEFAULT_OUTLINE_PAINT, piePlot3D0.DEFAULT_LABEL_OUTLINE_STROKE, false, false);
      assertFalse(piePlot3D0.isCircular());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.getDarkerSides());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("-&hY`KwuJSJ>;_9R<", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      Rectangle2D rectangle2D0 = piePlot3D0.DEFAULT_INSETS.createAdjustedRectangle(rectangle0, lengthAdjustmentType0, lengthAdjustmentType0);
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(Float.POSITIVE_INFINITY, 331.0F, (-1.0F), 6.0F, 10, 2617.363F, 0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Area area0 = new Area();
      piePlot3D0.drawSide(graphics2D0, rectangle2D0, arc2D_Float0, area0, area0, spiderWebPlot0.DEFAULT_LABEL_BACKGROUND_PAINT, spiderWebPlot0.DEFAULT_LABEL_BACKGROUND_PAINT, spiderWebPlot0.DEFAULT_OUTLINE_STROKE, false, false);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("-&hY`KwuJSJ>;_9R<", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      Rectangle2D rectangle2D0 = piePlot3D0.DEFAULT_INSETS.createAdjustedRectangle(rectangle0, lengthAdjustmentType0, lengthAdjustmentType0);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(rectangle0, 3232.468, 8.0, 0);
      Area area0 = new Area();
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
      piePlot3D0.drawSide(graphics2D0, rectangle2D0, arc2D_Double0, area0, area0, jFreeChart0.DEFAULT_BACKGROUND_PAINT, jFreeChart0.DEFAULT_BACKGROUND_PAINT, basicStroke0, true, true);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.getDarkerSides());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("-&hY`KwuJSJ>;(_9R<", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      Rectangle2D rectangle2D0 = piePlot3D0.DEFAULT_INSETS.createAdjustedRectangle(rectangle0, lengthAdjustmentType0, lengthAdjustmentType0);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(rectangle2D0, 1432.096311288, 270.95, 0);
      Area area0 = new Area();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      piePlot3D0.drawSide(graphics2D0, rectangle0, arc2D_Double0, area0, area0, spiderWebPlot0.DEFAULT_LABEL_BACKGROUND_PAINT, spiderWebPlot0.DEFAULT_LABEL_OUTLINE_PAINT, spiderWebPlot0.DEFAULT_LABEL_OUTLINE_STROKE, true, false);
      assertFalse(piePlot3D0.isCircular());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      BufferedImage bufferedImage0 = new BufferedImage(15, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(Float.NEGATIVE_INFINITY, (-909.3126F), 10, 1549.0F, (-796.84F), 10, 0);
      SystemColor systemColor0 = SystemColor.controlText;
      piePlot3D0.drawSide(graphics2D0, rectangle0, arc2D_Float0, area0, area0, piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT, systemColor0, piePlot3D0.DEFAULT_OUTLINE_STROKE, false, true);
      assertFalse(piePlot3D0.isCircular());
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      BufferedImage bufferedImage0 = new BufferedImage(15, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(Float.NEGATIVE_INFINITY, 0, 10, 10, (-796.84F), 10, 0);
      SystemColor systemColor0 = SystemColor.controlText;
      piePlot3D0.drawSide(graphics2D0, rectangle0, arc2D_Float0, area0, area0, piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT, systemColor0, piePlot3D0.DEFAULT_OUTLINE_STROKE, true, true);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("-&hY`KwuJSJ>;(_9R<", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      Rectangle2D rectangle2D0 = piePlot3D0.DEFAULT_INSETS.createAdjustedRectangle(rectangle0, lengthAdjustmentType0, lengthAdjustmentType0);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(rectangle2D0, 1432.096311288, 270.95, 0);
      Area area0 = new Area();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Color color0 = (Color)SymbolAxis.DEFAULT_GRID_BAND_ALTERNATE_PAINT;
      piePlot3D0.drawSide(graphics2D0, rectangle2D0, arc2D_Double0, area0, area0, spiderWebPlot0.DEFAULT_LABEL_OUTLINE_PAINT, color0, spiderWebPlot0.DEFAULT_OUTLINE_STROKE, true, true);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.getDarkerSides());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("-&hY`KwuJSJ>;9R<", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Area area0 = new Area(line2D_Double0);
      Rectangle rectangle0 = new Rectangle();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(1.0F, 0.8F, 0, 10, 2540.2654F, 2704.0505F, 0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      piePlot3D0.drawSide(graphics2D0, rectangle0, arc2D_Float0, area0, area0, jFreeChart0.DEFAULT_BACKGROUND_PAINT, spiderWebPlot0.DEFAULT_LABEL_BACKGROUND_PAINT, spiderWebPlot0.DEFAULT_OUTLINE_STROKE, true, false);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      BufferedImage bufferedImage0 = new BufferedImage(15, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(Float.NEGATIVE_INFINITY, Float.NEGATIVE_INFINITY, (-796.84F), 10, 0.1F, (-1557.2327F), 0);
      piePlot3D0.drawSide(graphics2D0, rectangle0, arc2D_Float0, area0, area0, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT, piePlot3D0.DEFAULT_OUTLINE_PAINT, piePlot3D0.DEFAULT_LABEL_OUTLINE_STROKE, false, true);
      assertFalse(piePlot3D0.isCircular());
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      BufferedImage bufferedImage0 = new BufferedImage(15, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(0.1F, Float.NEGATIVE_INFINITY, (-796.84F), 15, 10, (-1557.2327F), 0);
      piePlot3D0.drawSide(graphics2D0, rectangle0, arc2D_Float0, area0, area0, piePlot3D0.DEFAULT_LABEL_PAINT, piePlot3D0.DEFAULT_LABEL_PAINT, piePlot3D0.DEFAULT_OUTLINE_STROKE, true, false);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.isCircular());
      assertFalse(piePlot3D0.getDarkerSides());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("-&hY`KwuJSJ>;9R<", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(15, 0.4, (-544.225747453598), 10);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(rectangle2D_Double0, 15.0, (-0.16334648159196186), 0);
      Area area0 = new Area();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      piePlot3D0.drawSide(graphics2D0, rectangle0, arc2D_Double0, area0, area0, spiderWebPlot0.DEFAULT_LABEL_BACKGROUND_PAINT, spiderWebPlot0.DEFAULT_LABEL_BACKGROUND_PAINT, spiderWebPlot0.DEFAULT_OUTLINE_STROKE, false, true);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("-&hY`KwuJSJ>;9R<", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(15, 0.4, (-544.225747453598), 10);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(rectangle2D_Double0, 15.0, (-0.16334648159196186), 0);
      Area area0 = new Area(piePlot3D0.DEFAULT_LEGEND_ITEM_BOX);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      piePlot3D0.drawSide(graphics2D0, rectangle2D_Double0, arc2D_Double0, area0, area0, spiderWebPlot0.DEFAULT_LABEL_SHADOW_PAINT, spiderWebPlot0.DEFAULT_LABEL_BACKGROUND_PAINT, spiderWebPlot0.DEFAULT_LABEL_OUTLINE_STROKE, true, false);
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("4O~\"Zk,1&BB", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
      BufferedImage bufferedImage0 = new BufferedImage(10, 15, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Area area0 = new Area();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(0.5F, 0.0F, 0.0F, 0, (-4.0F), (-1990.6F), 0);
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
      Color color0 = (Color)FastScatterPlot.DEFAULT_GRIDLINE_PAINT;
      piePlot3D0.drawSide(graphics2D0, (Rectangle2D) null, arc2D_Float0, area0, area0, jFreeChart0.DEFAULT_BACKGROUND_PAINT, color0, basicStroke0, false, false);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.isCircular());
      assertFalse(piePlot3D0.getDarkerSides());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      BufferedImage bufferedImage0 = new BufferedImage(10, 15, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(0.0F, 0.0F, 0.0F, 0, (-4.0F), (-1990.6F), 0);
      piePlot3D0.drawSide(graphics2D0, rectangle0, arc2D_Float0, area0, area0, piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT, piePlot3D0.DEFAULT_OUTLINE_PAINT, piePlot3D0.DEFAULT_LABEL_OUTLINE_STROKE, true, false);
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      BufferedImage bufferedImage0 = new BufferedImage(15, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(1.0F, 1.0F, 0, 0.0F, 1273.64F, (-1794.82F), 0);
      piePlot3D0.drawSide(graphics2D0, rectangle0, arc2D_Float0, area0, area0, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT, piePlot3D0.DEFAULT_LABEL_BACKGROUND_PAINT, piePlot3D0.DEFAULT_LABEL_OUTLINE_STROKE, true, true);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("|&hY`KwuJSJ>;_9R<", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      Rectangle2D rectangle2D0 = piePlot3D0.DEFAULT_INSETS.createAdjustedRectangle(rectangle0, lengthAdjustmentType0, lengthAdjustmentType0);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(rectangle0, 3232.468, (-499.2), 0);
      Area area0 = new Area(rectangle0);
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
      piePlot3D0.drawSide(graphics2D0, rectangle2D0, arc2D_Double0, area0, area0, jFreeChart0.DEFAULT_BACKGROUND_PAINT, jFreeChart0.DEFAULT_BACKGROUND_PAINT, basicStroke0, true, false);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("-&hY`KwuJSJ>;_9R<", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      Rectangle2D rectangle2D0 = piePlot3D0.DEFAULT_INSETS.createAdjustedRectangle(rectangle0, lengthAdjustmentType0, lengthAdjustmentType0);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(rectangle0, 3232.1020016186485, (-8.0), 0);
      Area area0 = new Area();
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
      piePlot3D0.drawSide(graphics2D0, rectangle2D0, arc2D_Double0, area0, area0, jFreeChart0.DEFAULT_BACKGROUND_PAINT, jFreeChart0.DEFAULT_BACKGROUND_PAINT, basicStroke0, false, false);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("|&hY`KwuJSJ>;_9R<", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      Rectangle2D rectangle2D0 = piePlot3D0.DEFAULT_INSETS.createAdjustedRectangle(rectangle0, lengthAdjustmentType0, lengthAdjustmentType0);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(rectangle0, 3232.468, (-499.2), 0);
      Area area0 = new Area(rectangle0);
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
      piePlot3D0.drawSide(graphics2D0, rectangle2D0, arc2D_Double0, area0, area0, jFreeChart0.DEFAULT_BACKGROUND_PAINT, jFreeChart0.DEFAULT_BACKGROUND_PAINT, basicStroke0, false, false);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      BufferedImage bufferedImage0 = new BufferedImage(10, 15, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(0.0F, 0.0F, 0.0F, 0, (-4.0F), (-1990.6F), 0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.4, false, standardXYToolTipGenerator0);
      Paint paint0 = candlestickRenderer0.getVolumePaint();
      piePlot3D0.drawSide(graphics2D0, rectangle0, arc2D_Float0, area0, area0, paint0, piePlot3D0.DEFAULT_OUTLINE_PAINT, piePlot3D0.DEFAULT_LABEL_OUTLINE_STROKE, true, true);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("-&hY`KwuJSJ>;_9R<", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      Rectangle2D rectangle2D0 = piePlot3D0.DEFAULT_INSETS.createAdjustedRectangle(rectangle0, lengthAdjustmentType0, lengthAdjustmentType0);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(rectangle0, 3232.1020016186485, 8.0, 0);
      Area area0 = new Area();
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
      piePlot3D0.drawSide(graphics2D0, rectangle2D0, arc2D_Double0, area0, area0, jFreeChart0.DEFAULT_BACKGROUND_PAINT, jFreeChart0.DEFAULT_BACKGROUND_PAINT, basicStroke0, false, false);
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, 2.5E11);
      JFreeChart jFreeChart0 = new JFreeChart("-&hY`KwuJSJ>;_9R<", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.isCircular());
      assertFalse(piePlot3D0.getDarkerSides());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, 2.5E11);
      JFreeChart jFreeChart0 = new JFreeChart("mKBu=z |Y)<Mn/[{i", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      jFreeChart0.createBufferedImage(6394, 10, chartRenderingInfo0);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      assertFalse(piePlot3D0.isCircular());
      
      piePlot3D0.setCircular(true);
      JFreeChart jFreeChart0 = new JFreeChart("|&hY`KwuJSJ>;_9R<", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("4O~\"Zk,1&BB", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Arc2D.Double arc2D_Double0 = new Arc2D.Double();
      Rectangle rectangle0 = new Rectangle();
      Area area0 = new Area();
      piePlot3D0.drawSide(graphics2D0, rectangle0, arc2D_Double0, area0, area0, jFreeChart0.DEFAULT_BACKGROUND_PAINT, piePlot3D0.DEFAULT_BACKGROUND_PAINT, piePlot3D0.DEFAULT_OUTLINE_STROKE, true, false);
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("-&hY`KwuJSJ>;_9R<", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      Rectangle2D rectangle2D0 = piePlot3D0.DEFAULT_INSETS.createAdjustedRectangle(rectangle0, lengthAdjustmentType0, lengthAdjustmentType0);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(rectangle2D0, (-499.2), (-0.5485559295027547), 0);
      Area area0 = new Area(arc2D_Double0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      piePlot3D0.drawSide(graphics2D0, rectangle2D0, arc2D_Double0, area0, area0, piePlot3D0.DEFAULT_LABEL_PAINT, piePlot3D0.DEFAULT_BACKGROUND_PAINT, spiderWebPlot0.DEFAULT_LABEL_OUTLINE_STROKE, true, false);
      assertFalse(piePlot3D0.isCircular());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      piePlot3D0.setDepthFactor((-180.0));
      PiePlot3D piePlot3D1 = new PiePlot3D();
      boolean boolean0 = piePlot3D0.equals(piePlot3D1);
      assertEquals((-180.0), piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      piePlot3D0.getPlotType();
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      piePlot3D0.setDarkerSides(true);
      PiePlot3D piePlot3D1 = new PiePlot3D();
      boolean boolean0 = piePlot3D0.equals(piePlot3D1);
      assertTrue(piePlot3D0.getDarkerSides());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      double double0 = piePlot3D0.getDepthFactor();
      assertEquals(0.12, double0, 0.01);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
  }
}
