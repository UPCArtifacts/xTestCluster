/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 21:35:32 GMT 2021
 */

package org.jfree.chart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.util.Locale;
import java.util.SimpleTimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.Timeline;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.CombinedDataset;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.data.general.SeriesDataset;
import org.jfree.data.general.SubSeriesDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.BoxAndWhiskerXYDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.statistics.SimpleHistogramDataset;
import org.jfree.data.time.DynamicTimeSeriesCollection;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.CategoryTableXYDataset;
import org.jfree.data.xy.DefaultIntervalXYDataset;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.DefaultXYZDataset;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.OHLCDataset;
import org.jfree.data.xy.WindDataset;
import org.jfree.data.xy.XYBarDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.data.xy.YIntervalSeriesCollection;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ChartFactory_ESTest extends ChartFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      HistogramDataset histogramDataset0 = new HistogramDataset();
      JFreeChart jFreeChart0 = ChartFactory.createXYAreaChart("", "Jonathan Nash", "", histogramDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      JFreeChart jFreeChart0 = ChartFactory.createWaterfallChart((String) null, "org.jfree.data.xy.MatrixSeriesCollection", (String) null, jDBCCategoryDataset0, plotOrientation0, false, false, false);
      assertFalse(jFreeChart0.isBorderVisible());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(304, 3356);
      JFreeChart jFreeChart0 = ChartFactory.createWaferMapChart("7ZAn!*D>ER4NLvvA", waferMapDataset0, plotOrientation0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Long long0 = new Long((-2913L));
      WaferMapDataset waferMapDataset0 = new WaferMapDataset((-371), (-1763), long0);
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createWaferMapChart("TextAnchor.TOP_RIGHT", waferMapDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      String[] stringArray0 = new String[2];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createStackedBarChart((String) null, "", "", (CategoryDataset) null, plotOrientation0, false, true, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      JFreeChart jFreeChart0 = ChartFactory.createPolarChart("Null 'orientation' argument.", defaultXYZDataset0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart3D("", jDBCCategoryDataset0, tableOrder0, true, true, true);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultStatisticalCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart("iF", defaultStatisticalCategoryDataset0, tableOrder0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createHighLowChart("{am\"<} rWi9r.:,Y?<@", "kM_6e+\"+2>-Q6_%rj}", "kM_6e+\"+2>-Q6_%rj}", (OHLCDataset) null, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newMondayThroughFridayTimeline();
      JFreeChart jFreeChart0 = ChartFactory.createHighLowChart(")~p<,[j._DQFwUb!E", "green", ")~p<,[j._DQFwUb!E", (OHLCDataset) combinedDataset0, (Timeline) segmentedTimeline0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      JFreeChart jFreeChart0 = ChartFactory.createGanttChart("\"H_+4Jy9", "a?7l~;)O", "J", taskSeriesCollection0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset("9|]lNOVH~4'Rv]");
      JFreeChart jFreeChart0 = ChartFactory.createBoxAndWhiskerChart("j;*N\"w", "", "9|]lNOVH~4'Rv]", (BoxAndWhiskerXYDataset) defaultBoxAndWhiskerXYDataset0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      JFreeChart jFreeChart0 = ChartFactory.createBoxAndWhiskerChart("FKVO:k=__jQ;oB", "org.jfree.chart.urls.StandardXYURLGenerator", "U><~P5wx", (BoxAndWhiskerCategoryDataset) defaultBoxAndWhiskerCategoryDataset0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      double[][] doubleArray0 = new double[0][2];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      JFreeChart jFreeChart0 = ChartFactory.createAreaChart("I=veHW}/OY4", "N5(sOyU=", "G=p>@Y\f[+", defaultIntervalCategoryDataset0, plotOrientation0, false, false, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      ChartFactory.createLineChart3D("org.jfree.data.statistics.BoxAndWhiskerItem", "red", "red", taskSeriesCollection0, plotOrientation0, true, true, true);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      // Undeclared exception!
      ChartFactory.createXYStepChart("s\"IP", ")C", "org.jfree.chart.plot.FastScatterPlot", yIntervalSeriesCollection0, plotOrientation0, true, false, false);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(13, (-1), simpleTimeZone0);
      // Undeclared exception!
      try { 
        ChartFactory.createXYStepChart(">=~y1Vk=}pFGa^", ">=~y1Vk=}pFGa^", "", dynamicTimeSeriesCollection0, plotOrientation0, false, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("{am\"<} rWi9r.:,Y?<@");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      ChartFactory.createScatterPlot("c:t?_T,5)[Y\"", "c:t?_T,5)[Y\"", "c:t?_T,5)[Y\"", defaultXYZDataset0, plotOrientation0, true, false, false);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartFactory.createBarChart("w", "~I:}mYC", "", defaultKeyedValues2DDataset0, plotOrientation0, true, false, false);
      ChartFactory.createStackedBarChart3D("", "7ZAn!*D>ER4NLvvA", ",pNj)~9LxOJnIz#}\"", defaultKeyedValues2DDataset0, plotOrientation0, false, false, true);
      // Undeclared exception!
      ChartFactory.createXYStepAreaChart("c:t?_T,5)[Y\"", "w", "c:t?_T,5)[Y\"", defaultXYZDataset0, plotOrientation0, true, false, true);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(true);
      PolarPlot polarPlot0 = new PolarPlot(simpleHistogramDataset0, numberAxis3D0, defaultPolarItemRenderer0);
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      ChartFactory.createStackedXYAreaChart("T=ZHT'FX'X%Ccu|jtj", "The 'data' is null.", "r%*wQas<iunSL", timeTableXYDataset0, plotOrientation0, false, true, false);
      // Undeclared exception!
      ChartFactory.createXYBarChart("T=ZHT'FX'X%Ccu|jtj", "p\u0003qZ3eF3", true, "", simpleHistogramDataset0, plotOrientation0, true, false, true);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String[] stringArray0 = new String[2];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset((SeriesDataset) null, 815);
      // Undeclared exception!
      try { 
        ChartFactory.createXYBarChart("SQtK;", "", true, "", subSeriesDataset0, plotOrientation0, false, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.general.SubSeriesDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      // Undeclared exception!
      try { 
        ChartFactory.createWaterfallChart("uXyk*B3=n23CU,", "iF", "iF", defaultIntervalCategoryDataset0, plotOrientation0, true, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      ChartFactory.createBubbleChart("'xfMp[\"+,", "Lt4c$Yh:", "Qvewh]e]K?Z@-SA", defaultXYZDataset0, plotOrientation0, false, true, false);
      ChartFactory.createXYBarChart("", "'xfMp[\"+,", false, "Qvewh]e]K?Z@-SA", defaultTableXYDataset0, plotOrientation0, false, true, false);
      // Undeclared exception!
      ChartFactory.createTimeSeriesChart("%", "%", "'xfMp[\"+,", defaultTableXYDataset0, true, true, true);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset("", (OHLCDataItem[]) null);
      // Undeclared exception!
      try { 
        ChartFactory.createTimeSeriesChart("", "=change >=-", "1|nj+pr_URW];\"", defaultOHLCDataset0, false, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.DefaultOHLCDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("{am\"<} rWi9r.:,Y?<@");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      ChartFactory.createScatterPlot("c:t?_T,5)[Y\"", "c:t?_T,5)[Y\"", "c:t?_T,5)[Y\"", defaultXYZDataset0, plotOrientation0, true, false, false);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartFactory.createBarChart("w", "~I:}mYC", "", defaultKeyedValues2DDataset0, plotOrientation0, true, false, false);
      ChartFactory.createStackedBarChart3D("", "7ZAn!*D>ER4NLvvA", ",pNj)~9LxOJnIz#}\"", defaultKeyedValues2DDataset0, plotOrientation0, false, false, true);
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      // Undeclared exception!
      ChartFactory.createStackedXYAreaChart("~I:}mYC", "", "M^e]K!7HU1", timeTableXYDataset0, plotOrientation0, false, false, true);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      ChartFactory.createXYLineChart("", "", "m)", defaultIntervalXYDataset0, plotOrientation0, true, false, true);
      CombinedDataset combinedDataset0 = new CombinedDataset();
      ChartFactory.createCandlestickChart("<sR", "G", "", combinedDataset0, false);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      ChartFactory.createBarChart("%, Bright ", "", "0MInre", jDBCCategoryDataset0, plotOrientation0, false, false, true);
      // Undeclared exception!
      ChartFactory.createStackedBarChart3D("", (String) null, "", jDBCCategoryDataset0, plotOrientation0, true, false, false);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotOrientation plotOrientation0 = combinedRangeCategoryPlot0.getOrientation();
      ChartFactory.createStackedBarChart3D("", "", "", jDBCCategoryDataset0, plotOrientation0, true, true, true);
      ChartFactory.createWindPlot("org.jfree.chart.axis.PeriodAxisLabelInfo", "", "", (WindDataset) null, true, true, true);
      // Undeclared exception!
      ChartFactory.createStackedBarChart("q{+tH}I@cSz%0~Te", "pa", "", jDBCCategoryDataset0, plotOrientation0, false, false, true);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      double[][] doubleArray0 = new double[5][2];
      double[] doubleArray1 = new double[5];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      // Undeclared exception!
      try { 
        ChartFactory.createStackedBarChart("ZY%ell~7D'IT", "ZY%ell~7D'IT", "", defaultIntervalCategoryDataset0, plotOrientation0, true, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("\u00B0C");
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot(defaultXYZDataset0, numberAxis3D0, defaultPolarItemRenderer0);
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      ChartFactory.createXYStepAreaChart("=change >=-", "=change >=-", "=change >=-", defaultXYZDataset0, plotOrientation0, true, false, true);
      // Undeclared exception!
      ChartFactory.createScatterPlot("", "", "", defaultTableXYDataset0, plotOrientation0, true, false, true);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      int[] intArray0 = new int[3];
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset((SeriesDataset) null, intArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createScatterPlot(">b~e`jdn>zGrX%d>", "Null 'order' argument.", "org.jfree.chart.renderer.category.StackedBarRenderer", subSeriesDataset0, plotOrientation0, true, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.general.SubSeriesDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createRingChart("eG5(wnrn|/S`", (PieDataset) defaultKeyedValuesDataset0, false, false, (Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart3D("", (PieDataset) defaultKeyedValuesDataset0, true, true, (Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart("1|nj+pr_URW];\"", (PieDataset) defaultPieDataset0, true, true, (Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      defaultKeyedValuesDataset0.setValue((Comparable) "=change >=+", (Number) 10);
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart("", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultPieDataset0, 10, true, true, true, true, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key not found: =change >=+
         //
         verifyException("org.jfree.data.DefaultKeyedValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart("%Z3E2sj[", (PieDataset) null, (PieDataset) defaultKeyedValuesDataset0, (-1952257861), true, true, true, true, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
      DefaultKeyedValuesDataset defaultKeyedValuesDataset1 = new DefaultKeyedValuesDataset();
      defaultKeyedValuesDataset0.setValue((Comparable) 10, piePlot0.ZERO);
      Locale locale0 = Locale.PRC;
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart("X^++Sb", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset1, (-409), false, true, false, locale0, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key not found: 10
         //
         verifyException("org.jfree.data.DefaultKeyedValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart("KI6rOs %T<$@vGY8JT", (PieDataset) defaultPieDataset0, (PieDataset) defaultPieDataset0, 127, true, true, false, (Locale) null, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(true);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      ChartFactory.createXYLineChart("", "", "", defaultTableXYDataset0, plotOrientation0, true, true, true);
      ChartFactory.createXYLineChart("", "org.jfree.chart.title.TextTitle", "org.jfree.chart.title.TextTitle", defaultTableXYDataset0, plotOrientation0, true, true, true);
      ChartFactory.createBoxAndWhiskerChart("org.jfree.chart.title.TextTitle", "", "", (BoxAndWhiskerCategoryDataset) null, true);
      // Undeclared exception!
      ChartFactory.createLineChart3D("", "", "", (CategoryDataset) null, plotOrientation0, false, false, true);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      double[][] doubleArray0 = new double[5][5];
      double[] doubleArray1 = new double[2];
      doubleArray0[1] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createLineChart("Q^f+*%Pv,", "Q^f+*%Pv,", "Q^f+*%Pv,", defaultIntervalCategoryDataset0, plotOrientation0, true, false, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("\u00B0C");
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot(defaultXYZDataset0, numberAxis3D0, defaultPolarItemRenderer0);
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      ChartFactory.createXYStepAreaChart("cHaA|i1}N%w", "G=p_>H@Yi[+", "N5(sOyU=", defaultTableXYDataset0, plotOrientation0, true, true, false);
      ChartFactory.createScatterPlot("", "\u00B0C", "cHaA|i1}N%w", defaultTableXYDataset0, plotOrientation0, true, false, false);
      // Undeclared exception!
      ChartFactory.createHistogram("", "", "\u00B0C", defaultTableXYDataset0, plotOrientation0, true, true, true);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String[] stringArray0 = new String[2];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(10, 500, simpleTimeZone0);
      // Undeclared exception!
      try { 
        ChartFactory.createHistogram("<", ":F6Fi=!uOi", "", dynamicTimeSeriesCollection0, plotOrientation0, true, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      combinedDataset0.add((SeriesDataset) null, (-5));
      // Undeclared exception!
      try { 
        ChartFactory.createHighLowChart("org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator", "org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator", "org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator", (OHLCDataset) combinedDataset0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.general.SubSeriesDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ChartFactory.createLineChart3D("", "nVzn", "nVzn", defaultBoxAndWhiskerCategoryDataset0, plotOrientation0, false, true, true);
      ChartFactory.createBarChart("Zk,1BKuXg&;^~^", "", "3v2g(gN4|$", defaultBoxAndWhiskerCategoryDataset0, plotOrientation0, false, true, true);
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset((SeriesDataset) null, 0);
      SegmentedTimeline segmentedTimeline0 = new SegmentedTimeline(15, 15, 151);
      // Undeclared exception!
      ChartFactory.createHighLowChart("3v2g(gN4|$", "=change >=-", "Null 'rangeType' argument.", (OHLCDataset) subSeriesDataset0, (Timeline) segmentedTimeline0, true);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createHighLowChart(")~p<,[j._DQFwUb!E", "green", ")~p<,[j._DQFwUb!E", (OHLCDataset) combinedDataset0, (Timeline) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.DateAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(xYSeriesCollection0, 0);
      SegmentedTimeline segmentedTimeline0 = new SegmentedTimeline(0, 0, (-930));
      // Undeclared exception!
      try { 
        ChartFactory.createHighLowChart("}=c\u0003_uA80T*6u~p@+", "}=c\u0003_uA80T*6u~p@+", "xldUI<", (OHLCDataset) subSeriesDataset0, (Timeline) segmentedTimeline0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Series index out of bounds
         //
         verifyException("org.jfree.data.xy.XYSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Number[][] numberArray0 = new Number[4][3];
      Number[] numberArray1 = new Number[1];
      numberArray0[1] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createGanttChart("wJz", "Sl", "org.jfree.data.general.DatasetGroup", defaultIntervalCategoryDataset0, true, true, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      String[] stringArray0 = new String[2];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      ChartFactory.createBarChart("<", "<", "<", (CategoryDataset) null, plotOrientation0, false, true, false);
      ChartFactory.createAreaChart("", "", "<", (CategoryDataset) null, plotOrientation0, true, false, true);
      ChartFactory.createWaterfallChart("<", "oaZ|>h,]l", "", (CategoryDataset) null, plotOrientation0, true, true, true);
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset((Connection) null);
      int[] intArray0 = new int[1];
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(jDBCXYDataset0, intArray0);
      // Undeclared exception!
      ChartFactory.createCandlestickChart("", "l,v3S.ne&b6y{KD", "", subSeriesDataset0, true);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(jDBCXYDataset0, (int[]) null);
      // Undeclared exception!
      try { 
        ChartFactory.createCandlestickChart("<", "", "", subSeriesDataset0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.general.SubSeriesDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(1577, "/Kl{u_f'=i+@Eu\u0001\"");
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(simpleTimeZone0);
      int[] intArray0 = new int[3];
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(timeSeriesCollection0, intArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createCandlestickChart("FKVO:k=__jQ;oB", "U><~P5wx", "69ID", subSeriesDataset0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'series' argument is out of bounds (0).
         //
         verifyException("org.jfree.data.time.TimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      double[][] doubleArray0 = new double[0][3];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      int[] intArray0 = new int[3];
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(defaultIntervalCategoryDataset0, intArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createCandlestickChart("Null 'orientation' argument.", "0;ok]\"|6iYX6@_U&IM)", "G'lLDo7", subSeriesDataset0, true);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.category.DefaultIntervalCategoryDataset cannot be cast to org.jfree.data.xy.XYDataset
         //
         verifyException("org.jfree.data.general.SubSeriesDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(true);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      ChartFactory.createXYLineChart("", "", "", defaultTableXYDataset0, plotOrientation0, true, true, false);
      ChartFactory.createXYLineChart("", "org.jfree.chart.title.TextTitle", "org.jfree.chart.title.TextTitle", defaultTableXYDataset0, plotOrientation0, true, true, true);
      ChartFactory.createBoxAndWhiskerChart("org.jfree.chart.title.TextTitle", "", "", (BoxAndWhiskerCategoryDataset) null, true);
      // Undeclared exception!
      ChartFactory.createBoxAndWhiskerChart("org.jfree.chart.title.TextTitle", "", "Gideon Krause", (BoxAndWhiskerCategoryDataset) null, true);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      ChartFactory.createStackedXYAreaChart("=change >=+", "nlj?ydnO(f~|oODx7", "=change >=+", timeTableXYDataset0, plotOrientation0, false, true, true);
      XYBarDataset xYBarDataset0 = new XYBarDataset(timeTableXYDataset0, 15);
      ChartFactory.createXYBarChart((String) null, "lS$ \"]/Og=f4", true, (String) null, xYBarDataset0, plotOrientation0, true, false, true);
      ChartFactory.createXYStepChart("", "%Z3E2sj[", "", timeTableXYDataset0, plotOrientation0, false, false, false);
      double[][] doubleArray0 = new double[6][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      ChartFactory.createBarChart3D("=change >=+", (String) null, ";(YN5Sr0VG!@}'m]@+", defaultIntervalCategoryDataset0, plotOrientation0, false, false, true);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      Number[][] numberArray0 = new Number[6][7];
      Number[] numberArray1 = new Number[5];
      numberArray0[5] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createBarChart3D("", "", "", defaultIntervalCategoryDataset0, plotOrientation0, true, true, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(true);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      ChartFactory.createXYLineChart("", "", "", defaultTableXYDataset0, plotOrientation0, true, true, true);
      ChartFactory.createXYLineChart("", "org.jfree.chart.title.TextTitle", "org.jfree.chart.title.TextTitle", defaultTableXYDataset0, plotOrientation0, true, true, true);
      ChartFactory.createBoxAndWhiskerChart("org.jfree.chart.title.TextTitle", "", "", (BoxAndWhiskerCategoryDataset) null, true);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      ChartFactory.createBarChart((String) null, (String) null, "", defaultKeyedValues2DDataset0, plotOrientation0, true, true, false);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(0, 15);
      // Undeclared exception!
      try { 
        ChartFactory.createWaferMapChart("3hV=@|oKCR", waferMapDataset0, (PlotOrientation) null, false, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      // Undeclared exception!
      try { 
        ChartFactory.createWaferMapChart("", (WaferMapDataset) null, plotOrientation0, true, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.WaferMapRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createWindPlot("[&q\"#NEs~ng*lbO", "x+x%$]g3VFCYAA.`sVX", "[&q\"#NEs~ng*lbO", (WindDataset) null, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createHistogram("", "", "", defaultTableXYDataset0, plotOrientation0, true, false, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(false);
      // Undeclared exception!
      try { 
        ChartFactory.createHistogram("Ff", "", "Invalid day-of-the-week code.", defaultTableXYDataset0, (PlotOrientation) null, true, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createHistogram("", "", "'", defaultTableXYDataset0, plotOrientation0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      JFreeChart jFreeChart0 = ChartFactory.createBubbleChart("Chat:", "", "3v2g(gN4|$", matrixSeriesCollection0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createBubbleChart("@E_N'wo}1n,=4", "d!xFl", "d!xFl", defaultXYZDataset0, (PlotOrientation) null, false, false, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      JFreeChart jFreeChart0 = ChartFactory.createBubbleChart((String) null, "qi5", "$Enj(e`fK", matrixSeriesCollection0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(zoneInfo0);
      JFreeChart jFreeChart0 = ChartFactory.createTimeSeriesChart("<", "=change >=+", "<", timeSeriesCollection0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      JFreeChart jFreeChart0 = ChartFactory.createTimeSeriesChart((String) null, "8O13hg`tkj.3U", "8O13hg`tkj.3U", defaultWindDataset0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYStepAreaChart("3hV=@|oKCR", "3hV=@|oKCR", "3hV=@|oKCR", defaultWindDataset0, plotOrientation0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChartFactory.createXYStepAreaChart(":1acm+k^d53|Q", (String) null, "", (XYDataset) null, (PlotOrientation) null, false, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String[] stringArray0 = new String[2];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      JFreeChart jFreeChart0 = ChartFactory.createXYStepChart("a]7ml2xo'-NE\"Y", "a]7ml2xo'-NE\"Y", "kfa;VtA5}3", defaultTableXYDataset0, plotOrientation0, true, false, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChartFactory.createXYStepChart("t_Wbm", "x<!M(eh", "t_Wbm", (XYDataset) null, (PlotOrientation) null, true, true, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      JFreeChart jFreeChart0 = ChartFactory.createXYStepChart((String) null, (String) null, (String) null, defaultTableXYDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYLineChart("E", "Bright ", "Bright ", defaultTableXYDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChartFactory.createXYLineChart("Bright ", ";Hrd]T>9%{CWi", "", (XYDataset) null, (PlotOrientation) null, false, true, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(false);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      ChartFactory.createXYLineChart("", "org.jfree.chart.title.TextTitle", "org.jfree.chart.title.TextTitle", defaultTableXYDataset0, plotOrientation0, false, true, true);
      CombinedDataset combinedDataset0 = new CombinedDataset();
      ChartFactory.createCandlestickChart("Gideon Krause", (String) null, "", combinedDataset0, true);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      // Undeclared exception!
      ChartFactory.createLineChart("org.jfree.chart.ChartFactory", "Null 'anchor' point.", "Null 'anchor' point.", defaultKeyedValues2DDataset0, plotOrientation0, false, true, true);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("\u00B0C");
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot(defaultXYZDataset0, numberAxis3D0, defaultPolarItemRenderer0);
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      JFreeChart jFreeChart0 = ChartFactory.createStackedXYAreaChart("G=p_>H@Yi[+", "\u00B0C", "", timeTableXYDataset0, plotOrientation0, true, true, true);
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createStackedXYAreaChart("^)lv'8", "", "", defaultTableXYDataset0, (PlotOrientation) null, true, true, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createStackedXYAreaChart("=change >=+", "%, Bright ", "%, Bright ", defaultTableXYDataset0, plotOrientation0, false, false, false);
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      HistogramDataset histogramDataset0 = new HistogramDataset();
      JFreeChart jFreeChart0 = ChartFactory.createXYAreaChart("", "Jonathan Nash", "", histogramDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createXYAreaChart("", "G=p>@Y\f[+", "", defaultTableXYDataset0, (PlotOrientation) null, false, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createXYBarChart("", "", false, "E\"T=!a2=}uJC1M01RiS", combinedDataset0, (PlotOrientation) null, false, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      XYBarDataset xYBarDataset0 = new XYBarDataset(histogramDataset0, 10);
      ChartFactory.createScatterPlot("", "", "", xYBarDataset0, plotOrientation0, true, true, true);
      // Undeclared exception!
      ChartFactory.createXYAreaChart("", "", "", xYBarDataset0, plotOrientation0, false, true, true);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      JFreeChart jFreeChart0 = ChartFactory.createScatterPlot("iF", "iF", "iF", categoryTableXYDataset0, plotOrientation0, false, true, false);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(10, "Xm\"");
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(simpleTimeZone0);
      // Undeclared exception!
      try { 
        ChartFactory.createScatterPlot("", "", "Xm\"", timeSeriesCollection0, (PlotOrientation) null, false, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      // Undeclared exception!
      try { 
        ChartFactory.createWaterfallChart("%Z3E2sj[", "", "", jDBCCategoryDataset0, (PlotOrientation) null, false, true, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Number[][] numberArray0 = new Number[4][3];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      JFreeChart jFreeChart0 = ChartFactory.createGanttChart("wJz", "Sl", "org.jfree.data.general.DatasetGroup", defaultIntervalCategoryDataset0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        ChartFactory.createGanttChart((String) null, "=g*`+q|%", "", defaultIntervalCategoryDataset0, false, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String[] stringArray0 = new String[2];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createLineChart3D("", "", (String) null, (CategoryDataset) null, plotOrientation0, false, false, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createLineChart3D("\"", "org.jfree.chart.renderer.LookupPaintScale", "iF", defaultStatisticalCategoryDataset0, (PlotOrientation) null, false, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      JFreeChart jFreeChart0 = ChartFactory.createLineChart3D("", "Chat:", "Chat:", defaultBoxAndWhiskerCategoryDataset0, plotOrientation0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String[] stringArray0 = new String[2];
      SymbolAxis symbolAxis0 = new SymbolAxis("%, Bright ", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createLineChart("<", "%, Bright ", "%, Bright ", (CategoryDataset) null, plotOrientation0, true, false, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      double[][] doubleArray0 = new double[1][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createLineChart("green", "xldUI<", "All_Axes", defaultIntervalCategoryDataset0, (PlotOrientation) null, false, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      String[] stringArray0 = new String[2];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createLineChart("", "", "", (CategoryDataset) null, plotOrientation0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      double[][] doubleArray0 = new double[2][3];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createStackedAreaChart("0;ok]|6iYX6@_U&I)", "", "0;ok]|6iYX6@_U&I)", defaultIntervalCategoryDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        ChartFactory.createStackedAreaChart("d!xFl", "", (String) null, taskSeriesCollection0, (PlotOrientation) null, false, true, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createStackedAreaChart("];'h'(kO]pI7CBiatS1", "<", "", (CategoryDataset) null, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createAreaChart((String) null, "", "", taskSeriesCollection0, plotOrientation0, true, true, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChartFactory.createAreaChart("%", "", "", (CategoryDataset) null, (PlotOrientation) null, true, false, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      // Undeclared exception!
      try { 
        ChartFactory.createStackedBarChart3D("%Z3E2sj[", "%Z3E2sj[", "=change >=+", jDBCCategoryDataset0, (PlotOrientation) null, false, false, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createStackedBarChart3D("", "", " (", defaultStatisticalCategoryDataset0, plotOrientation0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      double[][] doubleArray0 = new double[1][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createBarChart3D("]:L9/ ,#Q~v4=Gg,y", "]:L9/ ,#Q~v4=Gg,y", "xldUI<", defaultIntervalCategoryDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createBarChart3D("org.jfree.chart.labels.StandardCategoryItemLabelGenerator", "~OI'-Etz?MTmMy]VzA#", (String) null, defaultStatisticalCategoryDataset0, (PlotOrientation) null, false, false, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createBarChart3D("=change >=+", (String) null, (String) null, defaultBoxAndWhiskerCategoryDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createStackedBarChart("fS#", "F @omwX&[c0PX", "M", taskSeriesCollection0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Number[][] numberArray0 = new Number[3][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createStackedBarChart("iI", "", "iI", defaultIntervalCategoryDataset0, (PlotOrientation) null, false, false, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart3D("&TKxJ+;^O{<`4v", jDBCCategoryDataset0, tableOrder0, false, true, true);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      // Undeclared exception!
      try { 
        ChartFactory.createMultiplePieChart3D("=change >=+", jDBCCategoryDataset0, (TableOrder) null, true, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart3D("UY", (CategoryDataset) null, tableOrder0, false, false, false);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      JFreeChart jFreeChart0 = ChartFactory.createPieChart3D(";$xgN", (PieDataset) defaultKeyedValuesDataset0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createPieChart3D("iF", (PieDataset) null, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      Locale locale0 = Locale.KOREAN;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart3D("", (PieDataset) defaultKeyedValuesDataset0, true, true, locale0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultBoxAndWhiskerCategoryDataset0, tableOrder0, 15);
      Locale locale0 = Locale.KOREA;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart3D("Chat:", (PieDataset) categoryToPieDataset0, false, false, locale0);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart("iF", defaultBoxAndWhiskerCategoryDataset0, tableOrder0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        ChartFactory.createMultiplePieChart((String) null, defaultBoxAndWhiskerCategoryDataset0, (TableOrder) null, false, false, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("Bright ", (PieDataset) defaultKeyedValuesDataset0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      JFreeChart jFreeChart0 = ChartFactory.createRingChart((String) null, (PieDataset) defaultPieDataset0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("V29sgS+xD", (PieDataset) null, false, false, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      Locale locale0 = Locale.KOREAN;
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("", (PieDataset) defaultKeyedValuesDataset0, true, true, locale0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset((CategoryDataset) null, tableOrder0, 10);
      Locale locale0 = Locale.CANADA;
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("(=:+Za7+{", (PieDataset) categoryToPieDataset0, false, false, locale0);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("(ejyc%}9rNRiO@", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, 10, false, true, true, false, true, true);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
      defaultKeyedValuesDataset0.setValue((Comparable) 10, piePlot0.ZERO);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("%Z3E2sj[", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, 10, false, false, true, true, false, false);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      defaultKeyedValuesDataset0.setValue((Comparable) 0.5F, (Number) 0.5F);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("%Z3E2sj[", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, (-148), true, false, false, false, true, true);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      defaultKeyedValuesDataset0.setValue((Comparable) "M", (Number) null);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart((String) null, (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, 10, false, false, false, false, false, false);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      defaultKeyedValuesDataset0.setValue((Comparable) "M", (Number) null);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("/ +4A^zsBC?Gj@k+", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, 10, true, true, false, true, true, true);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
      defaultKeyedValuesDataset0.setValue((Comparable) 10, piePlot0.ZERO);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("%Z3E2sj[", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, 10, true, true, true, false, true, true);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
      defaultKeyedValuesDataset0.setValue((Comparable) 10, piePlot0.ZERO);
      Locale locale0 = Locale.JAPAN;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart((String) null, (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, 15, false, false, true, locale0, false, true);
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 10);
      Locale locale0 = Locale.PRC;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, 10, true, false, false, locale0, true, false);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 0.08);
      Locale locale0 = Locale.JAPAN;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, (-2143716132), false, false, false, locale0, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("=change >=+", (PieDataset) defaultKeyedValuesDataset0, true, true, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("", (PieDataset) defaultKeyedValuesDataset0, false, true, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("?FhE6rzV\"$", (PieDataset) defaultKeyedValuesDataset0, true, false, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("0M{s", (PieDataset) defaultKeyedValuesDataset0, false, true, locale0);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      Locale locale0 = Locale.FRENCH;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("red", (PieDataset) defaultKeyedValuesDataset0, true, false, locale0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset(false);
      JFreeChart jFreeChart0 = ChartFactory.createBoxAndWhiskerChart("=change >=+", "A('~#+{wxllJ`kYs", "=change >=+", (BoxAndWhiskerXYDataset) defaultBoxAndWhiskerXYDataset0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      JFreeChart jFreeChart0 = ChartFactory.createPolarChart("", combinedDataset0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      SeriesDataset[] seriesDatasetArray0 = new SeriesDataset[2];
      Number[][] numberArray0 = new Number[4][3];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      seriesDatasetArray0[0] = (SeriesDataset) defaultIntervalCategoryDataset0;
      int[] intArray0 = new int[2];
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(defaultIntervalCategoryDataset0, intArray0);
      seriesDatasetArray0[1] = (SeriesDataset) subSeriesDataset0;
      CombinedDataset combinedDataset0 = new CombinedDataset(seriesDatasetArray0);
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newMondayThroughFridayTimeline();
      // Undeclared exception!
      try { 
        ChartFactory.createHighLowChart("", "", "", (OHLCDataset) combinedDataset0, (Timeline) segmentedTimeline0, true);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.category.DefaultIntervalCategoryDataset cannot be cast to org.jfree.data.xy.XYDataset
         //
         verifyException("org.jfree.data.general.CombinedDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CombinedDataset combinedDataset0 = new CombinedDataset();
      JFreeChart jFreeChart0 = ChartFactory.createHighLowChart("", "", "", (OHLCDataset) combinedDataset0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }
}
