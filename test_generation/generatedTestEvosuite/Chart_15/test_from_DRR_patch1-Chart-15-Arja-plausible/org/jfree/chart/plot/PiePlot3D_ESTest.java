/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 21:22:06 GMT 2021
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.geom.Arc2D;
import java.awt.geom.Area;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.annotations.XYPointerAnnotation;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.PieDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PiePlot3D_ESTest extends PiePlot3D_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      piePlot3D0.setDarkerSides(true);
      JFreeChart jFreeChart0 = new JFreeChart("c ~3EK/Ls~\"+3(@", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1296, 1040);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("c ~3EK/Ls~\"+3(@", (-7.0), 1.0E-5, 0.12);
      Stroke stroke0 = xYPointerAnnotation0.getArrowStroke();
      piePlot3D0.drawSide(graphics2D0, rectangle0, arc2D_Float0, (Area) null, (Area) null, jFreeChart0.DEFAULT_BACKGROUND_PAINT, xYPointerAnnotation0.DEFAULT_PAINT, stroke0, true, false);
      assertTrue(piePlot3D0.getDarkerSides());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      piePlot3D0.setInsets(rectangleInsets0);
      JFreeChart jFreeChart0 = new JFreeChart(piePlot3D0);
      jFreeChart0.createBufferedImage(10, 10);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.isCircular());
      assertFalse(piePlot3D0.getDarkerSides());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
      assertFalse(piePlot3D0.getDarkerSides());
      
      piePlot3D0.setDarkerSides(true);
      boolean boolean0 = piePlot3D0.getDarkerSides();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Area area0 = new Area(piePlot3D0.DEFAULT_LEGEND_ITEM_CIRCLE);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.12);
      Paint paint0 = xYBoxAndWhiskerRenderer0.getArtifactPaint();
      // Undeclared exception!
      try { 
        piePlot3D0.drawSide(graphics2D0, rectangle2D_Float0, (Arc2D) null, area0, area0, paint0, paint0, xYBoxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PiePlot3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("c ~3EK/Ls~\"+3(@", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1040, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      // Undeclared exception!
      try { 
        piePlot3D0.drawSide(graphics2D0, rectangle0, arc2D_Float0, (Area) null, (Area) null, piePlot3D0.DEFAULT_LABEL_BACKGROUND_PAINT, piePlot3D0.DEFAULT_LABEL_BACKGROUND_PAINT, (Stroke) null, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, true, false, false, false);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(10, 303);
      PlotState plotState0 = new PlotState();
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        piePlot3D0.draw((Graphics2D) null, rectangle2D0, (Point2D) null, plotState0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
      boolean boolean0 = piePlot3D0.getDarkerSides();
      assertFalse(piePlot3D0.isCircular());
      assertFalse(boolean0);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      PiePlot3D piePlot3D1 = new PiePlot3D();
      piePlot3D1.setDarkerSides(true);
      boolean boolean0 = piePlot3D1.equals(piePlot3D0);
      assertFalse(boolean0);
      assertTrue(piePlot3D1.getDarkerSides());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      PiePlot3D piePlot3D1 = (PiePlot3D)piePlot3D0.clone();
      boolean boolean0 = piePlot3D0.equals(piePlot3D1);
      assertEquals(0.12, piePlot3D1.getDepthFactor(), 0.01);
      assertFalse(piePlot3D1.isCircular());
      assertFalse(piePlot3D1.getDarkerSides());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      boolean boolean0 = piePlot3D0.equals(piePlot3D0);
      assertFalse(piePlot3D0.isCircular());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertTrue(boolean0);
      assertFalse(piePlot3D0.getDarkerSides());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      StyleContext styleContext0 = new StyleContext();
      SimpleAttributeSet simpleAttributeSet0 = new SimpleAttributeSet();
      Color color0 = styleContext0.getBackground(simpleAttributeSet0);
      boolean boolean0 = piePlot3D0.equals(color0);
      assertFalse(boolean0);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(10, 0.0F, 0.0F, (-2521.0F), 1596.7947F, 2905.7627F, 0);
      Area area0 = new Area();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0F);
      piePlot3D0.drawSide(graphics2D0, rectangle2D_Float0, arc2D_Float0, area0, area0, xYBoxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_PAINT, (Paint) null, xYBoxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE, true, false);
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart(piePlot3D0);
      Arc2D.Float arc2D_Float0 = new Arc2D.Float((-2156.33F), 0.0F, 0.0F, 411.98F, 0.0F, 2905.7627F, 0);
      Area area0 = new Area();
      piePlot3D0.drawSide(graphics2D0, rectangle2D_Float0, arc2D_Float0, area0, area0, jFreeChart0.DEFAULT_BACKGROUND_PAINT, jFreeChart0.DEFAULT_BACKGROUND_PAINT, piePlot3D0.DEFAULT_OUTLINE_STROKE, true, false);
      assertFalse(piePlot3D0.isCircular());
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart(piePlot3D0);
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(0.0F, (-2418.5825F), 383.0F, 2905.7627F, (-2418.5825F), 1.0F, 0);
      Area area0 = new Area();
      BasicStroke basicStroke0 = (BasicStroke)WaferMapPlot.DEFAULT_GRIDLINE_STROKE;
      piePlot3D0.drawSide(graphics2D0, rectangle2D_Float0, arc2D_Float0, area0, area0, jFreeChart0.DEFAULT_BACKGROUND_PAINT, jFreeChart0.DEFAULT_BACKGROUND_PAINT, basicStroke0, false, true);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart(piePlot3D0);
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(0.0F, (-2418.5825F), 383.0F, 2905.7627F, (-2418.5825F), 1.0F, 0);
      Area area0 = new Area();
      BasicStroke basicStroke0 = (BasicStroke)WaferMapPlot.DEFAULT_GRIDLINE_STROKE;
      piePlot3D0.drawSide(graphics2D0, rectangle2D_Float0, arc2D_Float0, area0, area0, jFreeChart0.DEFAULT_BACKGROUND_PAINT, jFreeChart0.DEFAULT_BACKGROUND_PAINT, basicStroke0, false, false);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      StyleContext styleContext0 = new StyleContext();
      SimpleAttributeSet simpleAttributeSet0 = new SimpleAttributeSet();
      Color color0 = styleContext0.getBackground(simpleAttributeSet0);
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(10, 0.0F, 0.0F, 0.0F, 1596.7947F, 2905.7627F, 0);
      Area area0 = new Area();
      BasicStroke basicStroke0 = (BasicStroke)WaferMapPlot.DEFAULT_GRIDLINE_STROKE;
      piePlot3D0.drawSide(graphics2D0, rectangle2D_Float0, arc2D_Float0, area0, area0, color0, color0, basicStroke0, false, true);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      assertFalse(piePlot3D0.getDarkerSides());
      
      piePlot3D0.setDarkerSides(true);
      JFreeChart jFreeChart0 = new JFreeChart("c ~3EK/Ls~\"+3(@", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2913, 2913);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      piePlot3D0.drawSide(graphics2D0, rectangle0, arc2D_Float0, (Area) null, (Area) null, (Paint) null, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, true, true);
      assertTrue(piePlot3D0.getDarkerSides());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      PlotState plotState0 = new PlotState();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      piePlot3D0.draw(graphics2D0, rectangle2D_Float0, (Point2D) null, plotState0, plotRenderingInfo0);
      assertFalse(piePlot3D0.isCircular());
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      StyleContext styleContext0 = new StyleContext();
      SimpleAttributeSet simpleAttributeSet0 = new SimpleAttributeSet();
      Color color0 = styleContext0.getBackground(simpleAttributeSet0);
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(10, 0.0F, 0.0F, 0.0F, 15, 2905.7627F, 0);
      Area area0 = new Area();
      BasicStroke basicStroke0 = (BasicStroke)WaferMapPlot.DEFAULT_GRIDLINE_STROKE;
      piePlot3D0.drawSide(graphics2D0, rectangle2D_Float0, arc2D_Float0, area0, area0, color0, color0, basicStroke0, false, true);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      
      piePlot3D0.setDepthFactor(0.0);
      double double0 = piePlot3D0.getDepthFactor();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      piePlot3D0.getPlotType();
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      double double0 = piePlot3D0.getDepthFactor();
      assertFalse(piePlot3D0.isCircular());
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, double0, 0.01);
  }
}
