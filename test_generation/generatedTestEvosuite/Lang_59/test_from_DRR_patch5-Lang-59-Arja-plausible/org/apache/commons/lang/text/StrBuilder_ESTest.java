/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 22:06:43 GMT 2021
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("d1E");
      StrBuilder strBuilder1 = strBuilder0.append(540L);
      strBuilder1.size = (-1288);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.skip(0L);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendFixedWidthPadRight((-958), 489, 'h');
      StrBuilder strBuilder1 = new StrBuilder("");
      strBuilder0.equals((Object) strBuilder1);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-416));
      StrBuilder strBuilder1 = strBuilder0.append((float) (-416));
      StrBuilder strBuilder2 = new StrBuilder((-1329));
      strBuilder1.equalsIgnoreCase(strBuilder2);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1584);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      strBuilder0.append('B');
      strBuilder0.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-416));
      strBuilder0.lastIndexOf('M', 0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      strBuilder0.indexOf('~');
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = (-1);
      strBuilder0.contains('x');
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 57, 'S');
      strBuilder1.appendFixedWidthPadLeft((Object) "", 57, 'x');
      strBuilder1.midString(57, 57);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.midString((-1), 108);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1584);
      strBuilder0.midString(0, 0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(32, 32, '5');
      strBuilder1.rightString(32);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.rightString(0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      strBuilder0.append((float) 3);
      strBuilder0.leftString(3);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.leftString(0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      strBuilder0.endsWith("@-|Bc,^XU}Bg");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      strBuilder0.startsWith("zl/");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      strBuilder0.append("Invalid startIndex: ");
      strBuilder0.trim();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append(' ');
      strBuilder0.trim();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("r");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(1192, 115, 'n');
      strBuilder1.replaceAll("r", "r");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.replaceFirst('q', 'f');
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      strBuilder0.deleteAll('i');
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      strBuilder0.appendFixedWidthPadRight(0, 0, 'Q');
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*ANk");
      strBuilder0.appendPadding(0, 'Z');
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(4, 49, '7');
      StrBuilder strBuilder2 = strBuilder1.append((float) 49);
      strBuilder0.append(strBuilder2, 49, 4);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1584);
      char[] charArray0 = new char[5];
      strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1584);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, 'X');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-416));
      StrBuilder strBuilder1 = strBuilder0.append((-1.0F));
      char[] charArray0 = new char[8];
      strBuilder1.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder1.charAt(12);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 12
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      strBuilder0.validateIndex(0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*ANk");
      char[] charArray0 = new char[4];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((char[]) null, 1829, (-1));
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.validateRange(0, 0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.minimizeCapacity();
      strBuilder0.trim();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*]cIlPnm:Q?z");
      strBuilder0.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.toString();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append("remove() is unsupported");
      strBuilder0.substring(0, 738);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      strBuilder0.substring(11, 11);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("6#k';B>-=");
      strBuilder0.substring(7);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-416));
      strBuilder0.substring(0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*]cIlPnm:Q?z");
      strBuilder0.deleteFirst("*]cIlPnm:Q?z");
      strBuilder0.setNewLineText("*]cIlPnm:Q?z");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      strBuilder0.replaceFirst(strMatcher0, "5l|z4Uz1-~");
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = (-1);
      strBuilder0.replaceAll("", (String) null);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.insert(0, (long) 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      strBuilder0.replace(strMatcher0, "//5\";`&0ogFK[(o`a*", 0, 2, 0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      strBuilder0.replace(strMatcher0, "//5\";`&0ogFK[(o`a*", 0, 2, 0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1738);
      strBuilder0.appendNewLine();
      strBuilder0.length();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("/3x");
      char[] charArray0 = new char[5];
      charArray0[0] = 'x';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      strBuilder0.insert(0, 4);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      strBuilder0.insert(7, 0.0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Integer integer0 = new Integer(4);
      strBuilder0.appendFixedWidthPadRight((Object) integer0, 32, 'h');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("java.lang.Integer@0000000002hhhh");
      strBuilder0.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.indexOf("");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendFixedWidthPadLeft(7, 118, '');
      strBuilder0.indexOf('', (-2010));
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(1.0F);
      strBuilder0.append('e');
      strBuilder1.indexOf('e');
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = (-1);
      strBuilder0.deleteFirst("os.arch");
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-678));
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      strBuilder1.deleteFirst("^;:RbhySeZ:");
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      strBuilder0.deleteAll(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = (-1);
      strBuilder0.deleteAll("AK?a{lQi!f,Q -[as");
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&vc9%*Aa[34[snC,CsC");
      strBuilder0.deleteAll("");
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("d1E");
      StrBuilder strBuilder1 = strBuilder0.append(540L);
      strBuilder1.size = (-1288);
      strBuilder1.deleteAll('<');
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1584);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      strBuilder1.deleteAll('B');
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.delete(0, 0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      strBuilder0.charAt(4);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-416));
      strBuilder0.append((float) (-416));
      strBuilder0.charAt(5);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      strBuilder0.buffer = charArray0;
      strBuilder0.appendWithSeparators((Collection) linkedList0, "");
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = (-1);
      strBuilder0.appendFixedWidthPadRight((Object) "", (-1), 'd');
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendFixedWidthPadRight(0, (-2715), 'E');
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("m|CJ;@;c^\"");
      strBuilder0.append((char[]) null, 1060, 1060);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append(strBuilder0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder0 = new StrBuilder("");
      strBuilder0.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-467), (-467));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -467
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(389);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(389);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 389
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*]cIlPnm:Q?z");
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-1055), (-1055));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1055
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("?eb+)JDqQXe");
      char[] charArray0 = new char[6];
      strBuilder0.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.reverse();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("r");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(1192, 115, 'n');
      strBuilder1.buffer = null;
      // Undeclared exception!
      try { 
        strBuilder0.minimizeCapacity();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = (-1);
      // Undeclared exception!
      try { 
        strBuilder0.minimizeCapacity();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cKb{");
      strBuilder0.size = 835;
      // Undeclared exception!
      try { 
        strBuilder0.lastIndexOf("cKb{");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 831
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cKb{");
      char[] charArray0 = new char[2];
      // Undeclared exception!
      try { 
        strBuilder0.insert(3842, charArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3842
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("m|CJ;@;c^\"");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-428), true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -428
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(652, (String) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 652
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cKb{");
      strBuilder0.size = 835;
      // Undeclared exception!
      try { 
        strBuilder0.insert(835, (long) 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-529), ':');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -529
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1584);
      // Undeclared exception!
      try { 
        strBuilder0.equalsIgnoreCase((StrBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.equals((StrBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = (-1);
      char[] charArray0 = new char[7];
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.deleteFirst((StrMatcher) strMatcher_CharSetMatcher0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("m|CJ;@;c^\"");
      strBuilder0.buffer = null;
      // Undeclared exception!
      try { 
        strBuilder0.deleteAll('h');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cKb{");
      strBuilder0.size = 835;
      // Undeclared exception!
      try { 
        strBuilder0.deleteAll('V');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 36
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&vc9%*Aa[34[snC,CsC");
      // Undeclared exception!
      try { 
        strBuilder0.delete((-1436), (-1436));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1436
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cKb{");
      strBuilder0.size = 835;
      // Undeclared exception!
      try { 
        strBuilder0.contains("~o2}$-xZ_AX:wjx_o.!");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 36
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      char[] charArray0 = new char[0];
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder0 = new StrBuilder(22);
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) strMatcher_CharSetMatcher0, 22, '\\');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(3, 3, '4');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = (-1);
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) strBuilder0, 5, 'x');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("dPZ|g@qy,6?i*a");
      strBuilder0.size = 115;
      // Undeclared exception!
      try { 
        strBuilder0.append("dPZ|g@qy,6?i*a");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('q');
      strBuilder1.size = (-157);
      // Undeclared exception!
      try { 
        strBuilder1.append(937L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.size = 1785;
      // Undeclared exception!
      try { 
        strBuilder0.append('e');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-416));
      strBuilder0.setLength(329);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      strBuilder0.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0, 39);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("@#=mK,?a+lg");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      strBuilder0.lastIndexOf(strMatcher0, 19);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(21);
      strBuilder0.append(2196L);
      strBuilder0.lastIndexOf("b)", 102);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("uetJm<SH877:s");
      strBuilder0.lastIndexOf("uetJm<SH877:s", 32);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cKb{");
      strBuilder0.lastIndexOf("G]3B^uI4q", 1);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      strBuilder0.lastIndexOf("", 116);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("/3x");
      strBuilder0.lastIndexOf((String) null, (-3229));
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      strBuilder0.lastIndexOf('e', 32);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.insert(0, (long) 0);
      strBuilder0.lastIndexOf('b', 0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2724);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      strBuilder0.appendNewLine();
      strBuilder0.indexOf(strMatcher0, (-1896));
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0, 1211);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Array element ");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      strBuilder0.indexOf(strMatcher0, 0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      strBuilder0.append(true);
      strBuilder0.indexOf("user.country", 1);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("/3x");
      strBuilder0.indexOf("}V%ZhR1QZ~O6< b|#P", (-913));
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendFixedWidthPadLeft(0, 57, 'S');
      strBuilder0.indexOf("", 49);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      strBuilder0.indexOf((String) null, 3282);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.indexOf("", 49);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('i', 'F');
      strBuilder1.indexOf('F', (-3703));
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append("0O[%DsA]([-w");
      strBuilder0.insert(5, "Gv6=@^f!Tp");
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-416));
      StrBuilder strBuilder1 = strBuilder0.append((float) (-416));
      strBuilder1.insert(5, (String) null);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cKb{");
      Integer integer0 = new Integer(1);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) integer0, 1, 'i');
      strBuilder1.indexOf("cKb{j", (-2192));
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendFixedWidthPadLeft((Object) strBuilder0, 0, '[');
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[2];
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 2090, 2090);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 2090
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      strBuilder0.append("file.separator", 5, 5);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      strBuilder0.append("hp#{C$", 4, 0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append("BF", 3313, 3313);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append("");
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1584);
      strBuilder0.append((Object) null);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-43));
      strBuilder0.appendNull();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        strBuilder0.getChars(5, 5, charArray0, 2551);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.ensureCapacity(0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      strBuilder0.ensureCapacity(113);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1738);
      strBuilder0.length();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "java.lang.Object", (-1284), (-1284), (-1049));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1284
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1252), 115);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1252
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2165));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.skip(2437L);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.skip((-1));
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      char[] charArray0 = new char[24];
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.read(charArray0, 1, 5);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("0]yE=JC_c");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[9];
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 1, 1852);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cKb{");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 40, 1091);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null, 1, (-2401));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("/3x");
      char[] charArray0 = new char[19];
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-126), 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*]cIlPnm:Q?z");
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.insert(0, (long) 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("m|CJ;@;c^\"");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      strBuilder_StrBuilderTokenizer0.getContent();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("@#=mK,?a+lg");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("@#=mK,?a+lg");
      strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "@#=mK,?a+lg");
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      // Undeclared exception!
      try { 
        strBuilder0.replace((-1434), (-1434), "org.apache.commons.lang.text.StrBuilder");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1434
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("pf$%HIPCLm!0T_&O");
      strBuilder0.hashCode();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.equals((Object) strBuilder0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      Object object0 = new Object();
      strBuilder0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("C:U%OqxY#*\"?p>Eyv");
      StrBuilder strBuilder1 = new StrBuilder();
      strBuilder1.append(strBuilder0);
      strBuilder0.equals(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.runtime.version");
      StrBuilder strBuilder1 = new StrBuilder();
      strBuilder1.equals(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(101);
      strBuilder0.equals(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      strBuilder1.insert(0, 'c');
      strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.equalsIgnoreCase(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("/3x");
      char[] charArray0 = new char[19];
      charArray0[3] = '/';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.lastIndexOf((StrMatcher) null, 4);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      strBuilder0.lastIndexOf(strMatcher0, (-1434));
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      strBuilder0.lastIndexOf("`cfwN");
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      strBuilder0.lastIndexOf("t2gSYQ,g9N6}P <z", 0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("usejr.country");
      strBuilder0.lastIndexOf("m", 0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&vc9%*Aa[34[snC,CsC");
      strBuilder0.lastIndexOf("");
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.lastIndexOf("l8,S0F1t>@+FT>=", 0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("r");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      strBuilder0.appendFixedWidthPadLeft((Object) strBuilder_StrBuilderTokenizer0, 115, 'z');
      strBuilder0.lastIndexOf('z');
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("pf$%HIPCLm!0T_&+ O");
      strBuilder0.indexOf((StrMatcher) null, (-450));
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append("zd{");
      strBuilder0.contains("@AZM8>71AF");
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.indexOf('T', 10);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*]cIlPnm:Q?z");
      strBuilder0.indexOf('h', (-337));
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("file.separator");
      strBuilder0.contains((StrMatcher) strMatcher_StringMatcher0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("&vc9%*Aa[34[snC,CsC");
      strBuilder0.contains((StrMatcher) strMatcher_StringMatcher0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-416));
      strBuilder0.append("zd{");
      strBuilder0.contains("");
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("r");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(49, 49, '}');
      strBuilder1.contains('}');
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.contains('9');
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Integer integer0 = new Integer(4);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) integer0, 1628, 't');
      strBuilder1.midString(1331, 4);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("p*");
      strBuilder0.midString(39, 39);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-416));
      strBuilder0.midString((-2562), (-1680));
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&vc9%*Aa[34[snC,CsC");
      strBuilder0.midString(13, 96);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      strBuilder0.rightString(11);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.rightString((-1677));
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*]cIlPnm:Q?z");
      strBuilder0.rightString(11);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("XO{y =tM&");
      strBuilder0.leftString(3);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cKb{");
      strBuilder0.leftString((-990));
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.leftString(1169);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      char[] charArray0 = new char[1];
      strBuilder0.append(charArray0);
      strBuilder0.endsWith("length must be valid");
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      strBuilder0.endsWith("length must be valid");
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.endsWith("");
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      strBuilder0.endsWith((String) null);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.endsWith("java.lang.Object");
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      strBuilder0.startsWith("T ");
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("uetJm<SH877:s");
      strBuilder0.startsWith("uetJm<SH877:s");
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.startsWith("j");
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("m|CJ;@;c^\"");
      strBuilder0.startsWith((String) null);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*]cIlPnm:Q?z");
      strBuilder0.startsWith("");
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('e');
      strBuilder1.setLength('e');
      strBuilder0.trim();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.reverse();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.region");
      strBuilder0.reverse();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('l');
      strBuilder0.replaceAll((StrMatcher) strMatcher_CharMatcher0, "Uk?Uw|pD(Q.vwXqy8");
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.replaceFirst("2c", "");
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.replaceFirst((String) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1584);
      strBuilder0.replaceAll("`I|a]/`eKagU20K0{5", (String) null);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      strBuilder0.replaceAll((String) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      strBuilder0.replaceFirst('g', 'n');
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*]cIlPnm:Q?z");
      strBuilder0.replaceFirst('+', '+');
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*]cIlPnm:Q?z");
      strBuilder0.replaceAll('*', 'O');
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.replaceAll('7', 'x');
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      strBuilder0.replaceAll('x', 'x');
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      strBuilder0.replace(6, 2074, "");
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('l');
      strBuilder0.deleteFirst((StrMatcher) strMatcher_CharMatcher0);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      strBuilder0.replaceFirst("length must be valid", "length must be valid");
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&vc9%*Aa[34[snC,CsC");
      strBuilder0.deleteFirst("Array element ");
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.deleteFirst((String) null);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("pf$%HIPCLm!0T_&+ O");
      strBuilder0.deleteAll("pf$%HIPCLm!0T_&+ O");
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1584);
      strBuilder0.deleteAll((String) null);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.deleteFirst('`');
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      strBuilder0.deleteAll('s');
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(",.~B!");
      strBuilder0.appendFixedWidthPadRight((Object) strBuilder0, 1075, 'R');
      strBuilder0.deleteAll('R');
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.setLength('e');
      strBuilder0.trim();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      strBuilder0.delete(0, 0);
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&vc9%*Aa[34[snC,CsC");
      strBuilder0.insert(9, true);
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*]cIlPnm:Q?z");
      strBuilder0.insert(2, false);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 0, 98);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 98
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      char[] charArray0 = new char[2];
      StrBuilder strBuilder0 = new StrBuilder("@#=mK,?a+lg");
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 0, (-2199));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -2199
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      char[] charArray0 = new char[5];
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.insert(0, charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      char[] charArray0 = new char[2];
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, (-1918), 14);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -1918
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      strBuilder0.insert(0, (char[]) null, 1821, 0);
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(116);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 1, 475);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("r");
      char[] charArray0 = new char[1];
      strBuilder0.insert(1, charArray0);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("m|CJ;@;c^\"");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder0, 1075, 'h');
      strBuilder1.insert(1075, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      char[] charArray0 = new char[0];
      strBuilder0.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.insert(0, 1044.545F);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&vc9%*Aa[34[snC,CsC");
      strBuilder0.insert(13, (Object) null);
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(49, (Object) "j2}qS");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 49
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) null, 38, 't');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-416));
      LinkedList<String> linkedList0 = new LinkedList<String>();
      strBuilder0.appendFixedWidthPadRight((Object) linkedList0, (-416), '\\');
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendFixedWidthPadLeft(10, (-1144), 'O');
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendPadding(1197, '-');
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendPadding((-3306), ':');
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendWithSeparators((Iterator) null, "#iZxG4GCU*c");
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*]cIlPnm:Q?z");
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      linkedList0.add(strBuilder0);
      strBuilder0.appendWithSeparators((Collection) linkedList0, "XO{y =tM&");
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2619);
      strBuilder0.appendWithSeparators((Collection) null, "length must be valid");
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[1];
      strBuilder0.appendWithSeparators(objectArray0, (String) null);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("}v3#8917{?Y?70$]L8");
      Object[] objectArray0 = new Object[0];
      strBuilder0.appendWithSeparators(objectArray0, "v8");
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendWithSeparators((Object[]) null, "!6xL");
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1584);
      strBuilder0.append(false);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("StrTokenizer[not tokenized yet]");
      strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, 3836);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 3836
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("usejr.country");
      char[] charArray0 = new char[9];
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, (-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-416));
      char[] charArray0 = new char[2];
      strBuilder0.append(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(117);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-3898), 1202);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1202
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      char[] charArray0 = new char[0];
      strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-525));
      strBuilder0.append((char[]) null);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("usejr.country");
      strBuilder0.append(strBuilder0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder0, 3, 1833);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(49);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder0, 0, (-2741));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&vc9%*Aa[34[snC,CsC");
      StrBuilder strBuilder1 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 9, 9);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      strBuilder0.append((StrBuilder) null, 2, 2);
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("uetJm<SH877:s");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder0, (-1217), 941);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append((StrBuilder) null);
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      strBuilder0.append(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-416));
      StringBuffer stringBuffer0 = new StringBuffer();
      strBuilder0.append(stringBuffer0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(703);
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, 703);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder0 = new StrBuilder("IR");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, (-2968));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 32, 32);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      StringBuffer stringBuffer0 = new StringBuffer(76);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-3985), 76);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append((StringBuffer) null, (-1914), 1043);
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(">nFD$[DVTe49");
      StringBuffer stringBuffer0 = new StringBuffer(">nFD$[DVTe49");
      strBuilder0.append(stringBuffer0, 2, 2);
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      StringBuffer stringBuffer0 = new StringBuffer("!x");
      strBuilder0.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      strBuilder0.append((StringBuffer) null);
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("*Gqjh1,60C.nZ^9qW", 3, 1);
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      // Undeclared exception!
      try { 
        strBuilder0.append("user.country", 0, 95);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-416));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("", 0, 0);
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("userent(]ry");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("1.3", 0, (-3372));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("OA0416APR1o[Je%|&c)");
      // Undeclared exception!
      try { 
        strBuilder0.append("", (-1), 39);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append((String) null, 0, 0);
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append((String) null);
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      Object[] objectArray0 = new Object[3];
      strBuilder0.appendWithSeparators(objectArray0, "length must be valid");
      assertEquals(60, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder0 = new StrBuilder((-43));
      strBuilder0.append((Object) strMatcher_TrimMatcher0);
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("0]y6=JC_c");
      StrBuilder strBuilder1 = strBuilder0.setNullText("0]y6=JC_c");
      strBuilder1.appendNull();
      assertEquals(18, strBuilder1.size());
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        strBuilder0.getChars(51, 4, charArray0, Integer.MAX_VALUE);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.getChars(101, 101, (char[]) null, (-2147483619));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&vc9%*Aa[34[snC,CsC");
      // Undeclared exception!
      try { 
        strBuilder0.getChars(Integer.MAX_VALUE, (-2425), (char[]) null, (-2425));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2425
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-2940), (-2120), charArray0, (int) 'b');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2940
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      char[] charArray0 = new char[24];
      StrBuilder strBuilder0 = new StrBuilder("}v3#8917{?Y?70$]L8");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 1, 1);
      assertEquals(50, strBuilder0.capacity());
      assertEquals(1, int0);
      assertEquals(18, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(")ZM~:Af,%$'I-72AKW.");
      char[] charArray0 = new char[1];
      char[] charArray1 = strBuilder0.getChars(charArray0);
      assertEquals(51, strBuilder0.capacity());
      assertEquals(19, charArray1.length);
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-416));
      char[] charArray0 = strBuilder0.getChars((char[]) null);
      assertEquals(32, strBuilder0.capacity());
      assertEquals(0, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = strBuilder0.toCharArray(0, 38);
      char[] charArray1 = strBuilder0.getChars(charArray0);
      assertEquals(0, charArray1.length);
      assertEquals(32, strBuilder0.capacity());
      assertSame(charArray1, charArray0);
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      char[] charArray0 = strBuilder0.toCharArray(19, 636);
      assertEquals(52, strBuilder0.capacity());
      assertEquals(1, charArray0.length);
      assertArrayEquals(new char[] {'d'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.toCharArray();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("usejr.country");
      char[] charArray0 = strBuilder0.toCharArray();
      assertEquals(13, charArray0.length);
      assertEquals(45, strBuilder0.capacity());
      assertEquals(13, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(1631);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1631
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("OA0416APR1o[Je%|&c)");
      strBuilder0.deleteCharAt(13);
      assertEquals(18, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-334));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -334
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.region");
      StrBuilder strBuilder1 = strBuilder0.setCharAt(0, 'g');
      assertEquals(11, strBuilder1.length());
      assertEquals(43, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(114, '`');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*]cIlPnm:Q?z");
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1938), ';');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1938
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("r");
      // Undeclared exception!
      try { 
        strBuilder0.charAt(20);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 20
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      char char0 = strBuilder0.charAt(0);
      assertEquals('l', char0);
      assertEquals(20, strBuilder0.length());
      assertEquals(52, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-681));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -681
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
      assertTrue(boolean0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("uetJm<SH877:s");
      boolean boolean0 = strBuilder0.isEmpty();
      assertEquals(13, strBuilder0.length());
      assertEquals(45, strBuilder0.capacity());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      strBuilder0.append(strBuilder1);
      assertEquals(0, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-416));
      strBuilder0.appendFixedWidthPadLeft(1192, 32, '3');
      strBuilder0.minimizeCapacity();
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(843);
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      assertEquals(843, strBuilder1.capacity());
      assertTrue(strBuilder1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append(6.9365125F);
      strBuilder0.setLength(4);
      assertEquals(4, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("}v3#8917{?Y?70$]L8");
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-848));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -848
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      assertEquals(46, strBuilder0.capacity());
      assertEquals(14, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1058));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      strBuilder_StrBuilderWriter0.write(charArray0);
      assertFalse(strBuilder0.isEmpty());
      assertEquals(9, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.text.StrBuilder");
      assertEquals(39, strBuilder0.capacity());
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(5);
      assertEquals(13, strBuilder0.length());
      assertEquals(13, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(34);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("6#k';B>-=");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      assertEquals(41, strBuilder0.capacity());
      assertEquals(9, strBuilder0.length());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      assertEquals(32, strBuilder0.capacity());
      assertFalse(strBuilder_StrBuilderReader0.ready());
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("m|CJ;@;c^\"");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      assertEquals(43, strBuilder0.capacity());
      assertEquals(11, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(4, 4, '9');
      boolean boolean0 = strBuilder1.contains('9');
      assertEquals(4, strBuilder0.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append(4076.46705);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(3925L);
      assertFalse(strBuilder0.isEmpty());
      assertEquals(10L, long0);
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrBuilder strBuilder1 = strBuilder0.append((float) 0);
      strBuilder1.size = 2587;
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.deleteAll(strMatcher0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 52
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&vc9%*Aa[34[snC,CsC");
      int int0 = strBuilder0.lastIndexOf("&vc9%*Aa[34[snC,CsC");
      assertEquals(0, int0);
      assertEquals(51, strBuilder0.capacity());
      assertEquals(19, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("$|F78l");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-5575), 0.0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -5575
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3750), (-3901.79F));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3750
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-518), (-518));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -518
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(11, (long) 11);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 11
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("m|CJ;@;c^\"");
      strBuilder0.getNullText();
      assertEquals(43, strBuilder0.capacity());
      assertEquals(11, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1584);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      assertEquals(1584, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      strBuilder0.asReader();
      assertEquals(13, strBuilder0.length());
      assertEquals(45, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*]cIlPnm:Q?z");
      strBuilder0.append(108);
      assertEquals(16, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&vc9%*Aa[34[snC,CsC");
      int int0 = strBuilder0.indexOf("");
      assertEquals(0, int0);
      assertEquals(51, strBuilder0.capacity());
      assertEquals(19, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) null, "");
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*]cIlPnm:Q?z");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      assertEquals(45, strBuilder0.capacity());
      assertEquals(13, strBuilder0.length());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&vc9%*Aa[34[snC,CsC");
      String string0 = strBuilder0.toString();
      assertEquals("&vc9%*Aa[34[snC,CsC", string0);
      assertEquals(51, strBuilder0.capacity());
      assertEquals(19, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      int int0 = strBuilder0.lastIndexOf(')');
      assertEquals((-1), int0);
      assertEquals(45, strBuilder0.capacity());
      assertEquals(13, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("x['WM2 _KtjSKL3?x");
      // Undeclared exception!
      try { 
        strBuilder0.substring(431);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.region");
      strBuilder0.asWriter();
      assertEquals(43, strBuilder0.capacity());
      assertEquals(11, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.size();
      assertEquals(0, int0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.getNewLineText();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.capacity();
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*]cIlPnm:Q?z");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("*]cIlPnm:Q?z");
      assertEquals(13, strBuilder1.length());
      assertEquals(45, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "pCo");
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      assertEquals(32, strBuilder0.capacity());
      assertEquals(0, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("@#=mK,?a+lg");
      strBuilder0.deleteFirst('?');
      assertEquals(10, strBuilder0.size());
  }
}
