/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 22:35:09 GMT 2021
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      strBuilder0.append(0.0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.skip(3925L);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("//5\";`&0ogFK[(o`a*");
      strBuilder1.equalsIgnoreCase(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.insert(0, (long) 0);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      strBuilder0.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("uDpHq/eHlR~S0");
      strBuilder0.lastIndexOf("java.vendor");
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("+Jr^$L'F?m^");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("+Jr^$L'F?m^");
      strBuilder0.contains((StrMatcher) strMatcher_StringMatcher0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      strBuilder0.contains('K');
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.midString(1404, 53);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      strBuilder0.midString(0, (-1295));
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(771, 771, 'E');
      strBuilder2.rightString(771);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      strBuilder0.rightString((-3437));
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.leftString((-729));
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(0);
      linkedList0.offerLast(integer0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      strBuilder1.endsWith("Invalid offset: ");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("+Jr^$L'F?m^");
      strBuilder0.startsWith("JvUtz");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.append('A');
      strBuilder_StrBuilderWriter0.write("Od!`=8S9u");
      strBuilder1.replaceAll("Od!`=8S9u", "gc{@HB2@o9+!");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      strBuilder0.replaceFirst('.', '%');
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      strBuilder0.replaceAll('F', 'i');
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append('S');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("uDpHq/eHlR~S0");
      strBuilder1.deleteAll('S');
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1584);
      strBuilder0.appendFixedWidthPadLeft((-243), 0, '\'');
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*ANk");
      strBuilder0.appendPadding(0, 'Z');
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, 348);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 348
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder0, 0, (-453));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", 0, 57);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.region");
      strBuilder0.setCharAt(0, 'g');
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "LM8:N5F!%%t,Eoh6=0P");
      char[] charArray0 = new char[9];
      strBuilder1.buffer = charArray0;
      strBuilder1.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      strBuilder0.appendFixedWidthPadRight(771, 1616, 'E');
      char[] charArray0 = new char[5];
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.read(charArray1, 1105, 44);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      strBuilder0.validateIndex(0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(4, 4, '9');
      char[] charArray0 = new char[5];
      strBuilder1.getChars(4, 4, charArray0, 4);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((char[]) null, 348, 5);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("6)5}q!Iz#UBf", 1, 0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.validateRange(0, 0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      strBuilder0.validateRange(0, 116);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1584);
      strBuilder0.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.version");
      strBuilder0.toString();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("pf$%HIPCLm!0T_&O");
      strBuilder0.substring(1, 37);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.substring(0, 1547);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      strBuilder0.substring(0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.substring(0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      strBuilder0.size();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("LF");
      strBuilder0.setNewLineText("");
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      strBuilder1.replaceAll(strMatcher0, "k_''");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('P');
      strBuilder0.replace((StrMatcher) strMatcher_CharMatcher0, (String) null, 0, 27, 0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append('q');
      strBuilder0.length();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("hTq*vTTO");
      strBuilder0.lastIndexOf("", 1);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("uDpHq/eHlR~S0");
      strBuilder0.lastIndexOf("");
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("y@OK!J2X2@Cl6");
      StrBuilder strBuilder2 = strBuilder1.append('<');
      strBuilder2.lastIndexOf('<');
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      strBuilder0.insert(0, "");
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("-\"");
      StrBuilder strBuilder1 = strBuilder0.append((Object) "-\"");
      strBuilder1.append(strBuilder1);
      strBuilder0.insert(58, (double) 1);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      strBuilder0.append("<:(#ahN2:`.xvE5c;Zh");
      strBuilder0.indexOf("(", 0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(4, 4, '9');
      strBuilder1.indexOf("");
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("]VZ,FJ");
      strBuilder0.append('+');
      strBuilder0.indexOf('+');
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2757));
      strBuilder0.getChars((char[]) null);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-3544.891F));
      strBuilder1.ensureCapacity(0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3068);
      strBuilder0.append("?j97y*:OqUu\tK2Ev:");
      strBuilder0.deleteFirst((StrMatcher) null);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      strBuilder0.clear();
      strBuilder0.deleteAll(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      strBuilder0.delete(1, 24);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.awt.headless");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("java.awt.headless");
      strBuilder1.append('#');
      strBuilder0.charAt(0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.append(1.0F);
      strBuilder0.charAt(0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendFixedWidthPadRight((-9), (-9), 'E');
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      StrBuilder strBuilder1 = new StrBuilder("");
      strBuilder1.append(strBuilder0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(97, 97);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(102);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(292, (-17));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      strBuilder0.size = 150;
      // Undeclared exception!
      try { 
        strBuilder0.substring(117);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("?eb+)JDqQXe");
      char[] charArray0 = new char[6];
      strBuilder0.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.reverse();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("pf$%HIPCLm!0T_&O");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "T-\u0006", (-1473), (-1049), (-1473));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1473
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("M");
      // Undeclared exception!
      try { 
        strBuilder0.replace(90, 90, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(108, (char[]) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1481);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2309), true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2309
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2461);
      // Undeclared exception!
      try { 
        strBuilder0.insert(2461, 34);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2461
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      strBuilder0.size = 110;
      // Undeclared exception!
      try { 
        strBuilder0.indexOf("Ik)uti#zg%3IaCg", (-2739));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 52
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.equalsIgnoreCase((StrBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.equals((StrBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "LM8:N5F!%%t,Eoh6=0P");
      char[] charArray0 = new char[9];
      strBuilder1.buffer = charArray0;
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      // Undeclared exception!
      try { 
        strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "length must be valid");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      strBuilder_StrBuilderWriter0.write(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(0, 7, 'l');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      strBuilder0.insert(3, (long) 3);
      StrBuilder strBuilder1 = new StrBuilder("y@OK!J2X2@Cl6");
      strBuilder1.equals(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.equals(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      strBuilder0.lastIndexOf(strMatcher0, 9);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      strBuilder0.lastIndexOf(strMatcher0, 3389);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("uDpHq/eHlR~S0");
      strBuilder0.appendNewLine();
      strBuilder0.lastIndexOf("uDpHq/eHlR~S0", 1899);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("uDpHq/eHlR~S0");
      strBuilder0.lastIndexOf("uDpHq/eHlR~S0", 1899);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      strBuilder0.lastIndexOf("y@OK!J2X2@Cl6", 0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      strBuilder0.lastIndexOf('i', 1);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendFixedWidthPadRight(4, 4, '9');
      strBuilder0.lastIndexOf('x', 1);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      strBuilder0.lastIndexOf('a', (-1));
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.append('S');
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('S');
      strBuilder0.indexOf((StrMatcher) strMatcher_CharMatcher0, 0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('J');
      strBuilder0.indexOf((StrMatcher) strMatcher_CharMatcher0, 45);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      strBuilder0.indexOf(strMatcher0, 0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      strBuilder0.indexOf("length must be valid", (-2739));
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append((float) 0);
      strBuilder0.indexOf("77JE.a!Y50~gc", (-1295));
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      strBuilder0.indexOf("ajwR", 0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.indexOf("4.9", 126);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      strBuilder0.indexOf('w', 44);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      strBuilder0.insert(0, "");
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      strBuilder0.appendFixedWidthPadRight(771, 1616, 'E');
      strBuilder0.insert(771, "Invalid offset: ");
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) strBuilder_StrBuilderTokenizer0, 4, 's');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendFixedWidthPadLeft((Object) strBuilder0, 5, '8');
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1584);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('S');
      strBuilder0.appendFixedWidthPadLeft((Object) strMatcher0, (-2948), '.');
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      char[] charArray0 = new char[2];
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 394, (-783));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -783
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("SOJ6:ft;ntBh");
      char[] charArray0 = new char[3];
      strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append("", (-742), 7);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append("");
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      strBuilder0.append((Object) null);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2165));
      strBuilder0.appendNull();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = strBuilder0.toCharArray(0, 636);
      StrBuilder strBuilder1 = strBuilder0.append((Object) strBuilder0);
      strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, 636, '');
      // Undeclared exception!
      try { 
        strBuilder1.getChars(651, 651, charArray0, 752);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      strBuilder0.charAt(0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.ensureCapacity(0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.ensureCapacity(371);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder('9');
      strBuilder0.length();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.toString();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1252), 115);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1252
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-102));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.skip((-102));
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2165));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.skip(2437L);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.skip(0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      StrBuilder strBuilder1 = strBuilder0.append(35.721170685);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(771, 1616, 'E');
      char[] charArray0 = new char[5];
      char[] charArray1 = strBuilder1.getChars(charArray0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray1, 1616, 44);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      char[] charArray0 = new char[5];
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 1616, 44);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 63, (-249));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      char[] charArray0 = new char[5];
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1302), 1616);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*ANk");
      char[] charArray0 = new char[4];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("c*");
      // Undeclared exception!
      try { 
        strBuilder0.insert(1007, "c*");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1007
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.delete(292, 292);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("pf$%HIPCLm!0T_&O");
      strBuilder0.hashCode();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.equals((Object) "Invalid offset: ");
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      StrBuilder strBuilder1 = new StrBuilder("y@OK!J2X2@Cl6");
      strBuilder1.equals(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.equals((Object) strBuilder0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder strBuilder1 = new StrBuilder("9/ ,#Q~v4=Gg");
      strBuilder0.equals((Object) strBuilder1);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder strBuilder1 = new StrBuilder("Invalid offset: ");
      strBuilder1.equalsIgnoreCase(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.equalsIgnoreCase(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("h,{[5{am}\"S0");
      strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1543));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("Od!`=8S9u");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("Od!`=8S9u");
      strBuilder0.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.lastIndexOf((StrMatcher) null, (-1));
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("hTq*vTTO");
      strBuilder0.lastIndexOf((String) null, 1);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.lastIndexOf("user.country", 0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      StrBuilder strBuilder1 = strBuilder0.append('<');
      strBuilder1.lastIndexOf('<');
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.lastIndexOf('L', 1677);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3068);
      strBuilder0.indexOf((StrMatcher) null, (-729));
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("m|CJ;@;c^\"");
      strBuilder0.deleteFirst("org.apache.commons.lang.ArrayUtils");
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      strBuilder0.indexOf("(", 0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      strBuilder0.indexOf((String) null, (-1295));
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      strBuilder0.indexOf("", (-10));
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      strBuilder0.indexOf('#', 0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("dxw(;&y1:s-[d;T");
      strBuilder0.indexOf('T', (-39));
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      strBuilder0.contains(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("[^M");
      strBuilder0.contains("[^M");
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(460);
      strBuilder0.contains("[^M");
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.append('S');
      strBuilder0.contains('S');
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("hTq*vTTO");
      strBuilder0.midString(1, 6);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendFixedWidthPadRight(4, 4, '9');
      strBuilder0.midString((-3105), 102);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.midString((-3105), 102);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("pf$%HIPCLm!0T_&O");
      strBuilder0.midString(0, 0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setLength(101);
      strBuilder1.rightString(5);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      strBuilder0.rightString(0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3068);
      strBuilder0.rightString(3068);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      strBuilder0.leftString(1);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.leftString(0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.leftString(112);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("hTq*vTTO");
      strBuilder0.endsWith("d:*");
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.endsWith("Invalid startIndex: ");
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.endsWith("");
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      strBuilder0.endsWith((String) null);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("nwalim offet: ");
      strBuilder0.endsWith("nwalim offet: ");
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("hTq*vTTO");
      strBuilder0.startsWith("d:*");
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.startsWith("uDpHq/eHlR~S0");
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      strBuilder0.startsWith("");
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.startsWith((String) null);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("nwalim offet: ");
      strBuilder0.startsWith("nwalim offet: ");
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      strBuilder0.trim();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3068);
      strBuilder0.trim();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.reverse();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      strBuilder0.reverse();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      strBuilder0.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("nwalim offet: ");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      strBuilder0.replace(strMatcher0, "end < start", 2, 2, 97);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("pf$%HIPCLm!0T_&O");
      strBuilder0.replaceFirst("pf$%HIPCLm!0T_&O", (String) null);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("pf$%HIPCLm!0T_&O");
      strBuilder0.replaceFirst("pf$%HIPCLm!0T_&O", "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.replaceFirst("java.compiler", "s;}nkzd");
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.replaceFirst((String) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      strBuilder0.replaceAll("java.vendor", (String) null);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.replaceAll((String) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("U*Oj+IQz3h{:Khz");
      strBuilder0.replaceFirst('K', 'k');
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.replaceFirst('7', '7');
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      strBuilder0.replaceAll('i', 'F');
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.replaceAll('Q', '!');
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      strBuilder0.replaceAll('i', 'i');
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.replace(0, 0, "uDpHq/eHlR~S0");
      strBuilder0.lastIndexOf("user.name");
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      strBuilder0.replaceFirst(strMatcher0, (String) null);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      strBuilder0.replaceAll("user.country", "user.country");
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("remove() is unsupported");
      strBuilder0.deleteFirst("remove() is unsupported");
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.deleteFirst((String) null);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.deleteAll((String) null);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(0);
      linkedList0.offerLast(integer0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      strBuilder1.deleteFirst('l');
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      strBuilder0.append((long) (-1));
      strBuilder0.deleteFirst('~');
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.deleteFirst('z');
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      strBuilder0.appendFixedWidthPadRight(771, 1616, 'E');
      strBuilder0.deleteAll('E');
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.deleteAll('_');
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.delete(0, 0);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.insert(0, true);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.insert(0, false);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("m|CJ;@;c^\"");
      char[] charArray0 = new char[4];
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 0, (int) 'B');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 66
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1584);
      char[] charArray0 = new char[5];
      strBuilder0.insert(0, charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-102));
      char[] charArray0 = new char[2];
      strBuilder0.append((float) 0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(3, charArray0, (-315), 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -315
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1584);
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 34, 34);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.awt.headless");
      char[] charArray0 = new char[2];
      strBuilder0.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1543));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("Od!`=8S9u");
      strBuilder0.insert(5, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      strBuilder0.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      strBuilder0.insert(0, (char[]) null, 0, (-3252));
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2757));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), (Object) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      strBuilder0.insert(0, (Object) "user.country");
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(4, 4, '9');
      strBuilder1.trim();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) null, 262, '(');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendFixedWidthPadRight((Object) strBuilder0, 0, '\u008C');
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(68);
      strBuilder0.appendFixedWidthPadLeft((Object) "~7}SE", 235, '*');
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3068);
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) null, 1567, ')');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(101);
      strBuilder0.appendPadding(101, '$');
      strBuilder0.deleteAll("");
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendPadding((-9), 'z');
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("LM8:N5F!%%t,Eoh6=0P");
      strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      strBuilder0.appendWithSeparators((Iterator) null, "");
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer((-4068));
      linkedList0.add(integer0);
      linkedList0.offerLast(integer0);
      strBuilder0.appendWithSeparators((Collection) linkedList0, "");
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(0);
      linkedList0.offerLast(integer0);
      strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      strBuilder0.appendWithSeparators((Collection) linkedList0, "");
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendWithSeparators((Collection) null, "S\"R#Mq5yh{KQ1]");
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[0];
      strBuilder0.appendWithSeparators(objectArray0, "");
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      strBuilder0.appendWithSeparators((Object[]) null, "startIndex must be valid");
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      strBuilder0.append(true);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(";");
      strBuilder0.append(false);
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      char[] charArray0 = new char[6];
      strBuilder0.append(charArray0, 1, 0);
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      strBuilder0.append(charArray0, 4, 1);
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      char[] charArray0 = new char[2];
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 1, (-531));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -531
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 1, 139);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 139
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-366), 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append((char[]) null);
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(771, 1616, 'E');
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      strBuilder2.append(strBuilder1, 1616, 1399);
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("pf$%HIPCLm!0T_&O");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder0, 0, 34);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder0, (-2654), 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("pf$%HIPCLm!0T_&O");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder0, 31, 31);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append((StrBuilder) null);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.append(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      CharBuffer charBuffer0 = CharBuffer.allocate(116);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 32, 3931);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, (-1654));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("o3I#cAOkkaA");
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 117, (-944));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("pf$%HIPCLm!0T_&O");
      strBuilder0.append((StringBuffer) null, (-1629), 1037);
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-416));
      StringBuffer stringBuffer0 = new StringBuffer();
      strBuilder0.append(stringBuffer0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("hTq*vTTO");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "*z.*G #j?={`Mv");
      strBuilder0.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("pf$%HIPCLm!0T_&O");
      strBuilder0.append((StringBuffer) null);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer(1109);
      strBuilder0.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      strBuilder0.append("user.country", 0, 0);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append("Invalid offset: ", 10, 10);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      // Undeclared exception!
      try { 
        strBuilder0.append("y@OK!J2X2@Cl6", 10, (-4847));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.append("aQEjb I\"a", 0, 4);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", 1344, 1344);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append((String) null, 0, 0);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append((String) null);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Object[] objectArray0 = new Object[7];
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(975);
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null, 3178, 3178);
      assertEquals(975, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-102));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[2];
      strBuilder0.insert(0, '\u0000');
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      assertFalse(strBuilder0.isEmpty());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1584);
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 32, charArray0, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-416));
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-416), (-416), charArray0, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -416
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.getChars(918, 0, charArray0, 108);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-628));
      char[] charArray0 = new char[4];
      char[] charArray1 = strBuilder0.getChars(charArray0);
      assertEquals(32, strBuilder0.capacity());
      assertEquals(4, charArray1.length);
      assertEquals(0, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3068);
      strBuilder0.append("?j97y*:OqUu\tK2Ev:");
      strBuilder0.toCharArray(3, 1594);
      assertEquals(17, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.toCharArray();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('K');
      char[] charArray0 = strBuilder1.toCharArray();
      assertFalse(strBuilder0.isEmpty());
      assertArrayEquals(new char[] {'K'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt('E');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 69
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1616);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-326));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -326
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder strBuilder1 = strBuilder0.setCharAt(7, 'Q');
      assertEquals(16, strBuilder0.length());
      assertEquals(48, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("hTq*vTTO");
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(32, 'c');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1), 'O');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1584);
      // Undeclared exception!
      try { 
        strBuilder0.charAt(1296);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1296
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.insert(0, 'q');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      assertFalse(strBuilder0.isEmpty());
      assertEquals(113, int0);
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1543));
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-1543));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1543
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
      assertTrue(boolean0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      boolean boolean0 = strBuilder0.isEmpty();
      assertFalse(boolean0);
      assertEquals(48, strBuilder0.capacity());
      assertEquals(16, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("DbsE");
      assertEquals(36, strBuilder0.capacity());
      
      strBuilder0.minimizeCapacity();
      assertEquals(4, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(3);
      linkedList0.offerLast(integer0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("Od!`=8S9u");
      strBuilder1.minimizeCapacity();
      assertFalse(strBuilder0.isEmpty());
      assertEquals(37, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      assertEquals(32, strBuilder1.capacity());
      assertEquals(0, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      assertEquals(12, strBuilder0.size());
      
      strBuilder0.setLength(0);
      assertEquals(0, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-2976));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2976
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y@OK!J2X2@Cl6");
      StrBuilder strBuilder1 = strBuilder0.setNullText("y@OK!J2X2@Cl6");
      strBuilder1.appendNull();
      assertEquals(26, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.append((Object) null);
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(5);
      assertEquals(13, strBuilder0.size());
      assertEquals(13, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-128));
      assertEquals(16, strBuilder0.length());
      assertEquals(48, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      assertEquals(16, strBuilder0.length());
      assertTrue(boolean0);
      assertEquals(48, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-102));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      assertFalse(strBuilder_StrBuilderReader0.ready());
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("m|CJ;@;c^\"");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      assertEquals(11, strBuilder0.length());
      assertEquals(43, strBuilder0.capacity());
      assertEquals(11, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2844), 'P');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2844
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(771, 1616, 'E');
      strBuilder1.deleteCharAt('E');
      assertEquals(1631, strBuilder0.size());
      assertEquals(1632, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-159), (-2848.2434));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -159
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3085), (float) 4);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3085
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.insert(0, 97);
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-47), 14L);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -47
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("m|CJ;@;c^\"");
      strBuilder0.getNullText();
      assertEquals(11, strBuilder0.length());
      assertEquals(43, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.asReader();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("nwalim offet: ");
      strBuilder0.append(921);
      assertEquals(17, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf("");
      assertEquals(32, strBuilder0.capacity());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("r`@B1vul;)>NI");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "{l7LU3/sc");
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      strBuilder0.appendFixedWidthPadLeft((-1), 4, '=');
      assertEquals(16, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder strBuilder1 = strBuilder0.clear();
      strBuilder1.appendFixedWidthPadRight(771, 771, 'E');
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(771, ')');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 771
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("hTq*vTTO");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0);
      assertEquals((-1), int0);
      assertEquals(40, strBuilder0.capacity());
      assertEquals(8, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      assertEquals("", string0);
      assertEquals(32, strBuilder0.capacity());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("pf$%HIPCLm!0T_&O");
      int int0 = strBuilder0.lastIndexOf(']');
      assertEquals(16, strBuilder0.length());
      assertEquals((-1), int0);
      assertEquals(48, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.substring((-392));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -392
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.asWriter();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.indexOf('~');
      assertEquals((-1), int0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.size();
      assertEquals(0, int0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3068);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) null);
      assertEquals(3068, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.getNewLineText();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.capacity();
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "k_''");
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("m|CJ;@;c^\"");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      assertEquals("m|CJ;@;c^\"", stringBuffer0.toString());
      assertEquals(43, strBuilder0.capacity());
      assertEquals(11, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("DbsE");
      strBuilder0.delete(0, 48);
      strBuilder0.minimizeCapacity();
      assertEquals(0, strBuilder0.capacity());
  }
}
