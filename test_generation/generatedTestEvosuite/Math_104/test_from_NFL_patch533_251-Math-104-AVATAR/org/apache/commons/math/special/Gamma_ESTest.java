/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 18:13:39 GMT 2021
 */

package org.apache.commons.math.special;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.special.Gamma;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Gamma_ESTest extends Gamma_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Gamma.regularizedGammaQ((-181.1291316959796), (-181.1291316959796));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      try { 
        Gamma.regularizedGammaQ(92.9512227367, 1.0E-8, (double) (-1366), (-1366));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Maximal number of iterations (-1,366) exceeded
         //
         verifyException("org.apache.commons.math.special.Gamma", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Gamma.regularizedGammaP(1.0, 210.091491);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Gamma.logGamma((-305.553223));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Gamma.regularizedGammaQ((double) 1091, 1377.5308364, (-1.0), 1400);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Gamma.regularizedGammaQ(2.1743961811521265E-4, 415.41);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Gamma.regularizedGammaP(2095.2760039, 2095.2760039, 2095.2760039, 12);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Gamma.logGamma(2.0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Gamma.logGamma(1.0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      Gamma.regularizedGammaQ(3617.4360699846, 8.127696678360816E-6, (-1708.691), Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      Gamma.regularizedGammaQ(1.7976931348623157E308, 1.7976931348623157E308);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      Gamma.regularizedGammaP(0.5030420814934338, 0.5030420814934338, (-1106.06564), Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      Gamma.regularizedGammaP(4.652362892704858E-5, 1400.0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = Gamma.regularizedGammaQ(0.5, 0.5, (double) 2203, 2203);
      assertEquals(0.5160585509617133, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = Gamma.regularizedGammaQ(0.0, (-5122.977242), 0.0, 0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = Gamma.regularizedGammaQ(Double.NaN, Double.NaN, Double.NaN, 589);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = Gamma.regularizedGammaP(1553.02198743046, 0.49662555950248505, 0.0, 2472);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = Gamma.regularizedGammaP(147.597062645, 147.597062645, Double.NaN, 14);
      assertEquals((-3.843995385354078), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = Gamma.regularizedGammaP(877.2407954505236, 0.0, Double.NaN, 3);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double double0 = Gamma.regularizedGammaP(0.0, (-290.903418137), (-290.903418137), (-746));
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double double0 = Gamma.regularizedGammaP(2055.349754140072, (-1.0), 2055.349754140072, 522);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = Gamma.regularizedGammaP(Double.NaN, 0.0, 1553.02198743046, 2472);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double double0 = Gamma.logGamma(1910.9);
      assertEquals(12523.720677200765, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double double0 = Gamma.regularizedGammaQ(1.7976931348623157E308, 0.0, (double) 2040, 2);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double double0 = Gamma.regularizedGammaQ((double) Integer.MAX_VALUE, (-2.6190838401581408E-5), (-2882.87), Integer.MAX_VALUE);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double double0 = Gamma.regularizedGammaQ((-1237.92198164243), Double.NaN, (-1237.92198164243), (-486));
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      try { 
        Gamma.regularizedGammaP(1.7843463706590512E-7, 1.0E-8, 1.7843463706590512E-7, 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Maximal number of iterations (0) exceeded
         //
         verifyException("org.apache.commons.math.special.Gamma", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double double0 = Gamma.regularizedGammaQ(2.900371384570017E-245, 2.900371384570017E-245);
      assertEquals(6.328271240363392E-15, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double double0 = Gamma.regularizedGammaP(1910.9, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double double0 = Gamma.regularizedGammaP((-60.0), Double.NaN, (-60.0), (-3472));
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double double0 = Gamma.logGamma(0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double double0 = Gamma.logGamma(Double.NaN);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double double0 = Gamma.regularizedGammaQ((double) 12, 1910.9);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double double0 = Gamma.regularizedGammaP((-1692.754), 251.61481907173);
      assertEquals(Double.NaN, double0, 0.01);
  }
}
