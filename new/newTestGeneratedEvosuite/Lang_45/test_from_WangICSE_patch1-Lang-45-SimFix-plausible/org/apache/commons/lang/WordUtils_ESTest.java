/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 11 06:42:03 GMT 2022
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang.WordUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WordUtils_ESTest extends WordUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = WordUtils.abbreviate("U_i+6 =>", (-3221), 4, "U_i+6 =>");
      assertEquals("U_i+U_i+6 =>", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = WordUtils.abbreviate("y*V e<Wi ;d1L.=", 7, (-249), "");
      assertEquals("y*V e<W", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = WordUtils.abbreviate("LINUX", 1, (-2727), "/-7fV.)");
      assertEquals("L/-7fV.)", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = WordUtils.abbreviate("Search and Replace array lengths don't match: ", 32, (-2485), "org.apache.commons.lang.WordUtils");
      assertEquals("Search and Replace array lengthsorg.apache.commons.lang.WordUtils", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = WordUtils.abbreviate(")]", 2, 2, " is less than 0: ");
      assertEquals(")]", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = WordUtils.wrap(" \t\r\n\b", (-429));
      assertEquals("\t\r\n\b", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = WordUtils.wrap("", 1);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = WordUtils.initials((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("5()J-");
      assertEquals("5()j-", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = WordUtils.capitalize("Itu+u,e NX@zu1");
      assertEquals("Itu+u,e NX@zu1", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        WordUtils.abbreviate("org.apache.commons.lang.WordUtils", (-429), (-429), "org.apache.commons.lang.WordUtils");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = WordUtils.initials("htkhXxf:^0{d'u", (char[]) null);
      assertEquals("h", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = WordUtils.initials("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[6] = '!';
      String string0 = WordUtils.uncapitalize("%0_fm]E'o~u3WI3!", charArray0);
      assertEquals("%0_fm]E'o~u3WI3!", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = WordUtils.uncapitalize((String) null, (char[]) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[8];
      String string0 = WordUtils.uncapitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("4.0", (char[]) null);
      assertEquals("4.0", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[5];
      String string0 = WordUtils.capitalizeFully((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("java.specification.vendor", (char[]) null);
      assertEquals("Java.specification.vendor", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[2] = 'Q';
      String string0 = WordUtils.capitalize("zQ:*EC'*LaS]GfMk3_o", charArray0);
      assertEquals("ZQ:*EC'*LaS]GfMk3_o", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[3];
      String string0 = WordUtils.capitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = WordUtils.capitalize("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = WordUtils.wrap("}); ?isttevlo%)&b 3", (-1808), "}); ?isTTevlo%)&b 3", true);
      assertEquals("}}); ?isTTevlo%)&b 3)}); ?isTTevlo%)&b 3;}); ?isTTevlo%)&b 3?}); ?isTTevlo%)&b 3i}); ?isTTevlo%)&b 3s}); ?isTTevlo%)&b 3t}); ?isTTevlo%)&b 3t}); ?isTTevlo%)&b 3e}); ?isTTevlo%)&b 3v}); ?isTTevlo%)&b 3l}); ?isTTevlo%)&b 3o}); ?isTTevlo%)&b 3%}); ?isTTevlo%)&b 3)}); ?isTTevlo%)&b 3&}); ?isTTevlo%)&b 3b}); ?isTTevlo%)&b 33", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = WordUtils.wrap("", (-1888), (String) null, false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 0, "", false);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = WordUtils.abbreviate("9K\"i(>}u2SkRENm-", 3, 3, "9K\"i(>}u2SkRENm-");
      assertEquals("9K\"9K\"i(>}u2SkRENm-", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = WordUtils.abbreviate("4.0", 15, 10, "5H#Hrwj??xM!Lq");
      assertEquals("4.0", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = WordUtils.abbreviate("y*V e<Wi ;d1L6=", (-1), (-1), "y*V e<Wi ;d1L6=");
      assertEquals("y*Vy*V e<Wi ;d1L6=", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = WordUtils.abbreviate("", 2, 2419, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = WordUtils.abbreviate((String) null, 61, 61, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'i';
      String string0 = WordUtils.initials("y*V e<Wi ;d1L.=", charArray0);
      assertEquals("y ", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.initials("=Me;9!.zNaAbI*}", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = WordUtils.initials("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = WordUtils.initials((String) null, (char[]) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = WordUtils.swapCase("wg\"(9|+@:g%PJfZQ");
      assertEquals("WG\"(9|+@:G%pjFzq", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = WordUtils.swapCase("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = WordUtils.swapCase((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = WordUtils.uncapitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize("rsD}", charArray0);
      assertEquals("rsD}", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully("y*y*V e<Wi ;d1L.=", charArray0);
      assertEquals("y*y*V e<Wi ;d1L.=", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '?';
      String string0 = WordUtils.capitalizeFully("5H#Hrwj??xM!Lq", charArray0);
      assertEquals("5h#hrwj??Xm!lq", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("XJRqV!R;vEA", charArray0);
      assertEquals("XJRqV!R;vEA", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = WordUtils.capitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = WordUtils.wrap(" 9=%0", (-4723), "org.apache.commons.lang.WordUtils", true);
      assertEquals("9org.apache.commons.lang.WordUtils=org.apache.commons.lang.WordUtils%org.apache.commons.lang.WordUtils0org.apache.commons.lang.WordUtils", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = WordUtils.wrap("y*V e<Wi ;d1L.=", 2, "E_CFzB|Z$]", false);
      assertEquals("y*VE_CFzB|Z$]e<WiE_CFzB|Z$];d1L.=", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, (-1353));
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      WordUtils wordUtils0 = new WordUtils();
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("y*V e<Wi ;d1L.=");
      assertEquals("y*V e<Wi ;d1L.=", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = WordUtils.initials("rsD}");
      assertEquals("r", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = WordUtils.capitalize((String) null);
      assertNull(string0);
  }
}
