/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 14 22:52:42 GMT 2022
 */

package org.jfree.chart.block;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.SystemColor;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.ConvolveOp;
import java.awt.image.DirectColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.io.File;
import java.sql.Connection;
import java.sql.Statement;
import java.time.chrono.ChronoLocalDate;
import java.time.chrono.MinguoEra;
import java.util.Hashtable;
import java.util.Locale;
import java.util.TimeZone;
import java.util.Vector;
import javax.swing.JEditorPane;
import javax.swing.JInternalFrame;
import javax.swing.JLayeredPane;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;
import javax.swing.JTree;
import javax.swing.JViewport;
import javax.swing.plaf.basic.BasicTextPaneUI;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.JTextComponent;
import javax.swing.text.Style;
import javax.swing.text.StyleContext;
import javax.swing.tree.TreePath;
import javax.swing.tree.VariableHeightLayoutCache;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.chart.block.Block;
import org.jfree.chart.block.BlockBorder;
import org.jfree.chart.block.BlockContainer;
import org.jfree.chart.block.BorderArrangement;
import org.jfree.chart.block.CenterArrangement;
import org.jfree.chart.block.ColorBlock;
import org.jfree.chart.block.ColumnArrangement;
import org.jfree.chart.block.EmptyBlock;
import org.jfree.chart.block.LabelBlock;
import org.jfree.chart.block.LengthConstraintType;
import org.jfree.chart.block.RectangleConstraint;
import org.jfree.chart.util.HorizontalAlignment;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.Size2D;
import org.jfree.chart.util.UnitType;
import org.jfree.chart.util.VerticalAlignment;
import org.jfree.data.Range;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Millisecond;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.XYSeriesCollection;
import org.junit.runner.RunWith;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BorderArrangement_ESTest extends BorderArrangement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Graphics2D graphics2D0 = null;
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      blockContainer0.setArrangement(borderArrangement0);
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Range range0 = new Range((-6032.578280442348), (-6032.578280442348));
      Range.shift(range0, (-6031.9447196131), false);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      BlockContainer blockContainer1 = new BlockContainer();
      Range range0 = new Range(555.086, 555.086);
      Range range1 = Range.expand(range0, 0.0, 0.0);
      Range range2 = Range.expandToInclude(range1, 5209.919897074431);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(range2, range2);
      RectangleConstraint rectangleConstraint1 = blockContainer0.toContentConstraint(rectangleConstraint0);
      borderArrangement0.arrange(blockContainer1, (Graphics2D) null, rectangleConstraint1);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "8^eoS");
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      EmptyBlock emptyBlock0 = new EmptyBlock(329.3, 329.3);
      borderArrangement0.add(emptyBlock0, rectangleEdge0);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, 329.3);
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      xYSeriesCollection0.getDomainBounds(false);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeRR(blockContainer0, (Range) null, (Range) null, (Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, (-750.624543165));
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      blockContainer0.setMargin((-4625.2), 672.94392459113, (-4625.2), 0.0);
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 0.0);
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 3030.75426682935);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      CenterArrangement centerArrangement0 = new CenterArrangement();
      blockContainer0.setArrangement(centerArrangement0);
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, (-6031.9447196131));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      BorderArrangement borderArrangement0 = new BorderArrangement();
      EmptyBlock emptyBlock0 = new EmptyBlock(0.0, 0.0);
      borderArrangement0.add(emptyBlock0, rectangleEdge0);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(4128.826873281183, 4128.826873281183);
      borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.RANGE;
      Range range0 = new Range(1.0, Double.NEGATIVE_INFINITY);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((-1.0), range0, lengthConstraintType0, Double.POSITIVE_INFINITY, range0, lengthConstraintType0);
      rectangleConstraint0.toRangeHeight(range0);
      BlockContainer blockContainer1 = new BlockContainer();
      borderArrangement0.arrange(blockContainer1, (Graphics2D) null, rectangleConstraint0);
      borderArrangement0.arrangeNN(blockContainer1, (Graphics2D) null);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.RANGE;
      Range range0 = new Range(3951.51596739, 3951.51596739);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(3951.51596739, range0, lengthConstraintType0, 3951.51596739, range0, lengthConstraintType0);
      BlockContainer blockContainer1 = new BlockContainer();
      borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      BorderArrangement borderArrangement1 = new BorderArrangement();
      borderArrangement0.equals(borderArrangement1);
      Random.setNextRandom(1901);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      blockContainer0.setHeight((-616.71));
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Hashtable<Integer, MinguoEra> hashtable0 = new Hashtable<Integer, MinguoEra>();
      RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
      BlockContainer blockContainer1 = new BlockContainer();
      RectangleConstraint rectangleConstraint1 = blockContainer1.toContentConstraint(rectangleConstraint0);
      BlockContainer blockContainer2 = new BlockContainer();
      borderArrangement0.arrange(blockContainer2, (Graphics2D) null, rectangleConstraint1);
      borderArrangement0.arrange(blockContainer1, (Graphics2D) null, rectangleConstraint0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, (-6039.22253848806));
      Size2D size2D0 = new Size2D(252.53144, (-6039.22253848806));
      Range range0 = new Range((-3714.47729), Double.NaN);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      Range range1 = defaultMultiValueCategoryDataset0.getRangeBounds(true);
      Range range2 = Range.expandToInclude(range1, (-294.84));
      borderArrangement0.arrangeRR(blockContainer0, range2, range1, (Graphics2D) null);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Size2D size2D0 = borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, (-6039.22253848806));
      Size2D size2D1 = new Size2D(0.0, (-6039.22253848806));
      Range range0 = new Range((-6039.22253848806), (-6039.22253848806));
      Size2D size2D2 = borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
      assertFalse(size2D2.equals((Object)size2D0));
      
      RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
      borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset1 = new DefaultMultiValueCategoryDataset();
      Range range0 = defaultMultiValueCategoryDataset1.getRangeBounds(true);
      Range range1 = new Range((-6032.449142303111), (-6032.449142303111));
      borderArrangement0.arrangeRR(blockContainer0, range1, range0, (Graphics2D) null);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Size2D size2D0 = borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, (-6031.9447196131));
      assertEquals((-6031.9447196131), size2D0.width, 0.01);
      
      borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
      Range range0 = new Range((-6031.9447196131), (-6031.9447196131));
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, (-6039.22253848806));
      borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      BlockContainer blockContainer1 = new BlockContainer(borderArrangement0);
      blockContainer1.equals(blockContainer0);
      blockContainer1.equals(blockContainer0);
      // Undeclared exception!
      try { 
        borderArrangement0.add(blockContainer0, blockContainer1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.block.BlockContainer cannot be cast to org.jfree.chart.util.RectangleEdge
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
      BlockContainer blockContainer1 = new BlockContainer();
      RectangleConstraint rectangleConstraint1 = blockContainer1.toContentConstraint(rectangleConstraint0);
      borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint1);
      borderArrangement0.arrange(blockContainer1, (Graphics2D) null, rectangleConstraint1);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Size2D size2D0 = new Size2D();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      Range range0 = new Range(0.0, 0.0);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(5815.55, 1474.9409793007019);
      borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Size2D size2D0 = borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, (-6031.9447196131));
      assertEquals((-6031.9447196131), size2D0.width, 0.01);
      
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.NONE;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, (Range) null, lengthConstraintType0, 0.0, (Range) null, lengthConstraintType0);
      BlockContainer blockContainer1 = new BlockContainer();
      BlockContainer blockContainer2 = new BlockContainer(borderArrangement0);
      blockContainer2.arrange((Graphics2D) null, rectangleConstraint0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Graphics2D graphics2D0 = null;
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      blockContainer0.setArrangement(borderArrangement0);
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Range range0 = new Range((-6031.9447196131), 1.0);
      Range.shift(range0, (-6031.9447196131), false);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Graphics2D graphics2D0 = null;
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Range range0 = new Range((-6031.9447196131), 1.0);
      Range.shift(range0, (-6031.9447196131), false);
      borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, 27.0037);
      // Undeclared exception!
      try { 
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(4128.826873281183, 4128.826873281183);
      // Undeclared exception!
      try { 
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Graphics2D graphics2D0 = null;
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(691.4012015, (-1.0));
      borderArrangement0.arrangeFF(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      RectangleEdge rectangleEdge1 = RectangleEdge.LEFT;
      borderArrangement0.add(blockContainer0, (Object) null);
      BlockContainer blockContainer1 = new BlockContainer(borderArrangement0);
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 2777.123826);
      borderArrangement0.arrangeFF(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
      System.setCurrentTimeMillis(0L);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Hashtable<Integer, MinguoEra> hashtable0 = new Hashtable<Integer, MinguoEra>();
      RectangleEdge rectangleEdge1 = RectangleEdge.LEFT;
      JScrollPane jScrollPane0 = new JScrollPane();
      jScrollPane0.getColumnHeader();
      borderArrangement0.add(blockContainer0, (Object) null);
      BorderArrangement borderArrangement1 = new BorderArrangement();
      Range range0 = new Range((-630.3), (-1.188738478981431));
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range1 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(false);
      borderArrangement0.arrangeRR(blockContainer0, range0, range1, (Graphics2D) null);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Range range0 = new Range(0.0, 0.0);
      borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Graphics2D graphics2D0 = null;
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, 0.0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFF(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Graphics2D graphics2D0 = null;
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      String string0 = "t/Ph`J:pqc=.P#E.+S+";
      Hashtable<Integer, MinguoEra> hashtable0 = new Hashtable<Integer, MinguoEra>();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(974.64713177, 974.64713177);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFF(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, 0.0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, (-6031.9447196131));
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      Range range0 = new Range((-6031.9447196131), (-6031.9447196131));
      borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, (-6031.9447196131));
      borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      borderArrangement0.add(blockContainer0, (Object) null);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      Range range0 = defaultMultiValueCategoryDataset0.getRangeBounds(true);
      borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Range range0 = new Range(1411.5649, 1411.5649);
      JEditorPane jEditorPane0 = new JEditorPane("5'w-!e'A", "5'w-!e'A");
      Color color0 = jEditorPane0.getCaretColor();
      ColorBlock colorBlock0 = new ColorBlock(color0, 3320.248609, 1411.5649);
      borderArrangement0.add(colorBlock0, (Object) null);
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      defaultTableXYDataset0.getDomainBounds(true);
      borderArrangement0.arrangeRR((BlockContainer) null, range0, range0, (Graphics2D) null);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, (-6031.9447196131));
      borderArrangement0.add(blockContainer0, (Object) null);
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      defaultTableXYDataset0.getDomainBounds(true);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeRR(blockContainer0, (Range) null, (Range) null, (Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Range range0 = new Range(0.0, (-1075.592521353));
      borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      Range range0 = defaultMultiValueCategoryDataset0.getRangeBounds(true);
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, (-6031.9447196131));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      EmptyBlock emptyBlock0 = new EmptyBlock(0.5, Double.POSITIVE_INFINITY);
      borderArrangement0.add(emptyBlock0, (Object) null);
      Size2D size2D0 = borderArrangement0.arrangeNN((BlockContainer) null, (Graphics2D) null);
      assertEquals(0.5, size2D0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      Range range0 = defaultMultiValueCategoryDataset0.getRangeBounds(false);
      Size2D size2D0 = new Size2D();
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.NONE;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, range0, lengthConstraintType0, Double.NaN, range0, lengthConstraintType0);
      RectangleConstraint rectangleConstraint1 = blockContainer0.toContentConstraint(rectangleConstraint0);
      borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint1);
      Object object0 = new Object();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      borderArrangement1.add((Block) null, (Object) null);
      BorderArrangement borderArrangement2 = new BorderArrangement();
      // Undeclared exception!
      try { 
        borderArrangement0.add((Block) null, borderArrangement2);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.block.BorderArrangement cannot be cast to org.jfree.chart.util.RectangleEdge
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, (-6031.9447196131));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      borderArrangement0.add(blockContainer0, (Object) null);
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      JLayeredPane jLayeredPane0 = jInternalFrame0.getLayeredPane();
      JScrollPane jScrollPane0 = new JScrollPane(jLayeredPane0);
      jScrollPane0.getColumnHeader();
      borderArrangement0.equals((Object) null);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.5, 0.0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Font font0 = Font.decode("5x");
      Font font1 = font0.deriveFont(2958475);
      LabelBlock labelBlock0 = new LabelBlock("", font1);
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Graphics2D graphics2D0 = null;
      Range range0 = new Range(2958475, 805.6266232098787);
      Range range1 = Range.expand(range0, 707.68752, 707.68752);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.NONE;
      LengthConstraintType lengthConstraintType1 = LengthConstraintType.RANGE;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(707.68752, range1, lengthConstraintType0, 707.68752, range1, lengthConstraintType1);
      // Undeclared exception!
      try { 
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      Hour hour0 = new Hour();
      Range range0 = new Range(0, (-1228.710913));
      Range range1 = Range.expand(range0, 0, Double.POSITIVE_INFINITY);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.NONE;
      LengthConstraintType lengthConstraintType1 = LengthConstraintType.FIXED;
      LengthConstraintType lengthConstraintType2 = LengthConstraintType.NONE;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((-1228.710913), range1, lengthConstraintType1, 1.0, range1, lengthConstraintType2);
      borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      BorderArrangement borderArrangement1 = new BorderArrangement();
      Size2D size2D0 = borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        borderArrangement0.add(blockContainer0, size2D0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.util.Size2D cannot be cast to org.jfree.chart.util.RectangleEdge
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Graphics2D graphics2D0 = null;
      BorderArrangement borderArrangement1 = new BorderArrangement();
      borderArrangement1.equals((Object) null);
      BlockContainer blockContainer0 = new BlockContainer();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, (Range) null);
      blockContainer0.toContentConstraint(rectangleConstraint0);
      borderArrangement1.add(blockContainer0, (Object) null);
      RectangleConstraint rectangleConstraint1 = new RectangleConstraint((Range) null, (-3382.4538));
      RectangleConstraint rectangleConstraint2 = new RectangleConstraint(1305.35, (Range) null);
      BlockContainer blockContainer1 = new BlockContainer();
      RectangleConstraint rectangleConstraint3 = new RectangleConstraint((Range) null, (Range) null);
      borderArrangement1.arrangeNN(blockContainer1, (Graphics2D) null);
      BlockContainer blockContainer2 = new BlockContainer();
      Vector<ChronoLocalDate> vector0 = new Vector<ChronoLocalDate>();
      JTree jTree0 = new JTree(vector0);
      VariableHeightLayoutCache variableHeightLayoutCache0 = new VariableHeightLayoutCache();
      variableHeightLayoutCache0.getPathForRow(365);
      jTree0.getPathBounds((TreePath) null);
      // Undeclared exception!
      try { 
        blockContainer2.trimMargin((Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      borderArrangement0.add(blockContainer0, (Object) null);
      Size2D size2D0 = borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
      assertEquals(0.0, size2D0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      RectangleEdge.opposite(rectangleEdge0);
      RectangleEdge rectangleEdge1 = RectangleEdge.RIGHT;
      RectangleEdge rectangleEdge2 = RectangleEdge.LEFT;
      borderArrangement0.add(blockContainer0, rectangleEdge2);
      AffineTransform affineTransform0 = new AffineTransform(0.0, (-1138.51789490011), (-1138.51789490011), (-1138.51789490011), 0.0, 0.0);
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, 2);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      JViewport jViewport0 = new JViewport();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, jViewport0);
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      DirectColorModel directColorModel0 = new DirectColorModel(2, 2, 2, 1);
      // Undeclared exception!
      try { 
        colorConvertOp0.createCompatibleDestImage((BufferedImage) null, directColorModel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.ColorConvertOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      borderArrangement0.add((Block) null, rectangleEdge0);
      assertEquals("RectangleEdge.LEFT", rectangleEdge0.toString());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      Hour hour0 = new Hour();
      BorderArrangement borderArrangement2 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      RectangleEdge.opposite(rectangleEdge0);
      RectangleEdge rectangleEdge1 = RectangleEdge.RIGHT;
      borderArrangement2.add(blockContainer0, rectangleEdge1);
      assertFalse(borderArrangement2.equals((Object)borderArrangement1));
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      Range range0 = defaultMultiValueCategoryDataset0.getRangeBounds(false);
      borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset(0.0);
      Range range1 = Range.expand(range0, 0.0, 0.0);
      Range range2 = Range.combine(range0, range1);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(range2, 0.0);
      RectangleConstraint rectangleConstraint1 = new RectangleConstraint((-782.854049), range0);
      Size2D size2D0 = blockContainer0.arrange((Graphics2D) null, rectangleConstraint1);
      borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
      Range range3 = Range.expandToInclude(range1, (-782.854049));
      Size2D size2D1 = borderArrangement0.arrangeRR(blockContainer0, range3, range2, (Graphics2D) null);
      assertFalse(size2D1.equals((Object)size2D0));
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Object object0 = new Object();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      RectangleEdge rectangleEdge1 = RectangleEdge.opposite(rectangleEdge0);
      borderArrangement0.add(blockContainer0, rectangleEdge1);
      assertFalse(borderArrangement0.equals((Object)borderArrangement1));
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add((Block) null, rectangleEdge0);
      assertEquals("RectangleEdge.RIGHT", rectangleEdge0.toString());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      borderArrangement0.add((Block) null, rectangleEdge0);
      assertEquals("RectangleEdge.BOTTOM", rectangleEdge0.toString());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Graphics2D graphics2D0 = null;
      BorderArrangement borderArrangement1 = new BorderArrangement();
      borderArrangement1.equals((Object) null);
      BlockContainer blockContainer0 = new BlockContainer();
      Hour hour0 = new Hour();
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset(hour0);
      Locale locale0 = Locale.CHINESE;
      Locale locale1 = locale0.stripExtensions();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(hour0.DEFAULT_TIME_ZONE, locale1);
      timeTableXYDataset0.getDomainBounds(false);
      Range.expandToInclude((Range) null, 23);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.NONE;
      LengthConstraintType lengthConstraintType1 = LengthConstraintType.FIXED;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(23, (Range) null, lengthConstraintType1, 3281.4, (Range) null, lengthConstraintType1);
      borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      String string0 = null;
      MockFile mockFile0 = new MockFile("");
      // Undeclared exception!
      try { 
        Font.createFont(23, (File) mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // font format not recognized
         //
         verifyException("java.awt.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.arrangeNN((BlockContainer) null, (Graphics2D) null);
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(false);
      Range range0 = new Range(0.0, 0.0);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(range0, 0.0);
      RectangleConstraint rectangleConstraint1 = new RectangleConstraint((-951.6), range0);
      borderArrangement0.arrangeFF((BlockContainer) null, (Graphics2D) null, rectangleConstraint1);
      RectangleConstraint rectangleConstraint2 = new RectangleConstraint((-951.6), range0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFR((BlockContainer) null, (Graphics2D) null, rectangleConstraint2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      Range range0 = defaultMultiValueCategoryDataset0.getRangeBounds(false);
      borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
      borderArrangement0.clear();
      Range range1 = Range.shift(range0, 0.0, true);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((-1.0), range1);
      defaultMultiValueCategoryDataset0.equals(blockContainer0);
      borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.FIXED;
      Range range2 = defaultMultiValueCategoryDataset0.getRangeBounds(true);
      RectangleConstraint rectangleConstraint1 = new RectangleConstraint((-1.0), range0, lengthConstraintType0, (-2.147483648E9), range2, lengthConstraintType0);
      borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint1);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle("", styleContext_NamedStyle0);
      Style style0 = jTextPane0.addStyle("u/`EQ1W", styleContext_NamedStyle1);
      Font font0 = defaultStyledDocument0.getFont(style0);
      SystemColor systemColor0 = SystemColor.textHighlight;
      LabelBlock labelBlock0 = new LabelBlock(".hHv", font0, systemColor0);
      BasicTextPaneUI basicTextPaneUI0 = new BasicTextPaneUI();
      // Undeclared exception!
      try { 
        basicTextPaneUI0.modelToView((JTextComponent) jTextPane0, (-1619));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.basic.BasicTextUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Font font0 = Font.decode("5.");
      Font font1 = font0.deriveFont(2958465);
      LabelBlock labelBlock0 = new LabelBlock("TimePeriodAnchor unknown.", font1);
      BlockContainer blockContainer0 = new BlockContainer();
      Graphics2D graphics2D0 = null;
      Hour hour0 = new Hour();
      Millisecond millisecond0 = new Millisecond();
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset(millisecond0);
      defaultBoxAndWhiskerXYDataset0.getRangeBounds(true);
      Range.combine((Range) null, (Range) null);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, 0.0);
      RectangleConstraint rectangleConstraint1 = new RectangleConstraint((-2169.47646), (Range) null);
      // Undeclared exception!
      try { 
        blockContainer0.arrange((Graphics2D) null, rectangleConstraint1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(1669.83973922364, (Range) null);
      // Undeclared exception!
      try { 
        blockContainer0.arrange((Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.equals((Object) null);
      BlockContainer blockContainer0 = new BlockContainer();
      Hour hour0 = new Hour();
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset(hour0);
      defaultBoxAndWhiskerXYDataset0.getRangeBounds(false);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, 0);
      RectangleConstraint rectangleConstraint1 = new RectangleConstraint((Range) null, (Range) null);
      // Undeclared exception!
      try { 
        blockContainer0.arrange((Graphics2D) null, rectangleConstraint1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(false);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(1669.83973922364, range0);
      Size2D size2D0 = blockContainer0.arrange((Graphics2D) null, rectangleConstraint0);
      assertEquals(0.0, size2D0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      String string0 = "TimePeriodAnchor unknown.";
      Font font0 = Font.decode("5.");
      Font font1 = font0.deriveFont(2958465);
      LabelBlock labelBlock0 = new LabelBlock("TimePeriodAnchor unknown.", font1);
      Rectangle2D rectangle2D0 = null;
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Range range0 = new Range(2958465, 805.6266232098787);
      Range range1 = Range.shift(range0, 805.6266232098787, true);
      Range range2 = Range.expandToInclude(range1, (-1.0));
      Range range3 = Range.shift(range2, 707.6875202);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.NONE;
      LengthConstraintType lengthConstraintType1 = LengthConstraintType.FIXED;
      Range.shift(range1, (-2.147483648E9), true);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(1.0, range1);
      borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      RectangleConstraint rectangleConstraint1 = new RectangleConstraint(707.6875202, range3, lengthConstraintType0, 707.6875202, range3, lengthConstraintType1);
      // Undeclared exception!
      try { 
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      boolean boolean0 = borderArrangement0.equals(borderArrangement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.arrangeNN((BlockContainer) null, (Graphics2D) null);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFN((BlockContainer) null, (Graphics2D) null, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      RectangleEdge rectangleEdge1 = RectangleEdge.TOP;
      borderArrangement0.add((Block) null, rectangleEdge1);
      assertEquals("RectangleEdge.TOP", rectangleEdge1.toString());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      Range range0 = defaultMultiValueCategoryDataset0.getRangeBounds(true);
      borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
      borderArrangement0.clear();
      BlockContainer blockContainer1 = new BlockContainer(borderArrangement0);
      borderArrangement0.arrangeFN(blockContainer1, (Graphics2D) null, 1989.5);
      Object object0 = new Object();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      assertTrue(borderArrangement1.equals((Object)borderArrangement0));
      
      BlockContainer blockContainer2 = new BlockContainer();
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.RANGE;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(1989.5, range0, lengthConstraintType0, 2.0, range0, lengthConstraintType0);
      RectangleConstraint rectangleConstraint1 = blockContainer2.toContentConstraint(rectangleConstraint0);
      Size2D size2D0 = borderArrangement0.arrangeFF(blockContainer2, (Graphics2D) null, rectangleConstraint1);
      assertEquals(2.0, size2D0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, (Range) null);
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Graphics2D graphics2D0 = null;
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFF(blockContainer0, (Graphics2D) null, (RectangleConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Graphics2D graphics2D0 = null;
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      Range range0 = defaultMultiValueCategoryDataset0.getRangeBounds(true);
      borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
      borderArrangement0.clear();
      BlockContainer blockContainer1 = new BlockContainer(borderArrangement0);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.NONE;
      LengthConstraintType lengthConstraintType1 = LengthConstraintType.FIXED;
      LengthConstraintType lengthConstraintType2 = LengthConstraintType.NONE;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, range0, lengthConstraintType2, 0.0, range0, lengthConstraintType2);
      borderArrangement0.arrange(blockContainer1, (Graphics2D) null, rectangleConstraint0);
      String string0 = null;
      // Undeclared exception!
      try { 
        Font.getFont((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Font font0 = Font.decode("");
      font0.deriveFont(1);
      LabelBlock labelBlock0 = new LabelBlock("TimePeriodAnchor unknown.", font0);
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Range range0 = new Range(805.6266232098787, 1);
      Range range1 = Range.shift(range0, (-2655.58412645171), true);
      Range range2 = Range.expandToInclude(range1, (-3415.645919822423));
      Range.shift(range0, (-2655.58412645171));
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.NONE;
      LengthConstraintType lengthConstraintType1 = LengthConstraintType.FIXED;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(1014.0515710342733, 805.6266232098787);
      blockContainer0.arrange((Graphics2D) null, rectangleConstraint0);
      RectangleConstraint rectangleConstraint1 = new RectangleConstraint(Double.NaN, range2, lengthConstraintType1, Double.NaN, range2, lengthConstraintType0);
      borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint1);
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      // Undeclared exception!
      try { 
        borderArrangement0.add(labelBlock0, integer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to org.jfree.chart.util.RectangleEdge
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      BorderArrangement borderArrangement1 = new BorderArrangement();
      Range range0 = new Range((-630.3), (-630.3));
      borderArrangement0.arrangeRR(blockContainer0, range0, range0, (Graphics2D) null);
      assertFalse(borderArrangement0.equals((Object)borderArrangement1));
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeRR(blockContainer0, (Range) null, (Range) null, (Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.arrangeNN((BlockContainer) null, (Graphics2D) null);
      Range range0 = new Range(0.0, 0.0);
      Size2D size2D0 = borderArrangement0.arrangeRR((BlockContainer) null, range0, range0, (Graphics2D) null);
      assertEquals(0.0, size2D0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Font font0 = Font.decode("5.");
      font0.deriveFont(2958465);
      LabelBlock labelBlock0 = new LabelBlock("1");
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Graphics2D graphics2D0 = null;
      Range range0 = new Range(2958465, (-983.49351115));
      Range range1 = Range.shift(range0, 0.0, true);
      Range.expandToInclude(range0, 665.2615198506155);
      Range.shift(range0, (double) 2958465);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.NONE;
      LengthConstraintType lengthConstraintType1 = LengthConstraintType.FIXED;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((-1.0), range1, lengthConstraintType1, 0.0, range1, lengthConstraintType0);
      borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      // Undeclared exception!
      try { 
        labelBlock0.trimMargin((Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add(blockContainer0, (Object) null);
      Size2D size2D0 = borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, (-6031.9447196131));
      assertEquals((-6031.9447196131), size2D0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Font font0 = Font.decode("");
      font0.deriveFont(1);
      LabelBlock labelBlock0 = new LabelBlock("TimePeriodAnchor unknown.", font0);
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Graphics2D graphics2D0 = null;
      Range range0 = new Range(805.6266232098787, 1);
      Range range1 = Range.shift(range0, (-2655.58412645171), true);
      Range range2 = Range.expandToInclude(range1, (-3415.645919822423));
      Range.shift(range0, (-2655.58412645171));
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.NONE;
      LengthConstraintType lengthConstraintType1 = LengthConstraintType.FIXED;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(Double.NaN, range2, lengthConstraintType1, Double.NaN, range2, lengthConstraintType0);
      borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      // Undeclared exception!
      try { 
        labelBlock0.trimMargin((Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      Size2D size2D0 = borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
      assertEquals(0.0, size2D0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      borderArrangement0.arrangeNN((BlockContainer) null, (Graphics2D) null);
      TimeZone.getDefault();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      assertTrue(borderArrangement1.equals((Object)borderArrangement0));
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      Size2D size2D0 = borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
      assertEquals(0.0, size2D0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      BlockContainer blockContainer1 = new BlockContainer(borderArrangement0);
      Range range0 = new Range(1989.5425443815752, 1989.5425443815752);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(range0, 1989.5425443815752);
      // Undeclared exception!
      try { 
        blockContainer0.arrange((Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, (Range) null);
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      // Undeclared exception!
      try { 
        blockContainer0.arrange((Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Object object0 = new Object();
      boolean boolean0 = borderArrangement0.equals(object0);
      assertFalse(boolean0);
      
      BlockContainer blockContainer0 = new BlockContainer();
      Hour hour0 = new Hour();
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset(hour0);
      defaultBoxAndWhiskerXYDataset0.getRangeBounds(true);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, (-2.147483648E9));
      // Undeclared exception!
      try { 
        blockContainer0.arrange((Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Object object0 = new Object();
      borderArrangement0.equals(object0);
      BlockContainer blockContainer0 = new BlockContainer();
      Hour.parseHour("Pba\"l");
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset((Comparable) null);
      defaultBoxAndWhiskerXYDataset0.getRangeBounds(true);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, 0);
      Size2D size2D0 = borderArrangement0.arrangeFF(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      assertEquals(0.0, size2D0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer1 = new BlockContainer(borderArrangement0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, (RectangleConstraint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'c' argument.
         //
         verifyException("org.jfree.chart.block.AbstractBlock", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Graphics2D graphics2D0 = null;
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(4128.826873281183, (-5128.6471));
      BlockContainer blockContainer1 = new BlockContainer(borderArrangement0);
      blockContainer1.equals(blockContainer0);
      BlockContainer blockContainer2 = new BlockContainer();
      blockContainer2.equals(blockContainer0);
      RectangleConstraint rectangleConstraint1 = blockContainer2.toContentConstraint(rectangleConstraint0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrange(blockContainer1, (Graphics2D) null, rectangleConstraint1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Graphics2D graphics2D0 = null;
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 0.0);
      Object object0 = new Object();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      borderArrangement0.equals(borderArrangement1);
      System.setCurrentTimeMillis(1561L);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      JDBCXYDataset jDBCXYDataset0 = null;
      try {
        jDBCXYDataset0 = new JDBCXYDataset(connection0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.jdbc.JDBCXYDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Object object0 = new Object();
      borderArrangement0.equals(borderArrangement0);
      Object object1 = new Object();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      assertTrue(borderArrangement1.equals((Object)borderArrangement0));
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      boolean boolean0 = borderArrangement0.equals(borderArrangement1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = null;
      Graphics2D graphics2D0 = null;
      BlockContainer blockContainer1 = new BlockContainer(borderArrangement0);
      BlockBorder blockBorder0 = new BlockBorder();
      blockContainer1.setFrame(blockBorder0);
      borderArrangement0.arrangeFN(blockContainer1, (Graphics2D) null, 0.0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFR((BlockContainer) null, (Graphics2D) null, (RectangleConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Object object0 = new Object();
      borderArrangement0.equals(object0);
      BlockContainer blockContainer0 = new BlockContainer();
      Hour.parseHour("Pba\"l");
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset((Comparable) null);
      defaultBoxAndWhiskerXYDataset0.getRangeBounds(true);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, (-2.147483648E9));
      Size2D size2D0 = borderArrangement0.arrangeFF(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      assertEquals((-2.147483648E9), size2D0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Graphics2D graphics2D0 = null;
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, 0.0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Range range0 = new Range(1411.5649, 1411.5649);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.NONE;
      LengthConstraintType lengthConstraintType1 = LengthConstraintType.FIXED;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(1411.5649, range0, lengthConstraintType0, 1411.5649, range0, lengthConstraintType1);
      BlockContainer blockContainer0 = new BlockContainer();
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      String string0 = "TimePeriodAnchor unknown.";
      Font font0 = Font.decode("5.");
      Font font1 = font0.deriveFont(2958465);
      LabelBlock labelBlock0 = new LabelBlock("TimePeriodAnchor unknown.", font1);
      Rectangle2D rectangle2D0 = null;
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Range range0 = new Range(2958465, 805.6266232098787);
      Range range1 = Range.shift(range0, 805.6266232098787, true);
      Range range2 = Range.expandToInclude(range1, (-1.0));
      Range range3 = Range.shift(range2, 707.6875202);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.NONE;
      LengthConstraintType lengthConstraintType1 = LengthConstraintType.FIXED;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(707.6875202, range3, lengthConstraintType0, 707.6875202, range3, lengthConstraintType1);
      // Undeclared exception!
      try { 
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      ColumnArrangement columnArrangement0 = new ColumnArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      Graphics2D graphics2D0 = null;
      Range range0 = new Range(707.68752, 605.06579);
      Range.expand(range0, 805.6266232098787, 605.06579);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.NONE;
      LengthConstraintType lengthConstraintType1 = LengthConstraintType.RANGE;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, range0, lengthConstraintType1, 805.6266232098787, range0, lengthConstraintType0);
      BorderArrangement borderArrangement1 = new BorderArrangement();
      // Undeclared exception!
      try { 
        borderArrangement1.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      Size2D size2D0 = blockContainer0.arrange((Graphics2D) null);
      assertEquals(0.0, size2D0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Range range0 = new Range(1411.5649, 1411.5649);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.NONE;
      LengthConstraintType lengthConstraintType1 = LengthConstraintType.RANGE;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(1411.5649, range0, lengthConstraintType0, 1411.5649, range0, lengthConstraintType1);
      BlockContainer blockContainer0 = new BlockContainer();
      // Undeclared exception!
      try { 
        blockContainer0.arrange((Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      JScrollPane jScrollPane0 = new JScrollPane();
      jScrollPane0.getColumnHeader();
      borderArrangement0.add(blockContainer0, (Object) null);
      borderArrangement0.equals((Object) null);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection((TimeSeries) null);
      timeSeriesCollection0.getDomainBounds(false);
      ConvolveOp convolveOp0 = new ConvolveOp((Kernel) null);
      double double0 = 0.0;
      double double1 = (-1865.2877227);
      // Undeclared exception!
      try { 
        Range.expand((Range) null, (-1865.2877227), Double.NEGATIVE_INFINITY);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.add((Block) null, (Object) null);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Object object0 = new Object();
      BorderArrangement borderArrangement1 = new BorderArrangement();
      Object object1 = new Object();
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      assertFalse(borderArrangement0.equals((Object)borderArrangement1));
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, (RectangleConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      EmptyBlock emptyBlock0 = new EmptyBlock(Double.NaN, Double.NaN);
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      blockContainer0.add((Block) emptyBlock0, (Object) rectangleEdge0);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(Double.NaN, (Range) null);
      // Undeclared exception!
      try { 
        blockContainer0.arrange((Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, (-6031.9447196131));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, (-6031.9447196131));
      System.setCurrentTimeMillis(0L);
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      assertEquals(0.0, blockContainer0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = null;
      Graphics2D graphics2D0 = null;
      borderArrangement0.clear();
      BlockContainer blockContainer1 = new BlockContainer(borderArrangement0);
      borderArrangement0.arrangeFN(blockContainer1, (Graphics2D) null, 0.0);
      // Undeclared exception!
      try { 
        borderArrangement0.arrangeFR((BlockContainer) null, (Graphics2D) null, (RectangleConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Size2D size2D0 = borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 1989.5425443815752);
      assertEquals(0.0, size2D0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      Font font0 = Font.decode("5.");
      Font font1 = font0.deriveFont(2958465);
      LabelBlock labelBlock0 = new LabelBlock("TimePeriodAnchor unknown.", font1);
      // Undeclared exception!
      try { 
        borderArrangement0.add(labelBlock0, "TimePeriodAnchor unknown.");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.jfree.chart.util.RectangleEdge
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      // Undeclared exception!
      try { 
        borderArrangement0.add(blockContainer0, blockContainer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.block.BlockContainer cannot be cast to org.jfree.chart.util.RectangleEdge
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.clear();
      BlockContainer blockContainer0 = null;
      int int0 = 0;
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(0);
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: 0
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.add(blockContainer0, rectangleEdge0);
      BorderArrangement borderArrangement1 = new BorderArrangement();
      boolean boolean0 = borderArrangement0.equals(borderArrangement1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer();
      RectangleConstraint rectangleConstraint0 = null;
      borderArrangement0.equals((Object) null);
      UnitType unitType0 = UnitType.ABSOLUTE;
      // Undeclared exception!
      try { 
        blockContainer0.trimPadding((Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      VerticalAlignment verticalAlignment0 = VerticalAlignment.BOTTOM;
      ColumnArrangement columnArrangement0 = new ColumnArrangement((HorizontalAlignment) null, verticalAlignment0, 0.0, 0.0);
      BlockContainer blockContainer0 = new BlockContainer(columnArrangement0);
      int int0 = (-5);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)0;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-741), (-5), byteArray0, 0, true, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }
}
