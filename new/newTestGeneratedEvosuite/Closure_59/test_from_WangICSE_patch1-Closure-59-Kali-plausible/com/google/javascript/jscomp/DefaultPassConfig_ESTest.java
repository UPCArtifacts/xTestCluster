/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 15 14:51:35 GMT 2022
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AnonymousFunctionNamingPolicy;
import com.google.javascript.jscomp.CheckLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.CompilerPass;
import com.google.javascript.jscomp.CrossModuleMethodMotion;
import com.google.javascript.jscomp.DefaultPassConfig;
import com.google.javascript.jscomp.FunctionNames;
import com.google.javascript.jscomp.GlobalNamespace;
import com.google.javascript.jscomp.HotSwapCompilerPass;
import com.google.javascript.jscomp.LightweightMessageFormatter;
import com.google.javascript.jscomp.LoggerErrorManager;
import com.google.javascript.jscomp.NameAnonymousFunctionsMapped;
import com.google.javascript.jscomp.PassConfig;
import com.google.javascript.jscomp.PassFactory;
import com.google.javascript.jscomp.VariableMap;
import com.google.javascript.rhino.Node;
import java.io.File;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import java.util.logging.Logger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultPassConfig_ESTest extends DefaultPassConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      File file0 = MockFile.createTempFile("RANGE_ERROR_FUNCTION_TYPE", (String) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      Compiler compiler0 = new Compiler(mockPrintStream0);
      DefaultPassConfig.GlobalTypeResolver defaultPassConfig_GlobalTypeResolver0 = defaultPassConfig0.new GlobalTypeResolver(compiler0);
      Node node0 = Node.newString(0, "");
      // Undeclared exception!
      try { 
        defaultPassConfig_GlobalTypeResolver0.process(node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      // Undeclared exception!
      try { 
        defaultPassConfig0.setIntermediateState((PassConfig.State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.DefaultPassConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig((CompilerOptions) null);
      // Undeclared exception!
      try { 
        defaultPassConfig0.getOptimizations();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.DefaultPassConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      DefaultPassConfig defaultPassConfig0 = compiler0.ensureDefaultPassConfig();
      // Undeclared exception!
      try { 
        defaultPassConfig0.getChecks();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.DefaultPassConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        DefaultPassConfig.getAdditionalReplacements((CompilerOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.DefaultPassConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      Map<String, Node> map0 = DefaultPassConfig.getAdditionalReplacements(compilerOptions0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      compilerOptions0.markAsCompiled = true;
      Map<String, Node> map0 = DefaultPassConfig.getAdditionalReplacements(compilerOptions0);
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.checkControlFlow;
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        defaultPassConfig_HotSwapPassFactory0.create(compiler0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      Compiler compiler0 = new Compiler();
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.suspiciousCode;
      // Undeclared exception!
      try { 
        defaultPassConfig_HotSwapPassFactory0.create(compiler0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy0 = AnonymousFunctionNamingPolicy.UNMAPPED;
      compilerOptions0.anonymousFunctionNaming = anonymousFunctionNamingPolicy0;
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertEquals(12, list0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      compilerOptions0.setChainCalls(true);
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertEquals(12, list0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      compilerOptions0.closurePass = true;
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertEquals(13, list0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      CheckLevel checkLevel0 = CheckLevel.ERROR;
      compilerOptions0.setCheckShadowVars(checkLevel0);
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      List<PassFactory> list0 = defaultPassConfig0.getChecks();
      assertEquals(5, list0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      compilerOptions0.closurePass = true;
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      List<PassFactory> list0 = defaultPassConfig0.getChecks();
      assertEquals(7, list0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      LightweightMessageFormatter lightweightMessageFormatter0 = LightweightMessageFormatter.withoutSource();
      Logger logger0 = Logger.getLogger("gatherRawExports");
      LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(lightweightMessageFormatter0, logger0);
      Compiler compiler0 = new Compiler(loggerErrorManager0);
      DefaultPassConfig defaultPassConfig0 = compiler0.ensureDefaultPassConfig();
      TreeMap<String, Integer> treeMap0 = new TreeMap<String, Integer>();
      CrossModuleMethodMotion.IdGenerator crossModuleMethodMotion_IdGenerator0 = new CrossModuleMethodMotion.IdGenerator();
      NameAnonymousFunctionsMapped nameAnonymousFunctionsMapped0 = new NameAnonymousFunctionsMapped(compiler0);
      VariableMap variableMap0 = nameAnonymousFunctionsMapped0.getFunctionMap();
      FunctionNames functionNames0 = new FunctionNames(compiler0);
      PassConfig.State passConfig_State0 = new PassConfig.State(treeMap0, compilerOptions0.stripNameSuffixes, crossModuleMethodMotion_IdGenerator0, variableMap0, variableMap0, variableMap0, variableMap0, functionNames0, "");
      defaultPassConfig0.setIntermediateState(passConfig_State0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      PassConfig.State passConfig_State0 = defaultPassConfig0.getIntermediateState();
      defaultPassConfig0.setIntermediateState(passConfig_State0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.checkControlStructures;
      Compiler compiler0 = new Compiler();
      HotSwapCompilerPass hotSwapCompilerPass0 = defaultPassConfig_HotSwapPassFactory0.getHotSwapPass(compiler0);
      assertNotNull(hotSwapCompilerPass0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      Compiler compiler0 = new Compiler();
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.checkProvides;
      // Undeclared exception!
      try { 
        defaultPassConfig_HotSwapPassFactory0.getHotSwapPass(compiler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.checkRequires;
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        defaultPassConfig_HotSwapPassFactory0.create(compiler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      Compiler compiler0 = new Compiler();
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.closureGoogScopeAliases;
      CompilerPass compilerPass0 = defaultPassConfig_HotSwapPassFactory0.create(compiler0);
      assertNotNull(compilerPass0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      Compiler compiler0 = new Compiler();
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.checkVars;
      // Undeclared exception!
      try { 
        defaultPassConfig_HotSwapPassFactory0.create(compiler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      Compiler compiler0 = new Compiler();
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.checkVariableReferences;
      HotSwapCompilerPass hotSwapCompilerPass0 = defaultPassConfig_HotSwapPassFactory0.getHotSwapPass(compiler0);
      assertNotNull(hotSwapCompilerPass0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      Compiler compiler0 = new Compiler();
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.inferJsDocInfo;
      HotSwapCompilerPass hotSwapCompilerPass0 = defaultPassConfig_HotSwapPassFactory0.getHotSwapPass(compiler0);
      // Undeclared exception!
      try { 
        compiler0.process(hotSwapCompilerPass0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      Compiler compiler0 = new Compiler();
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.resolveTypes;
      HotSwapCompilerPass hotSwapCompilerPass0 = defaultPassConfig_HotSwapPassFactory0.getHotSwapPass(compiler0);
      // Undeclared exception!
      try { 
        compiler0.process(hotSwapCompilerPass0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.DefaultPassConfig$GlobalTypeResolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      Compiler compiler0 = new Compiler();
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.checkAccessControls;
      // Undeclared exception!
      try { 
        defaultPassConfig_HotSwapPassFactory0.create(compiler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      Compiler compiler0 = new Compiler();
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.closurePrimitives;
      HotSwapCompilerPass hotSwapCompilerPass0 = defaultPassConfig_HotSwapPassFactory0.getHotSwapPass(compiler0);
      // Undeclared exception!
      try { 
        compiler0.process(hotSwapCompilerPass0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL COMPILER ERROR.
         // Please report this problem.
         // null
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      CompilerOptions compilerOptions0 = new CompilerOptions();
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.inferTypes;
      HotSwapCompilerPass hotSwapCompilerPass0 = defaultPassConfig_HotSwapPassFactory0.getHotSwapPass(compiler0);
      // Undeclared exception!
      try { 
        compiler0.process(hotSwapCompilerPass0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      Compiler compiler0 = new Compiler();
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.checkTypes;
      HotSwapCompilerPass hotSwapCompilerPass0 = defaultPassConfig_HotSwapPassFactory0.getHotSwapPass(compiler0);
      // Undeclared exception!
      try { 
        compiler0.process(hotSwapCompilerPass0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      GlobalNamespace globalNamespace0 = defaultPassConfig0.getGlobalNamespace();
      assertNull(globalNamespace0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      Compiler compiler0 = new Compiler();
      DefaultPassConfig.GlobalTypeResolver defaultPassConfig_GlobalTypeResolver0 = defaultPassConfig0.new GlobalTypeResolver(compiler0);
      // Undeclared exception!
      try { 
        defaultPassConfig_GlobalTypeResolver0.hotSwapScript((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }
}
