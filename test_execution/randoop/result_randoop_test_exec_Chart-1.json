{
    "bugid": "Chart-1",
    "results": [
        {
            "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesAPI",
            "date": "2021-11-23T01:24:02.014596",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/DynaMoth/Chart/patch1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 63.19
        },
        {
            "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesAPI",
            "date": "2021-11-23T01:25:05.206059",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Dcorrect/Avatar/Chart/patch1-Chart-1-Avatar.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.72
        },
        {
            "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesAPI",
            "date": "2021-11-23T01:26:07.930594",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jMutRepair/Chart/patch1-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.56
        },
        {
            "patch": "/Patches/patchesAPI/Doverfitting/jGenProg/Chart/patch1-Chart-1-jGenProg-plausible.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesAPI",
            "date": "2021-11-23T01:27:10.494670",
            "project_checked": "ok",
            "compiledProjectModified": "no",
            "patchApplied": "no",
            "arrive_end": "no",
            "patched_project_pass_all_test": "no"
        },
        {
            "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesAPI",
            "date": "2021-11-23T01:27:24.547330",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/Cardumen/Chart/patch1-Chart-1-Cardumen-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.54
        },
        {
            "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesAPI",
            "date": "2021-11-23T01:28:27.087874",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesAPI/Doverfitting/jKali/Chart/patch1-Chart-1-jKali-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.75
        },
        {
            "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesDRR",
            "date": "2021-11-23T01:29:29.835795",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/Jaid/Chart/patch1-Chart-1-Jaid.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.9
        },
        {
            "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesDRR",
            "date": "2021-11-23T01:30:32.742420",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Dcorrect/SequenceR/Chart/patch1-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.26
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesDRR",
            "date": "2021-11-23T01:31:35.009310",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch2-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.83
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesDRR",
            "date": "2021-11-23T01:32:37.837743",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch1-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.04
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesDRR",
            "date": "2021-11-23T01:33:39.878529",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch4-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.64
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesDRR",
            "date": "2021-11-23T01:34:42.519619",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch5-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.39
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesDRR",
            "date": "2021-11-23T01:35:44.911582",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch6-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.44
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesDRR",
            "date": "2021-11-23T01:36:47.351838",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Chart/patch3-Chart-1-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.15
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesDRR",
            "date": "2021-11-23T01:37:49.502411",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch1-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.6
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesDRR",
            "date": "2021-11-23T01:38:52.108551",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch3-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.41
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesDRR",
            "date": "2021-11-23T01:39:54.518814",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Jaid/Chart/patch2-Chart-1-Jaid-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.79
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesDRR",
            "date": "2021-11-23T01:40:57.308776",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Chart/patch1-Chart-1-DeepRepair.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.63
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesDRR",
            "date": "2021-11-23T01:41:59.945136",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch1-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.58
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesDRR",
            "date": "2021-11-23T01:43:02.525406",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SketchFix/Chart/patch2-Chart-1-SketchFix-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.64
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesDRR",
            "date": "2021-11-23T01:44:05.165560",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch2-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.64
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesDRR",
            "date": "2021-11-23T01:45:07.807469",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch4-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.56
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesDRR",
            "date": "2021-11-23T01:46:10.366616",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/SequenceR/Chart/patch3-Chart-1-SequenceR.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.91
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "patchesDRR",
            "date": "2021-11-23T01:47:13.276038",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/ssFix/Chart/patch1-Chart-1-ssFix-plausible.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.92
        },
        {
            "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "NFL",
            "date": "2021-11-23T01:48:16.199458",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/jMutRepair/Chart/patch33_13-Chart-1-jMutRepair.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.39
        },
        {
            "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "NFL",
            "date": "2021-11-23T01:49:18.592630",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Dcorrect/SimFix/Chart/patch914_914-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.81
        },
        {
            "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "NFL",
            "date": "2021-11-23T01:50:21.400359",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/ARJA/Chart/patch12_12-Chart-1-ARJA.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.7
        },
        {
            "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "NFL",
            "date": "2021-11-23T01:51:24.104296",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Chart/patch1_1-Chart-1-DynaMoth.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.87
        },
        {
            "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "NFL",
            "date": "2021-11-23T01:52:26.973267",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/GenProg-A/Chart/patch104_70-Chart-1-GenProg-A.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.95
        },
        {
            "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "NFL",
            "date": "2021-11-23T01:53:29.921824",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Chart/patch16_16-Chart-1-Kali-A.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.83
        },
        {
            "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "NFL",
            "date": "2021-11-23T01:54:32.753705",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Chart/patch36_35-Chart-1-jKali.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 63.77
        },
        {
            "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "PFL",
            "date": "2021-11-23T01:55:36.522857",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Dcorrect/SimFix/Chart/patch1_1-Chart-1-SimFix.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 63.39
        },
        {
            "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "PFL",
            "date": "2021-11-23T01:56:39.910478",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/jGenProg/Chart/patch1_1-Chart-1-jGenProg.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.69
        },
        {
            "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
            "project": "Chart",
            "bugid": "1",
            "dataset": "PFL",
            "date": "2021-11-23T01:57:42.602225",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_NFL_patch33_13-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_API_patch1-Chart-1-jMutRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_NFL_patch36_35-Chart-1-jKali",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_DRR_patch4-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_DRR_patch1-Chart-1-DeepRepair",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_NFL_patch1_1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_API_patch1-Chart-1-DynaMoth",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_DRR_patch1-Chart-1-ssFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_DRR_patch6-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_DRR_patch2-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_DRR_patch5-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_DRR_patch2-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_DRR_patch1-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_DRR_patch1-Chart-1-SketchFix-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_NFL_patch12_12-Chart-1-ARJA",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_DRR_patch3-Chart-1-SequenceR",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_DRR_patch4-Chart-1-Arja-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_NFL_patch16_16-Chart-1-Kali-A",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_API_patch1-Chart-1-Cardumen-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_NFL_patch104_70-Chart-1-GenProg-A",
                    "failing": 146,
                    "testrun": 1669,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)",
                        "test143(ErrorTest0)",
                        "test144(ErrorTest0)",
                        "test145(ErrorTest0)",
                        "test146(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot42",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot23.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on drawingSupplier24 and drawingSupplier36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot34 and categoryPlot4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot41 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot33",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot42 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot66 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot55 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot44 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on obj12 and categoryPlot29.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot22 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot83",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot31 and categoryPlot48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot21 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot24 and categoryPlot50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot58",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot35 and categoryPlot45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot39 and categoryPlot51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot11 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot34 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot49",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and obj27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot12 and categoryPlot25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot40 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot4 and categoryPlot31.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot27 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on legendItemCollection35 and legendItemCollection44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot14 and categoryPlot35",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot32 and categoryPlot57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot59",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot57 and categoryPlot14.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot23 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot46",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot16 and categoryPlot23",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot10 and categoryPlot48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot19",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot26 and categoryPlot61",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot76 and categoryPlot90",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot13 and categoryPlot53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot22",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot32",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot38",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot51 and categoryPlot67",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot15 and categoryPlot79",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot28 and categoryPlot76",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot25 and categoryPlot36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot55",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot29 and categoryPlot54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot29",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on categoryPlot30 and categoryPlot15.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot10 and categoryPlot39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot17 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot37",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and categoryPlot24",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on obj7 and categoryPlot40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot4 and obj48",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot19 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot18 and categoryPlot34",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on categoryPlot20 and categoryPlot29"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:66)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:172)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:202)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:250)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:310)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:340)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:387)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:445)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:491)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:565)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:611)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:652)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:694)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:750)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:795)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:846)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:918)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:976)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:1022)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:1089)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:1127)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:1174)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:1251)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:1359)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:1406)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:1450)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:1495)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:1566)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1661)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1749)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1812)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1859)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1905)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1957)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:2037)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:2081)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:2125)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:2176)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:2237)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:2296)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:2343)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:2399)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:2476)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:2562)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:2618)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:2692)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:2826)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:2900)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:2974)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:3016)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:3060)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:3129)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:3213)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:3278)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:3331)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:3421)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:3471)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:3534)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:3609)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:3655)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:3693)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:3732)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:3798)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:3848)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:3899)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:3966)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:4028)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:4090)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:4142)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:4216)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:4272)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:4318)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:4371)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:4441)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:4513)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:4560)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:4621)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:4662)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:4697)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:4767)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:4813)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:4879)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:4951)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:5010)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:5090)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:5130)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:5194)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:5264)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:5334)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:5390)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:5454)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:5509)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:5556)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:5636)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:5712)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:5775)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:5854)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:5899)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:5945)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:6004)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:6075)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:6128)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:6195)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:6285)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:6371)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:6417)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:6472)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:6541)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:6615)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:6673)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:6737)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:6787)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:6830)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:6906)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:6975)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:7027)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:7101)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:7192)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:7259)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:7344)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:7406)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:7459)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:7524)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:7564)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:7654)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:7709)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:7758)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:7837)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:7885)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:7949)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:8016)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:8056)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:8136)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:8187)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:8225)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:8284)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:8320)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:8383)"
                        ],
                        [
                            "ErrorTest0.test143(ErrorTest0.java:8435)"
                        ],
                        [
                            "ErrorTest0.test144(ErrorTest0.java:8479)"
                        ],
                        [
                            "ErrorTest0.test145(ErrorTest0.java:8540)"
                        ],
                        [
                            "ErrorTest0.test146(ErrorTest0.java:8597)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_API_patch1-Chart-1-Avatar",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_NFL_patch914_914-Chart-1-SimFix",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_PFL_patch2_2-Chart-1-Cardumen",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_PFL_patch1_1-Chart-1-jGenProg",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_API_patch1-Chart-1-jKali-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/Cardumen/Chart/patch2_2-Chart-1-Cardumen.patch",
                    "test": "test_from_DRR_patch3-Chart-1-Jaid-plausible",
                    "failing": 0,
                    "testrun": 8,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 62.43
        }
    ],
    "date": "2021-11-23T01:24:02.013384",
    "duration": -0.0
}