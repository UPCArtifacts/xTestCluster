{
    "bugid": "Math-49",
    "results": [
        {
            "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch1-Math-49-Arja-plausible.patch",
            "project": "Math",
            "bugid": "49",
            "dataset": "patchesDRR",
            "date": "2021-11-22T20:17:37.503877",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch1-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-Nopol2015-plausible",
                    "failing": 30,
                    "testrun": 1836,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test29(ErrorTest0)",
                        "test1796(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector82.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector40 and openMapRealVector5",
                        "java.lang.AssertionError: '2.0' != '1.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1195)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1249)"
                        ],
                        [
                            "ErrorTest0.test29(ErrorTest0.java:1277)"
                        ],
                        [
                            "RegressionTest3.test1796(RegressionTest3.java:14956)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch1-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch4-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4085,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch1-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-JGenProg2015-plausible",
                    "failing": 32,
                    "testrun": 1868,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test30(ErrorTest0)",
                        "test31(ErrorTest0)",
                        "test32(ErrorTest0)",
                        "test34(ErrorTest0)",
                        "test35(ErrorTest0)",
                        "test36(ErrorTest0)",
                        "test37(ErrorTest0)",
                        "test38(ErrorTest0)",
                        "test39(ErrorTest0)",
                        "test40(ErrorTest0)",
                        "test41(ErrorTest0)",
                        "test42(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector91.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector48 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector33 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector71 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector96.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector57.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector86 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector54.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector67 and openMapRealVector61.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:190)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:246)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:304)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:341)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:377)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:496)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:594)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:621)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:681)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:737)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:793)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:840)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:1010)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:1129)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1326)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1389)"
                        ],
                        [
                            "ErrorTest0.test30(ErrorTest0.java:1486)"
                        ],
                        [
                            "ErrorTest0.test31(ErrorTest0.java:1525)"
                        ],
                        [
                            "ErrorTest0.test32(ErrorTest0.java:1583)"
                        ],
                        [
                            "ErrorTest0.test34(ErrorTest0.java:1660)"
                        ],
                        [
                            "ErrorTest0.test35(ErrorTest0.java:1719)"
                        ],
                        [
                            "ErrorTest0.test36(ErrorTest0.java:1756)"
                        ],
                        [
                            "ErrorTest0.test37(ErrorTest0.java:1813)"
                        ],
                        [
                            "ErrorTest0.test38(ErrorTest0.java:1860)"
                        ],
                        [
                            "ErrorTest0.test39(ErrorTest0.java:1885)"
                        ],
                        [
                            "ErrorTest0.test40(ErrorTest0.java:1939)"
                        ],
                        [
                            "ErrorTest0.test41(ErrorTest0.java:1976)"
                        ],
                        [
                            "ErrorTest0.test42(ErrorTest0.java:1994)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch1-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-Nopol",
                    "failing": 28,
                    "testrun": 1814,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch1-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3896,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch1-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-DeepRepair",
                    "failing": 0,
                    "testrun": 3963,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch1-Math-49-Arja-plausible.patch",
                    "test": "test_from_PFL_patch130_99-Math-49-ARJA",
                    "failing": 26,
                    "testrun": 1877,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector77 and openMapRealVector74.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector64 and openMapRealVector35.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector81 and openMapRealVector78.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector83.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector12.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector94 and openMapRealVector67.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector69 and openMapRealVector60.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector53 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector43 and openMapRealVector30."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:118)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:155)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:187)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:239)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:283)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:336)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:373)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:428)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:442)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:502)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:536)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:580)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:624)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:647)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:678)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:743)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:761)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:805)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:852)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:883)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:929)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:998)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1031)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch1-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch6-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3960,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch1-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch7-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3670,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch1-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch15_1-Math-49-AVATAR",
                    "failing": 42,
                    "testrun": 3170,
                    "failings": [
                        "test0658(RegressionTest1)",
                        "test0720(RegressionTest1)",
                        "test0807(RegressionTest1)",
                        "test0905(RegressionTest1)",
                        "test0929(RegressionTest1)",
                        "test0953(RegressionTest1)",
                        "test0998(RegressionTest1)",
                        "test3065(RegressionTest6)",
                        "test1537(RegressionTest3)",
                        "test1569(RegressionTest3)",
                        "test1641(RegressionTest3)",
                        "test1649(RegressionTest3)",
                        "test1676(RegressionTest3)",
                        "test1790(RegressionTest3)",
                        "test1837(RegressionTest3)",
                        "test1900(RegressionTest3)",
                        "test1949(RegressionTest3)",
                        "test2514(RegressionTest5)",
                        "test2676(RegressionTest5)",
                        "test2934(RegressionTest5)",
                        "test2979(RegressionTest5)",
                        "test2034(RegressionTest4)",
                        "test2142(RegressionTest4)",
                        "test2150(RegressionTest4)",
                        "test2235(RegressionTest4)",
                        "test2347(RegressionTest4)",
                        "test1043(RegressionTest2)",
                        "test1107(RegressionTest2)",
                        "test1125(RegressionTest2)",
                        "test1275(RegressionTest2)",
                        "test1332(RegressionTest2)",
                        "test0014(RegressionTest0)",
                        "test0094(RegressionTest0)",
                        "test0114(RegressionTest0)",
                        "test0127(RegressionTest0)",
                        "test0196(RegressionTest0)",
                        "test0230(RegressionTest0)",
                        "test0257(RegressionTest0)",
                        "test0264(RegressionTest0)",
                        "test0286(RegressionTest0)",
                        "test0390(RegressionTest0)",
                        "test0466(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;"
                    ],
                    "failing_lines": [
                        [
                            "RegressionTest1.test0658(RegressionTest1.java:7482)"
                        ],
                        [
                            "RegressionTest1.test0720(RegressionTest1.java:10263)"
                        ],
                        [
                            "RegressionTest1.test0807(RegressionTest1.java:14565)"
                        ],
                        [
                            "RegressionTest1.test0905(RegressionTest1.java:19451)"
                        ],
                        [
                            "RegressionTest1.test0929(RegressionTest1.java:20507)"
                        ],
                        [
                            "RegressionTest1.test0953(RegressionTest1.java:21784)"
                        ],
                        [
                            "RegressionTest1.test0998(RegressionTest1.java:24164)"
                        ],
                        [
                            "RegressionTest6.test3065(RegressionTest6.java:2921)"
                        ],
                        [
                            "RegressionTest3.test1537(RegressionTest3.java:1978)"
                        ],
                        [
                            "RegressionTest3.test1569(RegressionTest3.java:3509)"
                        ],
                        [
                            "RegressionTest3.test1641(RegressionTest3.java:7304)"
                        ],
                        [
                            "RegressionTest3.test1649(RegressionTest3.java:7697)"
                        ],
                        [
                            "RegressionTest3.test1676(RegressionTest3.java:9079)"
                        ],
                        [
                            "RegressionTest3.test1790(RegressionTest3.java:14716)"
                        ],
                        [
                            "RegressionTest3.test1837(RegressionTest3.java:17098)"
                        ],
                        [
                            "RegressionTest3.test1900(RegressionTest3.java:20284)"
                        ],
                        [
                            "RegressionTest3.test1949(RegressionTest3.java:22668)"
                        ],
                        [
                            "RegressionTest5.test2514(RegressionTest5.java:729)"
                        ],
                        [
                            "RegressionTest5.test2676(RegressionTest5.java:8860)"
                        ],
                        [
                            "RegressionTest5.test2934(RegressionTest5.java:21266)"
                        ],
                        [
                            "RegressionTest5.test2979(RegressionTest5.java:23255)"
                        ],
                        [
                            "RegressionTest4.test2034(RegressionTest4.java:1667)"
                        ],
                        [
                            "RegressionTest4.test2142(RegressionTest4.java:6874)"
                        ],
                        [
                            "RegressionTest4.test2150(RegressionTest4.java:7269)"
                        ],
                        [
                            "RegressionTest4.test2235(RegressionTest4.java:11652)"
                        ],
                        [
                            "RegressionTest4.test2347(RegressionTest4.java:16909)"
                        ],
                        [
                            "RegressionTest2.test1043(RegressionTest2.java:2392)"
                        ],
                        [
                            "RegressionTest2.test1107(RegressionTest2.java:5597)"
                        ],
                        [
                            "RegressionTest2.test1125(RegressionTest2.java:6283)"
                        ],
                        [
                            "RegressionTest2.test1275(RegressionTest2.java:13952)"
                        ],
                        [
                            "RegressionTest2.test1332(RegressionTest2.java:16710)"
                        ],
                        [
                            "RegressionTest0.test0014(RegressionTest0.java:361)"
                        ],
                        [
                            "RegressionTest0.test0094(RegressionTest0.java:3140)"
                        ],
                        [
                            "RegressionTest0.test0114(RegressionTest0.java:3904)"
                        ],
                        [
                            "RegressionTest0.test0127(RegressionTest0.java:4366)"
                        ],
                        [
                            "RegressionTest0.test0196(RegressionTest0.java:7085)"
                        ],
                        [
                            "RegressionTest0.test0230(RegressionTest0.java:8366)"
                        ],
                        [
                            "RegressionTest0.test0257(RegressionTest0.java:9611)"
                        ],
                        [
                            "RegressionTest0.test0264(RegressionTest0.java:9914)"
                        ],
                        [
                            "RegressionTest0.test0286(RegressionTest0.java:10824)"
                        ],
                        [
                            "RegressionTest0.test0390(RegressionTest0.java:15385)"
                        ],
                        [
                            "RegressionTest0.test0466(RegressionTest0.java:18840)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch1-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-DynaMoth",
                    "failing": 28,
                    "testrun": 1818,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch1-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3346,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch1-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch7_7-Math-49-Kali-A",
                    "failing": 32,
                    "testrun": 2023,
                    "failings": [
                        "test008(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test0957(RegressionTest1)",
                        "test1567(RegressionTest3)",
                        "test1622(RegressionTest3)",
                        "test1688(RegressionTest3)",
                        "test1794(RegressionTest3)",
                        "test1880(RegressionTest3)",
                        "test1121(RegressionTest2)",
                        "test1300(RegressionTest2)",
                        "test1333(RegressionTest2)",
                        "test1356(RegressionTest2)",
                        "test1480(RegressionTest2)",
                        "test0132(RegressionTest0)",
                        "test0187(RegressionTest0)",
                        "test0301(RegressionTest0)",
                        "test0372(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector46.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector95 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector24.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector9.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector91 and openMapRealVector72.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector15 and openMapRealVector7.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector20.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector35 and openMapRealVector16.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector82 and openMapRealVector81.",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.5' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: index (101)",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.5' != '1.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test008(ErrorTest0.java:237)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:671)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:742)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1168)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:1585)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:1695)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:1900)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:3104)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:3623)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:3766)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:3929)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:3985)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:4055)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:4356)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:4452)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:5346)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:5487)"
                        ],
                        [
                            "RegressionTest1.test0957(RegressionTest1.java:24665)"
                        ],
                        [
                            "RegressionTest3.test1567(RegressionTest3.java:3405)"
                        ],
                        [
                            "RegressionTest3.test1622(RegressionTest3.java:6254)"
                        ],
                        [
                            "RegressionTest3.test1688(RegressionTest3.java:9544)"
                        ],
                        [
                            "RegressionTest3.test1794(RegressionTest3.java:14607)"
                        ],
                        [
                            "RegressionTest3.test1880(RegressionTest3.java:19167)"
                        ],
                        [
                            "RegressionTest2.test1121(RegressionTest2.java:6008)"
                        ],
                        [
                            "RegressionTest2.test1300(RegressionTest2.java:14896)"
                        ],
                        [
                            "RegressionTest2.test1333(RegressionTest2.java:16561)"
                        ],
                        [
                            "RegressionTest2.test1356(RegressionTest2.java:17513)"
                        ],
                        [
                            "RegressionTest2.test1480(RegressionTest2.java:23954)"
                        ],
                        [
                            "RegressionTest0.test0132(RegressionTest0.java:6324)"
                        ],
                        [
                            "RegressionTest0.test0187(RegressionTest0.java:9527)"
                        ],
                        [
                            "RegressionTest0.test0301(RegressionTest0.java:15878)"
                        ],
                        [
                            "RegressionTest0.test0372(RegressionTest0.java:19757)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch1-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch5-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4079,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch1-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3942,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 101.99
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch5-Math-49-Arja-plausible.patch",
            "project": "Math",
            "bugid": "49",
            "dataset": "patchesDRR",
            "date": "2021-11-22T20:19:19.498414",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch5-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-Nopol2015-plausible",
                    "failing": 30,
                    "testrun": 1836,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test29(ErrorTest0)",
                        "test1796(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector82.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector40 and openMapRealVector5",
                        "java.lang.AssertionError: '2.0' != '1.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1195)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1249)"
                        ],
                        [
                            "ErrorTest0.test29(ErrorTest0.java:1277)"
                        ],
                        [
                            "RegressionTest3.test1796(RegressionTest3.java:14956)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch5-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch4-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4085,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch5-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-JGenProg2015-plausible",
                    "failing": 32,
                    "testrun": 1868,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test30(ErrorTest0)",
                        "test31(ErrorTest0)",
                        "test32(ErrorTest0)",
                        "test34(ErrorTest0)",
                        "test35(ErrorTest0)",
                        "test36(ErrorTest0)",
                        "test37(ErrorTest0)",
                        "test38(ErrorTest0)",
                        "test39(ErrorTest0)",
                        "test40(ErrorTest0)",
                        "test41(ErrorTest0)",
                        "test42(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector91.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector48 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector33 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector71 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector96.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector57.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector86 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector54.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector67 and openMapRealVector61.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:190)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:246)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:304)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:341)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:377)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:496)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:594)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:621)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:681)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:737)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:793)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:840)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:1010)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:1129)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1326)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1389)"
                        ],
                        [
                            "ErrorTest0.test30(ErrorTest0.java:1486)"
                        ],
                        [
                            "ErrorTest0.test31(ErrorTest0.java:1525)"
                        ],
                        [
                            "ErrorTest0.test32(ErrorTest0.java:1583)"
                        ],
                        [
                            "ErrorTest0.test34(ErrorTest0.java:1660)"
                        ],
                        [
                            "ErrorTest0.test35(ErrorTest0.java:1719)"
                        ],
                        [
                            "ErrorTest0.test36(ErrorTest0.java:1756)"
                        ],
                        [
                            "ErrorTest0.test37(ErrorTest0.java:1813)"
                        ],
                        [
                            "ErrorTest0.test38(ErrorTest0.java:1860)"
                        ],
                        [
                            "ErrorTest0.test39(ErrorTest0.java:1885)"
                        ],
                        [
                            "ErrorTest0.test40(ErrorTest0.java:1939)"
                        ],
                        [
                            "ErrorTest0.test41(ErrorTest0.java:1976)"
                        ],
                        [
                            "ErrorTest0.test42(ErrorTest0.java:1994)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch5-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-Nopol",
                    "failing": 28,
                    "testrun": 1814,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch5-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3896,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch5-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-DeepRepair",
                    "failing": 0,
                    "testrun": 3963,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch5-Math-49-Arja-plausible.patch",
                    "test": "test_from_PFL_patch130_99-Math-49-ARJA",
                    "failing": 26,
                    "testrun": 1877,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector77 and openMapRealVector74.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector64 and openMapRealVector35.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector81 and openMapRealVector78.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector83.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector12.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector94 and openMapRealVector67.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector69 and openMapRealVector60.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector53 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector43 and openMapRealVector30."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:118)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:155)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:187)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:239)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:283)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:336)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:373)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:428)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:442)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:502)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:536)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:580)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:624)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:647)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:678)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:743)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:761)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:805)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:852)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:883)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:929)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:998)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1031)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch5-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch6-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3960,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch5-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch7-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3670,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch5-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch15_1-Math-49-AVATAR",
                    "failing": 42,
                    "testrun": 3170,
                    "failings": [
                        "test0658(RegressionTest1)",
                        "test0720(RegressionTest1)",
                        "test0807(RegressionTest1)",
                        "test0905(RegressionTest1)",
                        "test0929(RegressionTest1)",
                        "test0953(RegressionTest1)",
                        "test0998(RegressionTest1)",
                        "test3065(RegressionTest6)",
                        "test1537(RegressionTest3)",
                        "test1569(RegressionTest3)",
                        "test1641(RegressionTest3)",
                        "test1649(RegressionTest3)",
                        "test1676(RegressionTest3)",
                        "test1790(RegressionTest3)",
                        "test1837(RegressionTest3)",
                        "test1900(RegressionTest3)",
                        "test1949(RegressionTest3)",
                        "test2514(RegressionTest5)",
                        "test2676(RegressionTest5)",
                        "test2934(RegressionTest5)",
                        "test2979(RegressionTest5)",
                        "test2034(RegressionTest4)",
                        "test2142(RegressionTest4)",
                        "test2150(RegressionTest4)",
                        "test2235(RegressionTest4)",
                        "test2347(RegressionTest4)",
                        "test1043(RegressionTest2)",
                        "test1107(RegressionTest2)",
                        "test1125(RegressionTest2)",
                        "test1275(RegressionTest2)",
                        "test1332(RegressionTest2)",
                        "test0014(RegressionTest0)",
                        "test0094(RegressionTest0)",
                        "test0114(RegressionTest0)",
                        "test0127(RegressionTest0)",
                        "test0196(RegressionTest0)",
                        "test0230(RegressionTest0)",
                        "test0257(RegressionTest0)",
                        "test0264(RegressionTest0)",
                        "test0286(RegressionTest0)",
                        "test0390(RegressionTest0)",
                        "test0466(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;"
                    ],
                    "failing_lines": [
                        [
                            "RegressionTest1.test0658(RegressionTest1.java:7482)"
                        ],
                        [
                            "RegressionTest1.test0720(RegressionTest1.java:10263)"
                        ],
                        [
                            "RegressionTest1.test0807(RegressionTest1.java:14565)"
                        ],
                        [
                            "RegressionTest1.test0905(RegressionTest1.java:19451)"
                        ],
                        [
                            "RegressionTest1.test0929(RegressionTest1.java:20507)"
                        ],
                        [
                            "RegressionTest1.test0953(RegressionTest1.java:21784)"
                        ],
                        [
                            "RegressionTest1.test0998(RegressionTest1.java:24164)"
                        ],
                        [
                            "RegressionTest6.test3065(RegressionTest6.java:2921)"
                        ],
                        [
                            "RegressionTest3.test1537(RegressionTest3.java:1978)"
                        ],
                        [
                            "RegressionTest3.test1569(RegressionTest3.java:3509)"
                        ],
                        [
                            "RegressionTest3.test1641(RegressionTest3.java:7304)"
                        ],
                        [
                            "RegressionTest3.test1649(RegressionTest3.java:7697)"
                        ],
                        [
                            "RegressionTest3.test1676(RegressionTest3.java:9079)"
                        ],
                        [
                            "RegressionTest3.test1790(RegressionTest3.java:14716)"
                        ],
                        [
                            "RegressionTest3.test1837(RegressionTest3.java:17098)"
                        ],
                        [
                            "RegressionTest3.test1900(RegressionTest3.java:20284)"
                        ],
                        [
                            "RegressionTest3.test1949(RegressionTest3.java:22668)"
                        ],
                        [
                            "RegressionTest5.test2514(RegressionTest5.java:729)"
                        ],
                        [
                            "RegressionTest5.test2676(RegressionTest5.java:8860)"
                        ],
                        [
                            "RegressionTest5.test2934(RegressionTest5.java:21266)"
                        ],
                        [
                            "RegressionTest5.test2979(RegressionTest5.java:23255)"
                        ],
                        [
                            "RegressionTest4.test2034(RegressionTest4.java:1667)"
                        ],
                        [
                            "RegressionTest4.test2142(RegressionTest4.java:6874)"
                        ],
                        [
                            "RegressionTest4.test2150(RegressionTest4.java:7269)"
                        ],
                        [
                            "RegressionTest4.test2235(RegressionTest4.java:11652)"
                        ],
                        [
                            "RegressionTest4.test2347(RegressionTest4.java:16909)"
                        ],
                        [
                            "RegressionTest2.test1043(RegressionTest2.java:2392)"
                        ],
                        [
                            "RegressionTest2.test1107(RegressionTest2.java:5597)"
                        ],
                        [
                            "RegressionTest2.test1125(RegressionTest2.java:6283)"
                        ],
                        [
                            "RegressionTest2.test1275(RegressionTest2.java:13952)"
                        ],
                        [
                            "RegressionTest2.test1332(RegressionTest2.java:16710)"
                        ],
                        [
                            "RegressionTest0.test0014(RegressionTest0.java:361)"
                        ],
                        [
                            "RegressionTest0.test0094(RegressionTest0.java:3140)"
                        ],
                        [
                            "RegressionTest0.test0114(RegressionTest0.java:3904)"
                        ],
                        [
                            "RegressionTest0.test0127(RegressionTest0.java:4366)"
                        ],
                        [
                            "RegressionTest0.test0196(RegressionTest0.java:7085)"
                        ],
                        [
                            "RegressionTest0.test0230(RegressionTest0.java:8366)"
                        ],
                        [
                            "RegressionTest0.test0257(RegressionTest0.java:9611)"
                        ],
                        [
                            "RegressionTest0.test0264(RegressionTest0.java:9914)"
                        ],
                        [
                            "RegressionTest0.test0286(RegressionTest0.java:10824)"
                        ],
                        [
                            "RegressionTest0.test0390(RegressionTest0.java:15385)"
                        ],
                        [
                            "RegressionTest0.test0466(RegressionTest0.java:18840)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch5-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-DynaMoth",
                    "failing": 28,
                    "testrun": 1818,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch5-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3346,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch5-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch7_7-Math-49-Kali-A",
                    "failing": 32,
                    "testrun": 2023,
                    "failings": [
                        "test008(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test0957(RegressionTest1)",
                        "test1567(RegressionTest3)",
                        "test1622(RegressionTest3)",
                        "test1688(RegressionTest3)",
                        "test1794(RegressionTest3)",
                        "test1880(RegressionTest3)",
                        "test1121(RegressionTest2)",
                        "test1300(RegressionTest2)",
                        "test1333(RegressionTest2)",
                        "test1356(RegressionTest2)",
                        "test1480(RegressionTest2)",
                        "test0132(RegressionTest0)",
                        "test0187(RegressionTest0)",
                        "test0301(RegressionTest0)",
                        "test0372(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector46.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector95 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector24.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector9.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector91 and openMapRealVector72.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector15 and openMapRealVector7.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector20.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector35 and openMapRealVector16.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector82 and openMapRealVector81.",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.5' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: index (101)",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.5' != '1.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test008(ErrorTest0.java:237)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:671)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:742)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1168)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:1585)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:1695)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:1900)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:3104)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:3623)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:3766)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:3929)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:3985)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:4055)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:4356)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:4452)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:5346)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:5487)"
                        ],
                        [
                            "RegressionTest1.test0957(RegressionTest1.java:24665)"
                        ],
                        [
                            "RegressionTest3.test1567(RegressionTest3.java:3405)"
                        ],
                        [
                            "RegressionTest3.test1622(RegressionTest3.java:6254)"
                        ],
                        [
                            "RegressionTest3.test1688(RegressionTest3.java:9544)"
                        ],
                        [
                            "RegressionTest3.test1794(RegressionTest3.java:14607)"
                        ],
                        [
                            "RegressionTest3.test1880(RegressionTest3.java:19167)"
                        ],
                        [
                            "RegressionTest2.test1121(RegressionTest2.java:6008)"
                        ],
                        [
                            "RegressionTest2.test1300(RegressionTest2.java:14896)"
                        ],
                        [
                            "RegressionTest2.test1333(RegressionTest2.java:16561)"
                        ],
                        [
                            "RegressionTest2.test1356(RegressionTest2.java:17513)"
                        ],
                        [
                            "RegressionTest2.test1480(RegressionTest2.java:23954)"
                        ],
                        [
                            "RegressionTest0.test0132(RegressionTest0.java:6324)"
                        ],
                        [
                            "RegressionTest0.test0187(RegressionTest0.java:9527)"
                        ],
                        [
                            "RegressionTest0.test0301(RegressionTest0.java:15878)"
                        ],
                        [
                            "RegressionTest0.test0372(RegressionTest0.java:19757)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch5-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch5-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4079,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch5-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3942,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 101.87
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch4-Math-49-Arja-plausible.patch",
            "project": "Math",
            "bugid": "49",
            "dataset": "patchesDRR",
            "date": "2021-11-22T20:21:01.374500",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch4-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-Nopol2015-plausible",
                    "failing": 30,
                    "testrun": 1836,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test29(ErrorTest0)",
                        "test1796(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector82.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector40 and openMapRealVector5",
                        "java.lang.AssertionError: '2.0' != '1.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1195)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1249)"
                        ],
                        [
                            "ErrorTest0.test29(ErrorTest0.java:1277)"
                        ],
                        [
                            "RegressionTest3.test1796(RegressionTest3.java:14956)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch4-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch4-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4085,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch4-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-JGenProg2015-plausible",
                    "failing": 32,
                    "testrun": 1868,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test30(ErrorTest0)",
                        "test31(ErrorTest0)",
                        "test32(ErrorTest0)",
                        "test34(ErrorTest0)",
                        "test35(ErrorTest0)",
                        "test36(ErrorTest0)",
                        "test37(ErrorTest0)",
                        "test38(ErrorTest0)",
                        "test39(ErrorTest0)",
                        "test40(ErrorTest0)",
                        "test41(ErrorTest0)",
                        "test42(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector91.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector48 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector33 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector71 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector96.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector57.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector86 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector54.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector67 and openMapRealVector61.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:190)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:246)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:304)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:341)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:377)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:496)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:594)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:621)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:681)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:737)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:793)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:840)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:1010)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:1129)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1326)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1389)"
                        ],
                        [
                            "ErrorTest0.test30(ErrorTest0.java:1486)"
                        ],
                        [
                            "ErrorTest0.test31(ErrorTest0.java:1525)"
                        ],
                        [
                            "ErrorTest0.test32(ErrorTest0.java:1583)"
                        ],
                        [
                            "ErrorTest0.test34(ErrorTest0.java:1660)"
                        ],
                        [
                            "ErrorTest0.test35(ErrorTest0.java:1719)"
                        ],
                        [
                            "ErrorTest0.test36(ErrorTest0.java:1756)"
                        ],
                        [
                            "ErrorTest0.test37(ErrorTest0.java:1813)"
                        ],
                        [
                            "ErrorTest0.test38(ErrorTest0.java:1860)"
                        ],
                        [
                            "ErrorTest0.test39(ErrorTest0.java:1885)"
                        ],
                        [
                            "ErrorTest0.test40(ErrorTest0.java:1939)"
                        ],
                        [
                            "ErrorTest0.test41(ErrorTest0.java:1976)"
                        ],
                        [
                            "ErrorTest0.test42(ErrorTest0.java:1994)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch4-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-Nopol",
                    "failing": 28,
                    "testrun": 1814,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch4-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3896,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch4-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-DeepRepair",
                    "failing": 0,
                    "testrun": 3963,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch4-Math-49-Arja-plausible.patch",
                    "test": "test_from_PFL_patch130_99-Math-49-ARJA",
                    "failing": 26,
                    "testrun": 1877,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector77 and openMapRealVector74.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector64 and openMapRealVector35.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector81 and openMapRealVector78.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector83.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector12.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector94 and openMapRealVector67.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector69 and openMapRealVector60.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector53 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector43 and openMapRealVector30."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:118)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:155)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:187)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:239)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:283)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:336)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:373)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:428)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:442)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:502)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:536)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:580)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:624)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:647)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:678)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:743)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:761)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:805)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:852)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:883)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:929)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:998)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1031)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch4-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch6-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3960,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch4-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch7-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3670,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch4-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch15_1-Math-49-AVATAR",
                    "failing": 42,
                    "testrun": 3170,
                    "failings": [
                        "test0658(RegressionTest1)",
                        "test0720(RegressionTest1)",
                        "test0807(RegressionTest1)",
                        "test0905(RegressionTest1)",
                        "test0929(RegressionTest1)",
                        "test0953(RegressionTest1)",
                        "test0998(RegressionTest1)",
                        "test3065(RegressionTest6)",
                        "test1537(RegressionTest3)",
                        "test1569(RegressionTest3)",
                        "test1641(RegressionTest3)",
                        "test1649(RegressionTest3)",
                        "test1676(RegressionTest3)",
                        "test1790(RegressionTest3)",
                        "test1837(RegressionTest3)",
                        "test1900(RegressionTest3)",
                        "test1949(RegressionTest3)",
                        "test2514(RegressionTest5)",
                        "test2676(RegressionTest5)",
                        "test2934(RegressionTest5)",
                        "test2979(RegressionTest5)",
                        "test2034(RegressionTest4)",
                        "test2142(RegressionTest4)",
                        "test2150(RegressionTest4)",
                        "test2235(RegressionTest4)",
                        "test2347(RegressionTest4)",
                        "test1043(RegressionTest2)",
                        "test1107(RegressionTest2)",
                        "test1125(RegressionTest2)",
                        "test1275(RegressionTest2)",
                        "test1332(RegressionTest2)",
                        "test0014(RegressionTest0)",
                        "test0094(RegressionTest0)",
                        "test0114(RegressionTest0)",
                        "test0127(RegressionTest0)",
                        "test0196(RegressionTest0)",
                        "test0230(RegressionTest0)",
                        "test0257(RegressionTest0)",
                        "test0264(RegressionTest0)",
                        "test0286(RegressionTest0)",
                        "test0390(RegressionTest0)",
                        "test0466(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;"
                    ],
                    "failing_lines": [
                        [
                            "RegressionTest1.test0658(RegressionTest1.java:7482)"
                        ],
                        [
                            "RegressionTest1.test0720(RegressionTest1.java:10263)"
                        ],
                        [
                            "RegressionTest1.test0807(RegressionTest1.java:14565)"
                        ],
                        [
                            "RegressionTest1.test0905(RegressionTest1.java:19451)"
                        ],
                        [
                            "RegressionTest1.test0929(RegressionTest1.java:20507)"
                        ],
                        [
                            "RegressionTest1.test0953(RegressionTest1.java:21784)"
                        ],
                        [
                            "RegressionTest1.test0998(RegressionTest1.java:24164)"
                        ],
                        [
                            "RegressionTest6.test3065(RegressionTest6.java:2921)"
                        ],
                        [
                            "RegressionTest3.test1537(RegressionTest3.java:1978)"
                        ],
                        [
                            "RegressionTest3.test1569(RegressionTest3.java:3509)"
                        ],
                        [
                            "RegressionTest3.test1641(RegressionTest3.java:7304)"
                        ],
                        [
                            "RegressionTest3.test1649(RegressionTest3.java:7697)"
                        ],
                        [
                            "RegressionTest3.test1676(RegressionTest3.java:9079)"
                        ],
                        [
                            "RegressionTest3.test1790(RegressionTest3.java:14716)"
                        ],
                        [
                            "RegressionTest3.test1837(RegressionTest3.java:17098)"
                        ],
                        [
                            "RegressionTest3.test1900(RegressionTest3.java:20284)"
                        ],
                        [
                            "RegressionTest3.test1949(RegressionTest3.java:22668)"
                        ],
                        [
                            "RegressionTest5.test2514(RegressionTest5.java:729)"
                        ],
                        [
                            "RegressionTest5.test2676(RegressionTest5.java:8860)"
                        ],
                        [
                            "RegressionTest5.test2934(RegressionTest5.java:21266)"
                        ],
                        [
                            "RegressionTest5.test2979(RegressionTest5.java:23255)"
                        ],
                        [
                            "RegressionTest4.test2034(RegressionTest4.java:1667)"
                        ],
                        [
                            "RegressionTest4.test2142(RegressionTest4.java:6874)"
                        ],
                        [
                            "RegressionTest4.test2150(RegressionTest4.java:7269)"
                        ],
                        [
                            "RegressionTest4.test2235(RegressionTest4.java:11652)"
                        ],
                        [
                            "RegressionTest4.test2347(RegressionTest4.java:16909)"
                        ],
                        [
                            "RegressionTest2.test1043(RegressionTest2.java:2392)"
                        ],
                        [
                            "RegressionTest2.test1107(RegressionTest2.java:5597)"
                        ],
                        [
                            "RegressionTest2.test1125(RegressionTest2.java:6283)"
                        ],
                        [
                            "RegressionTest2.test1275(RegressionTest2.java:13952)"
                        ],
                        [
                            "RegressionTest2.test1332(RegressionTest2.java:16710)"
                        ],
                        [
                            "RegressionTest0.test0014(RegressionTest0.java:361)"
                        ],
                        [
                            "RegressionTest0.test0094(RegressionTest0.java:3140)"
                        ],
                        [
                            "RegressionTest0.test0114(RegressionTest0.java:3904)"
                        ],
                        [
                            "RegressionTest0.test0127(RegressionTest0.java:4366)"
                        ],
                        [
                            "RegressionTest0.test0196(RegressionTest0.java:7085)"
                        ],
                        [
                            "RegressionTest0.test0230(RegressionTest0.java:8366)"
                        ],
                        [
                            "RegressionTest0.test0257(RegressionTest0.java:9611)"
                        ],
                        [
                            "RegressionTest0.test0264(RegressionTest0.java:9914)"
                        ],
                        [
                            "RegressionTest0.test0286(RegressionTest0.java:10824)"
                        ],
                        [
                            "RegressionTest0.test0390(RegressionTest0.java:15385)"
                        ],
                        [
                            "RegressionTest0.test0466(RegressionTest0.java:18840)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch4-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-DynaMoth",
                    "failing": 28,
                    "testrun": 1818,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch4-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3346,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch4-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch7_7-Math-49-Kali-A",
                    "failing": 32,
                    "testrun": 2023,
                    "failings": [
                        "test008(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test0957(RegressionTest1)",
                        "test1567(RegressionTest3)",
                        "test1622(RegressionTest3)",
                        "test1688(RegressionTest3)",
                        "test1794(RegressionTest3)",
                        "test1880(RegressionTest3)",
                        "test1121(RegressionTest2)",
                        "test1300(RegressionTest2)",
                        "test1333(RegressionTest2)",
                        "test1356(RegressionTest2)",
                        "test1480(RegressionTest2)",
                        "test0132(RegressionTest0)",
                        "test0187(RegressionTest0)",
                        "test0301(RegressionTest0)",
                        "test0372(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector46.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector95 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector24.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector9.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector91 and openMapRealVector72.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector15 and openMapRealVector7.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector20.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector35 and openMapRealVector16.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector82 and openMapRealVector81.",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.5' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: index (101)",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.5' != '1.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test008(ErrorTest0.java:237)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:671)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:742)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1168)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:1585)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:1695)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:1900)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:3104)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:3623)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:3766)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:3929)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:3985)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:4055)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:4356)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:4452)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:5346)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:5487)"
                        ],
                        [
                            "RegressionTest1.test0957(RegressionTest1.java:24665)"
                        ],
                        [
                            "RegressionTest3.test1567(RegressionTest3.java:3405)"
                        ],
                        [
                            "RegressionTest3.test1622(RegressionTest3.java:6254)"
                        ],
                        [
                            "RegressionTest3.test1688(RegressionTest3.java:9544)"
                        ],
                        [
                            "RegressionTest3.test1794(RegressionTest3.java:14607)"
                        ],
                        [
                            "RegressionTest3.test1880(RegressionTest3.java:19167)"
                        ],
                        [
                            "RegressionTest2.test1121(RegressionTest2.java:6008)"
                        ],
                        [
                            "RegressionTest2.test1300(RegressionTest2.java:14896)"
                        ],
                        [
                            "RegressionTest2.test1333(RegressionTest2.java:16561)"
                        ],
                        [
                            "RegressionTest2.test1356(RegressionTest2.java:17513)"
                        ],
                        [
                            "RegressionTest2.test1480(RegressionTest2.java:23954)"
                        ],
                        [
                            "RegressionTest0.test0132(RegressionTest0.java:6324)"
                        ],
                        [
                            "RegressionTest0.test0187(RegressionTest0.java:9527)"
                        ],
                        [
                            "RegressionTest0.test0301(RegressionTest0.java:15878)"
                        ],
                        [
                            "RegressionTest0.test0372(RegressionTest0.java:19757)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch4-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch5-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4079,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch4-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3942,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 102.22
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch2-Math-49-Arja-plausible.patch",
            "project": "Math",
            "bugid": "49",
            "dataset": "patchesDRR",
            "date": "2021-11-22T20:22:43.597843",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch2-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-Nopol2015-plausible",
                    "failing": 30,
                    "testrun": 1836,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test29(ErrorTest0)",
                        "test1796(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector82.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector40 and openMapRealVector5",
                        "java.lang.AssertionError: '2.0' != '1.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1195)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1249)"
                        ],
                        [
                            "ErrorTest0.test29(ErrorTest0.java:1277)"
                        ],
                        [
                            "RegressionTest3.test1796(RegressionTest3.java:14956)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch2-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch4-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4085,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch2-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-JGenProg2015-plausible",
                    "failing": 32,
                    "testrun": 1868,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test30(ErrorTest0)",
                        "test31(ErrorTest0)",
                        "test32(ErrorTest0)",
                        "test34(ErrorTest0)",
                        "test35(ErrorTest0)",
                        "test36(ErrorTest0)",
                        "test37(ErrorTest0)",
                        "test38(ErrorTest0)",
                        "test39(ErrorTest0)",
                        "test40(ErrorTest0)",
                        "test41(ErrorTest0)",
                        "test42(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector91.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector48 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector33 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector71 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector96.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector57.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector86 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector54.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector67 and openMapRealVector61.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:190)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:246)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:304)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:341)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:377)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:496)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:594)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:621)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:681)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:737)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:793)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:840)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:1010)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:1129)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1326)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1389)"
                        ],
                        [
                            "ErrorTest0.test30(ErrorTest0.java:1486)"
                        ],
                        [
                            "ErrorTest0.test31(ErrorTest0.java:1525)"
                        ],
                        [
                            "ErrorTest0.test32(ErrorTest0.java:1583)"
                        ],
                        [
                            "ErrorTest0.test34(ErrorTest0.java:1660)"
                        ],
                        [
                            "ErrorTest0.test35(ErrorTest0.java:1719)"
                        ],
                        [
                            "ErrorTest0.test36(ErrorTest0.java:1756)"
                        ],
                        [
                            "ErrorTest0.test37(ErrorTest0.java:1813)"
                        ],
                        [
                            "ErrorTest0.test38(ErrorTest0.java:1860)"
                        ],
                        [
                            "ErrorTest0.test39(ErrorTest0.java:1885)"
                        ],
                        [
                            "ErrorTest0.test40(ErrorTest0.java:1939)"
                        ],
                        [
                            "ErrorTest0.test41(ErrorTest0.java:1976)"
                        ],
                        [
                            "ErrorTest0.test42(ErrorTest0.java:1994)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch2-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-Nopol",
                    "failing": 28,
                    "testrun": 1814,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch2-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3896,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch2-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-DeepRepair",
                    "failing": 0,
                    "testrun": 3963,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch2-Math-49-Arja-plausible.patch",
                    "test": "test_from_PFL_patch130_99-Math-49-ARJA",
                    "failing": 26,
                    "testrun": 1877,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector77 and openMapRealVector74.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector64 and openMapRealVector35.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector81 and openMapRealVector78.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector83.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector12.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector94 and openMapRealVector67.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector69 and openMapRealVector60.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector53 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector43 and openMapRealVector30."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:118)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:155)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:187)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:239)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:283)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:336)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:373)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:428)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:442)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:502)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:536)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:580)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:624)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:647)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:678)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:743)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:761)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:805)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:852)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:883)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:929)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:998)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1031)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch2-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch6-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3960,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch2-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch7-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3670,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch2-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch15_1-Math-49-AVATAR",
                    "failing": 42,
                    "testrun": 3170,
                    "failings": [
                        "test0658(RegressionTest1)",
                        "test0720(RegressionTest1)",
                        "test0807(RegressionTest1)",
                        "test0905(RegressionTest1)",
                        "test0929(RegressionTest1)",
                        "test0953(RegressionTest1)",
                        "test0998(RegressionTest1)",
                        "test3065(RegressionTest6)",
                        "test1537(RegressionTest3)",
                        "test1569(RegressionTest3)",
                        "test1641(RegressionTest3)",
                        "test1649(RegressionTest3)",
                        "test1676(RegressionTest3)",
                        "test1790(RegressionTest3)",
                        "test1837(RegressionTest3)",
                        "test1900(RegressionTest3)",
                        "test1949(RegressionTest3)",
                        "test2514(RegressionTest5)",
                        "test2676(RegressionTest5)",
                        "test2934(RegressionTest5)",
                        "test2979(RegressionTest5)",
                        "test2034(RegressionTest4)",
                        "test2142(RegressionTest4)",
                        "test2150(RegressionTest4)",
                        "test2235(RegressionTest4)",
                        "test2347(RegressionTest4)",
                        "test1043(RegressionTest2)",
                        "test1107(RegressionTest2)",
                        "test1125(RegressionTest2)",
                        "test1275(RegressionTest2)",
                        "test1332(RegressionTest2)",
                        "test0014(RegressionTest0)",
                        "test0094(RegressionTest0)",
                        "test0114(RegressionTest0)",
                        "test0127(RegressionTest0)",
                        "test0196(RegressionTest0)",
                        "test0230(RegressionTest0)",
                        "test0257(RegressionTest0)",
                        "test0264(RegressionTest0)",
                        "test0286(RegressionTest0)",
                        "test0390(RegressionTest0)",
                        "test0466(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;"
                    ],
                    "failing_lines": [
                        [
                            "RegressionTest1.test0658(RegressionTest1.java:7482)"
                        ],
                        [
                            "RegressionTest1.test0720(RegressionTest1.java:10263)"
                        ],
                        [
                            "RegressionTest1.test0807(RegressionTest1.java:14565)"
                        ],
                        [
                            "RegressionTest1.test0905(RegressionTest1.java:19451)"
                        ],
                        [
                            "RegressionTest1.test0929(RegressionTest1.java:20507)"
                        ],
                        [
                            "RegressionTest1.test0953(RegressionTest1.java:21784)"
                        ],
                        [
                            "RegressionTest1.test0998(RegressionTest1.java:24164)"
                        ],
                        [
                            "RegressionTest6.test3065(RegressionTest6.java:2921)"
                        ],
                        [
                            "RegressionTest3.test1537(RegressionTest3.java:1978)"
                        ],
                        [
                            "RegressionTest3.test1569(RegressionTest3.java:3509)"
                        ],
                        [
                            "RegressionTest3.test1641(RegressionTest3.java:7304)"
                        ],
                        [
                            "RegressionTest3.test1649(RegressionTest3.java:7697)"
                        ],
                        [
                            "RegressionTest3.test1676(RegressionTest3.java:9079)"
                        ],
                        [
                            "RegressionTest3.test1790(RegressionTest3.java:14716)"
                        ],
                        [
                            "RegressionTest3.test1837(RegressionTest3.java:17098)"
                        ],
                        [
                            "RegressionTest3.test1900(RegressionTest3.java:20284)"
                        ],
                        [
                            "RegressionTest3.test1949(RegressionTest3.java:22668)"
                        ],
                        [
                            "RegressionTest5.test2514(RegressionTest5.java:729)"
                        ],
                        [
                            "RegressionTest5.test2676(RegressionTest5.java:8860)"
                        ],
                        [
                            "RegressionTest5.test2934(RegressionTest5.java:21266)"
                        ],
                        [
                            "RegressionTest5.test2979(RegressionTest5.java:23255)"
                        ],
                        [
                            "RegressionTest4.test2034(RegressionTest4.java:1667)"
                        ],
                        [
                            "RegressionTest4.test2142(RegressionTest4.java:6874)"
                        ],
                        [
                            "RegressionTest4.test2150(RegressionTest4.java:7269)"
                        ],
                        [
                            "RegressionTest4.test2235(RegressionTest4.java:11652)"
                        ],
                        [
                            "RegressionTest4.test2347(RegressionTest4.java:16909)"
                        ],
                        [
                            "RegressionTest2.test1043(RegressionTest2.java:2392)"
                        ],
                        [
                            "RegressionTest2.test1107(RegressionTest2.java:5597)"
                        ],
                        [
                            "RegressionTest2.test1125(RegressionTest2.java:6283)"
                        ],
                        [
                            "RegressionTest2.test1275(RegressionTest2.java:13952)"
                        ],
                        [
                            "RegressionTest2.test1332(RegressionTest2.java:16710)"
                        ],
                        [
                            "RegressionTest0.test0014(RegressionTest0.java:361)"
                        ],
                        [
                            "RegressionTest0.test0094(RegressionTest0.java:3140)"
                        ],
                        [
                            "RegressionTest0.test0114(RegressionTest0.java:3904)"
                        ],
                        [
                            "RegressionTest0.test0127(RegressionTest0.java:4366)"
                        ],
                        [
                            "RegressionTest0.test0196(RegressionTest0.java:7085)"
                        ],
                        [
                            "RegressionTest0.test0230(RegressionTest0.java:8366)"
                        ],
                        [
                            "RegressionTest0.test0257(RegressionTest0.java:9611)"
                        ],
                        [
                            "RegressionTest0.test0264(RegressionTest0.java:9914)"
                        ],
                        [
                            "RegressionTest0.test0286(RegressionTest0.java:10824)"
                        ],
                        [
                            "RegressionTest0.test0390(RegressionTest0.java:15385)"
                        ],
                        [
                            "RegressionTest0.test0466(RegressionTest0.java:18840)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch2-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-DynaMoth",
                    "failing": 28,
                    "testrun": 1818,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch2-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3346,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch2-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch7_7-Math-49-Kali-A",
                    "failing": 32,
                    "testrun": 2023,
                    "failings": [
                        "test008(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test0957(RegressionTest1)",
                        "test1567(RegressionTest3)",
                        "test1622(RegressionTest3)",
                        "test1688(RegressionTest3)",
                        "test1794(RegressionTest3)",
                        "test1880(RegressionTest3)",
                        "test1121(RegressionTest2)",
                        "test1300(RegressionTest2)",
                        "test1333(RegressionTest2)",
                        "test1356(RegressionTest2)",
                        "test1480(RegressionTest2)",
                        "test0132(RegressionTest0)",
                        "test0187(RegressionTest0)",
                        "test0301(RegressionTest0)",
                        "test0372(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector46.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector95 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector24.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector9.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector91 and openMapRealVector72.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector15 and openMapRealVector7.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector20.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector35 and openMapRealVector16.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector82 and openMapRealVector81.",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.5' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: index (101)",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.5' != '1.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test008(ErrorTest0.java:237)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:671)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:742)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1168)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:1585)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:1695)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:1900)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:3104)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:3623)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:3766)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:3929)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:3985)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:4055)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:4356)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:4452)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:5346)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:5487)"
                        ],
                        [
                            "RegressionTest1.test0957(RegressionTest1.java:24665)"
                        ],
                        [
                            "RegressionTest3.test1567(RegressionTest3.java:3405)"
                        ],
                        [
                            "RegressionTest3.test1622(RegressionTest3.java:6254)"
                        ],
                        [
                            "RegressionTest3.test1688(RegressionTest3.java:9544)"
                        ],
                        [
                            "RegressionTest3.test1794(RegressionTest3.java:14607)"
                        ],
                        [
                            "RegressionTest3.test1880(RegressionTest3.java:19167)"
                        ],
                        [
                            "RegressionTest2.test1121(RegressionTest2.java:6008)"
                        ],
                        [
                            "RegressionTest2.test1300(RegressionTest2.java:14896)"
                        ],
                        [
                            "RegressionTest2.test1333(RegressionTest2.java:16561)"
                        ],
                        [
                            "RegressionTest2.test1356(RegressionTest2.java:17513)"
                        ],
                        [
                            "RegressionTest2.test1480(RegressionTest2.java:23954)"
                        ],
                        [
                            "RegressionTest0.test0132(RegressionTest0.java:6324)"
                        ],
                        [
                            "RegressionTest0.test0187(RegressionTest0.java:9527)"
                        ],
                        [
                            "RegressionTest0.test0301(RegressionTest0.java:15878)"
                        ],
                        [
                            "RegressionTest0.test0372(RegressionTest0.java:19757)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch2-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch5-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4079,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch2-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3942,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 99.76
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch3-Math-49-Arja-plausible.patch",
            "project": "Math",
            "bugid": "49",
            "dataset": "patchesDRR",
            "date": "2021-11-22T20:24:23.357214",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch3-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-Nopol2015-plausible",
                    "failing": 30,
                    "testrun": 1836,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test29(ErrorTest0)",
                        "test1796(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector82.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector40 and openMapRealVector5",
                        "java.lang.AssertionError: '2.0' != '1.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1195)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1249)"
                        ],
                        [
                            "ErrorTest0.test29(ErrorTest0.java:1277)"
                        ],
                        [
                            "RegressionTest3.test1796(RegressionTest3.java:14956)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch3-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch4-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4085,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch3-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-JGenProg2015-plausible",
                    "failing": 32,
                    "testrun": 1868,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test30(ErrorTest0)",
                        "test31(ErrorTest0)",
                        "test32(ErrorTest0)",
                        "test34(ErrorTest0)",
                        "test35(ErrorTest0)",
                        "test36(ErrorTest0)",
                        "test37(ErrorTest0)",
                        "test38(ErrorTest0)",
                        "test39(ErrorTest0)",
                        "test40(ErrorTest0)",
                        "test41(ErrorTest0)",
                        "test42(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector91.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector48 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector33 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector71 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector96.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector57.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector86 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector54.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector67 and openMapRealVector61.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:190)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:246)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:304)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:341)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:377)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:496)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:594)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:621)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:681)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:737)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:793)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:840)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:1010)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:1129)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1326)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1389)"
                        ],
                        [
                            "ErrorTest0.test30(ErrorTest0.java:1486)"
                        ],
                        [
                            "ErrorTest0.test31(ErrorTest0.java:1525)"
                        ],
                        [
                            "ErrorTest0.test32(ErrorTest0.java:1583)"
                        ],
                        [
                            "ErrorTest0.test34(ErrorTest0.java:1660)"
                        ],
                        [
                            "ErrorTest0.test35(ErrorTest0.java:1719)"
                        ],
                        [
                            "ErrorTest0.test36(ErrorTest0.java:1756)"
                        ],
                        [
                            "ErrorTest0.test37(ErrorTest0.java:1813)"
                        ],
                        [
                            "ErrorTest0.test38(ErrorTest0.java:1860)"
                        ],
                        [
                            "ErrorTest0.test39(ErrorTest0.java:1885)"
                        ],
                        [
                            "ErrorTest0.test40(ErrorTest0.java:1939)"
                        ],
                        [
                            "ErrorTest0.test41(ErrorTest0.java:1976)"
                        ],
                        [
                            "ErrorTest0.test42(ErrorTest0.java:1994)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch3-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-Nopol",
                    "failing": 28,
                    "testrun": 1814,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch3-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3896,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch3-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-DeepRepair",
                    "failing": 0,
                    "testrun": 3963,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch3-Math-49-Arja-plausible.patch",
                    "test": "test_from_PFL_patch130_99-Math-49-ARJA",
                    "failing": 26,
                    "testrun": 1877,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector77 and openMapRealVector74.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector64 and openMapRealVector35.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector81 and openMapRealVector78.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector83.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector12.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector94 and openMapRealVector67.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector69 and openMapRealVector60.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector53 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector43 and openMapRealVector30."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:118)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:155)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:187)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:239)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:283)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:336)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:373)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:428)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:442)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:502)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:536)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:580)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:624)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:647)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:678)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:743)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:761)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:805)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:852)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:883)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:929)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:998)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1031)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch3-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch6-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3960,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch3-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch7-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3670,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch3-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch15_1-Math-49-AVATAR",
                    "failing": 42,
                    "testrun": 3170,
                    "failings": [
                        "test0658(RegressionTest1)",
                        "test0720(RegressionTest1)",
                        "test0807(RegressionTest1)",
                        "test0905(RegressionTest1)",
                        "test0929(RegressionTest1)",
                        "test0953(RegressionTest1)",
                        "test0998(RegressionTest1)",
                        "test3065(RegressionTest6)",
                        "test1537(RegressionTest3)",
                        "test1569(RegressionTest3)",
                        "test1641(RegressionTest3)",
                        "test1649(RegressionTest3)",
                        "test1676(RegressionTest3)",
                        "test1790(RegressionTest3)",
                        "test1837(RegressionTest3)",
                        "test1900(RegressionTest3)",
                        "test1949(RegressionTest3)",
                        "test2514(RegressionTest5)",
                        "test2676(RegressionTest5)",
                        "test2934(RegressionTest5)",
                        "test2979(RegressionTest5)",
                        "test2034(RegressionTest4)",
                        "test2142(RegressionTest4)",
                        "test2150(RegressionTest4)",
                        "test2235(RegressionTest4)",
                        "test2347(RegressionTest4)",
                        "test1043(RegressionTest2)",
                        "test1107(RegressionTest2)",
                        "test1125(RegressionTest2)",
                        "test1275(RegressionTest2)",
                        "test1332(RegressionTest2)",
                        "test0014(RegressionTest0)",
                        "test0094(RegressionTest0)",
                        "test0114(RegressionTest0)",
                        "test0127(RegressionTest0)",
                        "test0196(RegressionTest0)",
                        "test0230(RegressionTest0)",
                        "test0257(RegressionTest0)",
                        "test0264(RegressionTest0)",
                        "test0286(RegressionTest0)",
                        "test0390(RegressionTest0)",
                        "test0466(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;"
                    ],
                    "failing_lines": [
                        [
                            "RegressionTest1.test0658(RegressionTest1.java:7482)"
                        ],
                        [
                            "RegressionTest1.test0720(RegressionTest1.java:10263)"
                        ],
                        [
                            "RegressionTest1.test0807(RegressionTest1.java:14565)"
                        ],
                        [
                            "RegressionTest1.test0905(RegressionTest1.java:19451)"
                        ],
                        [
                            "RegressionTest1.test0929(RegressionTest1.java:20507)"
                        ],
                        [
                            "RegressionTest1.test0953(RegressionTest1.java:21784)"
                        ],
                        [
                            "RegressionTest1.test0998(RegressionTest1.java:24164)"
                        ],
                        [
                            "RegressionTest6.test3065(RegressionTest6.java:2921)"
                        ],
                        [
                            "RegressionTest3.test1537(RegressionTest3.java:1978)"
                        ],
                        [
                            "RegressionTest3.test1569(RegressionTest3.java:3509)"
                        ],
                        [
                            "RegressionTest3.test1641(RegressionTest3.java:7304)"
                        ],
                        [
                            "RegressionTest3.test1649(RegressionTest3.java:7697)"
                        ],
                        [
                            "RegressionTest3.test1676(RegressionTest3.java:9079)"
                        ],
                        [
                            "RegressionTest3.test1790(RegressionTest3.java:14716)"
                        ],
                        [
                            "RegressionTest3.test1837(RegressionTest3.java:17098)"
                        ],
                        [
                            "RegressionTest3.test1900(RegressionTest3.java:20284)"
                        ],
                        [
                            "RegressionTest3.test1949(RegressionTest3.java:22668)"
                        ],
                        [
                            "RegressionTest5.test2514(RegressionTest5.java:729)"
                        ],
                        [
                            "RegressionTest5.test2676(RegressionTest5.java:8860)"
                        ],
                        [
                            "RegressionTest5.test2934(RegressionTest5.java:21266)"
                        ],
                        [
                            "RegressionTest5.test2979(RegressionTest5.java:23255)"
                        ],
                        [
                            "RegressionTest4.test2034(RegressionTest4.java:1667)"
                        ],
                        [
                            "RegressionTest4.test2142(RegressionTest4.java:6874)"
                        ],
                        [
                            "RegressionTest4.test2150(RegressionTest4.java:7269)"
                        ],
                        [
                            "RegressionTest4.test2235(RegressionTest4.java:11652)"
                        ],
                        [
                            "RegressionTest4.test2347(RegressionTest4.java:16909)"
                        ],
                        [
                            "RegressionTest2.test1043(RegressionTest2.java:2392)"
                        ],
                        [
                            "RegressionTest2.test1107(RegressionTest2.java:5597)"
                        ],
                        [
                            "RegressionTest2.test1125(RegressionTest2.java:6283)"
                        ],
                        [
                            "RegressionTest2.test1275(RegressionTest2.java:13952)"
                        ],
                        [
                            "RegressionTest2.test1332(RegressionTest2.java:16710)"
                        ],
                        [
                            "RegressionTest0.test0014(RegressionTest0.java:361)"
                        ],
                        [
                            "RegressionTest0.test0094(RegressionTest0.java:3140)"
                        ],
                        [
                            "RegressionTest0.test0114(RegressionTest0.java:3904)"
                        ],
                        [
                            "RegressionTest0.test0127(RegressionTest0.java:4366)"
                        ],
                        [
                            "RegressionTest0.test0196(RegressionTest0.java:7085)"
                        ],
                        [
                            "RegressionTest0.test0230(RegressionTest0.java:8366)"
                        ],
                        [
                            "RegressionTest0.test0257(RegressionTest0.java:9611)"
                        ],
                        [
                            "RegressionTest0.test0264(RegressionTest0.java:9914)"
                        ],
                        [
                            "RegressionTest0.test0286(RegressionTest0.java:10824)"
                        ],
                        [
                            "RegressionTest0.test0390(RegressionTest0.java:15385)"
                        ],
                        [
                            "RegressionTest0.test0466(RegressionTest0.java:18840)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch3-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-DynaMoth",
                    "failing": 28,
                    "testrun": 1818,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch3-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3346,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch3-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch7_7-Math-49-Kali-A",
                    "failing": 32,
                    "testrun": 2023,
                    "failings": [
                        "test008(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test0957(RegressionTest1)",
                        "test1567(RegressionTest3)",
                        "test1622(RegressionTest3)",
                        "test1688(RegressionTest3)",
                        "test1794(RegressionTest3)",
                        "test1880(RegressionTest3)",
                        "test1121(RegressionTest2)",
                        "test1300(RegressionTest2)",
                        "test1333(RegressionTest2)",
                        "test1356(RegressionTest2)",
                        "test1480(RegressionTest2)",
                        "test0132(RegressionTest0)",
                        "test0187(RegressionTest0)",
                        "test0301(RegressionTest0)",
                        "test0372(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector46.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector95 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector24.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector9.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector91 and openMapRealVector72.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector15 and openMapRealVector7.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector20.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector35 and openMapRealVector16.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector82 and openMapRealVector81.",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.5' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: index (101)",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.5' != '1.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test008(ErrorTest0.java:237)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:671)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:742)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1168)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:1585)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:1695)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:1900)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:3104)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:3623)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:3766)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:3929)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:3985)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:4055)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:4356)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:4452)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:5346)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:5487)"
                        ],
                        [
                            "RegressionTest1.test0957(RegressionTest1.java:24665)"
                        ],
                        [
                            "RegressionTest3.test1567(RegressionTest3.java:3405)"
                        ],
                        [
                            "RegressionTest3.test1622(RegressionTest3.java:6254)"
                        ],
                        [
                            "RegressionTest3.test1688(RegressionTest3.java:9544)"
                        ],
                        [
                            "RegressionTest3.test1794(RegressionTest3.java:14607)"
                        ],
                        [
                            "RegressionTest3.test1880(RegressionTest3.java:19167)"
                        ],
                        [
                            "RegressionTest2.test1121(RegressionTest2.java:6008)"
                        ],
                        [
                            "RegressionTest2.test1300(RegressionTest2.java:14896)"
                        ],
                        [
                            "RegressionTest2.test1333(RegressionTest2.java:16561)"
                        ],
                        [
                            "RegressionTest2.test1356(RegressionTest2.java:17513)"
                        ],
                        [
                            "RegressionTest2.test1480(RegressionTest2.java:23954)"
                        ],
                        [
                            "RegressionTest0.test0132(RegressionTest0.java:6324)"
                        ],
                        [
                            "RegressionTest0.test0187(RegressionTest0.java:9527)"
                        ],
                        [
                            "RegressionTest0.test0301(RegressionTest0.java:15878)"
                        ],
                        [
                            "RegressionTest0.test0372(RegressionTest0.java:19757)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch3-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch5-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4079,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch3-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3942,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 101.0
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch7-Math-49-Arja-plausible.patch",
            "project": "Math",
            "bugid": "49",
            "dataset": "patchesDRR",
            "date": "2021-11-22T20:26:04.360858",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch7-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-Nopol2015-plausible",
                    "failing": 30,
                    "testrun": 1836,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test29(ErrorTest0)",
                        "test1796(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector82.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector40 and openMapRealVector5",
                        "java.lang.AssertionError: '2.0' != '1.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1195)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1249)"
                        ],
                        [
                            "ErrorTest0.test29(ErrorTest0.java:1277)"
                        ],
                        [
                            "RegressionTest3.test1796(RegressionTest3.java:14956)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch7-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch4-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4085,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch7-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-JGenProg2015-plausible",
                    "failing": 32,
                    "testrun": 1868,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test30(ErrorTest0)",
                        "test31(ErrorTest0)",
                        "test32(ErrorTest0)",
                        "test34(ErrorTest0)",
                        "test35(ErrorTest0)",
                        "test36(ErrorTest0)",
                        "test37(ErrorTest0)",
                        "test38(ErrorTest0)",
                        "test39(ErrorTest0)",
                        "test40(ErrorTest0)",
                        "test41(ErrorTest0)",
                        "test42(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector91.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector48 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector33 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector71 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector96.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector57.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector86 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector54.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector67 and openMapRealVector61.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:190)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:246)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:304)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:341)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:377)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:496)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:594)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:621)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:681)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:737)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:793)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:840)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:1010)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:1129)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1326)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1389)"
                        ],
                        [
                            "ErrorTest0.test30(ErrorTest0.java:1486)"
                        ],
                        [
                            "ErrorTest0.test31(ErrorTest0.java:1525)"
                        ],
                        [
                            "ErrorTest0.test32(ErrorTest0.java:1583)"
                        ],
                        [
                            "ErrorTest0.test34(ErrorTest0.java:1660)"
                        ],
                        [
                            "ErrorTest0.test35(ErrorTest0.java:1719)"
                        ],
                        [
                            "ErrorTest0.test36(ErrorTest0.java:1756)"
                        ],
                        [
                            "ErrorTest0.test37(ErrorTest0.java:1813)"
                        ],
                        [
                            "ErrorTest0.test38(ErrorTest0.java:1860)"
                        ],
                        [
                            "ErrorTest0.test39(ErrorTest0.java:1885)"
                        ],
                        [
                            "ErrorTest0.test40(ErrorTest0.java:1939)"
                        ],
                        [
                            "ErrorTest0.test41(ErrorTest0.java:1976)"
                        ],
                        [
                            "ErrorTest0.test42(ErrorTest0.java:1994)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch7-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-Nopol",
                    "failing": 28,
                    "testrun": 1814,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch7-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3896,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch7-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-DeepRepair",
                    "failing": 0,
                    "testrun": 3963,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch7-Math-49-Arja-plausible.patch",
                    "test": "test_from_PFL_patch130_99-Math-49-ARJA",
                    "failing": 26,
                    "testrun": 1877,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector77 and openMapRealVector74.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector64 and openMapRealVector35.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector81 and openMapRealVector78.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector83.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector12.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector94 and openMapRealVector67.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector69 and openMapRealVector60.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector53 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector43 and openMapRealVector30."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:118)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:155)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:187)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:239)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:283)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:336)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:373)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:428)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:442)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:502)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:536)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:580)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:624)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:647)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:678)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:743)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:761)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:805)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:852)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:883)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:929)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:998)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1031)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch7-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch6-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3960,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch7-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch7-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3670,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch7-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch15_1-Math-49-AVATAR",
                    "failing": 42,
                    "testrun": 3170,
                    "failings": [
                        "test0658(RegressionTest1)",
                        "test0720(RegressionTest1)",
                        "test0807(RegressionTest1)",
                        "test0905(RegressionTest1)",
                        "test0929(RegressionTest1)",
                        "test0953(RegressionTest1)",
                        "test0998(RegressionTest1)",
                        "test3065(RegressionTest6)",
                        "test1537(RegressionTest3)",
                        "test1569(RegressionTest3)",
                        "test1641(RegressionTest3)",
                        "test1649(RegressionTest3)",
                        "test1676(RegressionTest3)",
                        "test1790(RegressionTest3)",
                        "test1837(RegressionTest3)",
                        "test1900(RegressionTest3)",
                        "test1949(RegressionTest3)",
                        "test2514(RegressionTest5)",
                        "test2676(RegressionTest5)",
                        "test2934(RegressionTest5)",
                        "test2979(RegressionTest5)",
                        "test2034(RegressionTest4)",
                        "test2142(RegressionTest4)",
                        "test2150(RegressionTest4)",
                        "test2235(RegressionTest4)",
                        "test2347(RegressionTest4)",
                        "test1043(RegressionTest2)",
                        "test1107(RegressionTest2)",
                        "test1125(RegressionTest2)",
                        "test1275(RegressionTest2)",
                        "test1332(RegressionTest2)",
                        "test0014(RegressionTest0)",
                        "test0094(RegressionTest0)",
                        "test0114(RegressionTest0)",
                        "test0127(RegressionTest0)",
                        "test0196(RegressionTest0)",
                        "test0230(RegressionTest0)",
                        "test0257(RegressionTest0)",
                        "test0264(RegressionTest0)",
                        "test0286(RegressionTest0)",
                        "test0390(RegressionTest0)",
                        "test0466(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;"
                    ],
                    "failing_lines": [
                        [
                            "RegressionTest1.test0658(RegressionTest1.java:7482)"
                        ],
                        [
                            "RegressionTest1.test0720(RegressionTest1.java:10263)"
                        ],
                        [
                            "RegressionTest1.test0807(RegressionTest1.java:14565)"
                        ],
                        [
                            "RegressionTest1.test0905(RegressionTest1.java:19451)"
                        ],
                        [
                            "RegressionTest1.test0929(RegressionTest1.java:20507)"
                        ],
                        [
                            "RegressionTest1.test0953(RegressionTest1.java:21784)"
                        ],
                        [
                            "RegressionTest1.test0998(RegressionTest1.java:24164)"
                        ],
                        [
                            "RegressionTest6.test3065(RegressionTest6.java:2921)"
                        ],
                        [
                            "RegressionTest3.test1537(RegressionTest3.java:1978)"
                        ],
                        [
                            "RegressionTest3.test1569(RegressionTest3.java:3509)"
                        ],
                        [
                            "RegressionTest3.test1641(RegressionTest3.java:7304)"
                        ],
                        [
                            "RegressionTest3.test1649(RegressionTest3.java:7697)"
                        ],
                        [
                            "RegressionTest3.test1676(RegressionTest3.java:9079)"
                        ],
                        [
                            "RegressionTest3.test1790(RegressionTest3.java:14716)"
                        ],
                        [
                            "RegressionTest3.test1837(RegressionTest3.java:17098)"
                        ],
                        [
                            "RegressionTest3.test1900(RegressionTest3.java:20284)"
                        ],
                        [
                            "RegressionTest3.test1949(RegressionTest3.java:22668)"
                        ],
                        [
                            "RegressionTest5.test2514(RegressionTest5.java:729)"
                        ],
                        [
                            "RegressionTest5.test2676(RegressionTest5.java:8860)"
                        ],
                        [
                            "RegressionTest5.test2934(RegressionTest5.java:21266)"
                        ],
                        [
                            "RegressionTest5.test2979(RegressionTest5.java:23255)"
                        ],
                        [
                            "RegressionTest4.test2034(RegressionTest4.java:1667)"
                        ],
                        [
                            "RegressionTest4.test2142(RegressionTest4.java:6874)"
                        ],
                        [
                            "RegressionTest4.test2150(RegressionTest4.java:7269)"
                        ],
                        [
                            "RegressionTest4.test2235(RegressionTest4.java:11652)"
                        ],
                        [
                            "RegressionTest4.test2347(RegressionTest4.java:16909)"
                        ],
                        [
                            "RegressionTest2.test1043(RegressionTest2.java:2392)"
                        ],
                        [
                            "RegressionTest2.test1107(RegressionTest2.java:5597)"
                        ],
                        [
                            "RegressionTest2.test1125(RegressionTest2.java:6283)"
                        ],
                        [
                            "RegressionTest2.test1275(RegressionTest2.java:13952)"
                        ],
                        [
                            "RegressionTest2.test1332(RegressionTest2.java:16710)"
                        ],
                        [
                            "RegressionTest0.test0014(RegressionTest0.java:361)"
                        ],
                        [
                            "RegressionTest0.test0094(RegressionTest0.java:3140)"
                        ],
                        [
                            "RegressionTest0.test0114(RegressionTest0.java:3904)"
                        ],
                        [
                            "RegressionTest0.test0127(RegressionTest0.java:4366)"
                        ],
                        [
                            "RegressionTest0.test0196(RegressionTest0.java:7085)"
                        ],
                        [
                            "RegressionTest0.test0230(RegressionTest0.java:8366)"
                        ],
                        [
                            "RegressionTest0.test0257(RegressionTest0.java:9611)"
                        ],
                        [
                            "RegressionTest0.test0264(RegressionTest0.java:9914)"
                        ],
                        [
                            "RegressionTest0.test0286(RegressionTest0.java:10824)"
                        ],
                        [
                            "RegressionTest0.test0390(RegressionTest0.java:15385)"
                        ],
                        [
                            "RegressionTest0.test0466(RegressionTest0.java:18840)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch7-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-DynaMoth",
                    "failing": 28,
                    "testrun": 1818,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch7-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3346,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch7-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch7_7-Math-49-Kali-A",
                    "failing": 32,
                    "testrun": 2023,
                    "failings": [
                        "test008(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test0957(RegressionTest1)",
                        "test1567(RegressionTest3)",
                        "test1622(RegressionTest3)",
                        "test1688(RegressionTest3)",
                        "test1794(RegressionTest3)",
                        "test1880(RegressionTest3)",
                        "test1121(RegressionTest2)",
                        "test1300(RegressionTest2)",
                        "test1333(RegressionTest2)",
                        "test1356(RegressionTest2)",
                        "test1480(RegressionTest2)",
                        "test0132(RegressionTest0)",
                        "test0187(RegressionTest0)",
                        "test0301(RegressionTest0)",
                        "test0372(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector46.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector95 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector24.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector9.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector91 and openMapRealVector72.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector15 and openMapRealVector7.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector20.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector35 and openMapRealVector16.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector82 and openMapRealVector81.",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.5' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: index (101)",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.5' != '1.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test008(ErrorTest0.java:237)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:671)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:742)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1168)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:1585)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:1695)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:1900)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:3104)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:3623)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:3766)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:3929)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:3985)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:4055)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:4356)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:4452)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:5346)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:5487)"
                        ],
                        [
                            "RegressionTest1.test0957(RegressionTest1.java:24665)"
                        ],
                        [
                            "RegressionTest3.test1567(RegressionTest3.java:3405)"
                        ],
                        [
                            "RegressionTest3.test1622(RegressionTest3.java:6254)"
                        ],
                        [
                            "RegressionTest3.test1688(RegressionTest3.java:9544)"
                        ],
                        [
                            "RegressionTest3.test1794(RegressionTest3.java:14607)"
                        ],
                        [
                            "RegressionTest3.test1880(RegressionTest3.java:19167)"
                        ],
                        [
                            "RegressionTest2.test1121(RegressionTest2.java:6008)"
                        ],
                        [
                            "RegressionTest2.test1300(RegressionTest2.java:14896)"
                        ],
                        [
                            "RegressionTest2.test1333(RegressionTest2.java:16561)"
                        ],
                        [
                            "RegressionTest2.test1356(RegressionTest2.java:17513)"
                        ],
                        [
                            "RegressionTest2.test1480(RegressionTest2.java:23954)"
                        ],
                        [
                            "RegressionTest0.test0132(RegressionTest0.java:6324)"
                        ],
                        [
                            "RegressionTest0.test0187(RegressionTest0.java:9527)"
                        ],
                        [
                            "RegressionTest0.test0301(RegressionTest0.java:15878)"
                        ],
                        [
                            "RegressionTest0.test0372(RegressionTest0.java:19757)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch7-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch5-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4079,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch7-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3942,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 100.47
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch6-Math-49-Arja-plausible.patch",
            "project": "Math",
            "bugid": "49",
            "dataset": "patchesDRR",
            "date": "2021-11-22T20:27:44.835323",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch6-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-Nopol2015-plausible",
                    "failing": 30,
                    "testrun": 1836,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test29(ErrorTest0)",
                        "test1796(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector82.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector40 and openMapRealVector5",
                        "java.lang.AssertionError: '2.0' != '1.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1195)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1249)"
                        ],
                        [
                            "ErrorTest0.test29(ErrorTest0.java:1277)"
                        ],
                        [
                            "RegressionTest3.test1796(RegressionTest3.java:14956)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch6-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch4-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4085,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch6-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-JGenProg2015-plausible",
                    "failing": 32,
                    "testrun": 1868,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test30(ErrorTest0)",
                        "test31(ErrorTest0)",
                        "test32(ErrorTest0)",
                        "test34(ErrorTest0)",
                        "test35(ErrorTest0)",
                        "test36(ErrorTest0)",
                        "test37(ErrorTest0)",
                        "test38(ErrorTest0)",
                        "test39(ErrorTest0)",
                        "test40(ErrorTest0)",
                        "test41(ErrorTest0)",
                        "test42(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector91.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector48 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector33 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector71 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector96.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector57.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector86 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector54.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector67 and openMapRealVector61.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:190)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:246)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:304)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:341)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:377)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:496)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:594)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:621)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:681)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:737)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:793)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:840)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:1010)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:1129)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1326)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1389)"
                        ],
                        [
                            "ErrorTest0.test30(ErrorTest0.java:1486)"
                        ],
                        [
                            "ErrorTest0.test31(ErrorTest0.java:1525)"
                        ],
                        [
                            "ErrorTest0.test32(ErrorTest0.java:1583)"
                        ],
                        [
                            "ErrorTest0.test34(ErrorTest0.java:1660)"
                        ],
                        [
                            "ErrorTest0.test35(ErrorTest0.java:1719)"
                        ],
                        [
                            "ErrorTest0.test36(ErrorTest0.java:1756)"
                        ],
                        [
                            "ErrorTest0.test37(ErrorTest0.java:1813)"
                        ],
                        [
                            "ErrorTest0.test38(ErrorTest0.java:1860)"
                        ],
                        [
                            "ErrorTest0.test39(ErrorTest0.java:1885)"
                        ],
                        [
                            "ErrorTest0.test40(ErrorTest0.java:1939)"
                        ],
                        [
                            "ErrorTest0.test41(ErrorTest0.java:1976)"
                        ],
                        [
                            "ErrorTest0.test42(ErrorTest0.java:1994)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch6-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-Nopol",
                    "failing": 28,
                    "testrun": 1814,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch6-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch3-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3896,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch6-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-DeepRepair",
                    "failing": 0,
                    "testrun": 3963,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch6-Math-49-Arja-plausible.patch",
                    "test": "test_from_PFL_patch130_99-Math-49-ARJA",
                    "failing": 26,
                    "testrun": 1877,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector77 and openMapRealVector74.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector64 and openMapRealVector35.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector81 and openMapRealVector78.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector83.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector12.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector94 and openMapRealVector67.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector69 and openMapRealVector60.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector53 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector43 and openMapRealVector30."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:118)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:155)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:187)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:239)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:283)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:336)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:373)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:428)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:442)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:502)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:536)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:580)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:624)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:647)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:678)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:743)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:761)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:805)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:852)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:883)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:929)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:998)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1031)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch6-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch6-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3960,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch6-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch7-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3670,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch6-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch15_1-Math-49-AVATAR",
                    "failing": 42,
                    "testrun": 3170,
                    "failings": [
                        "test0658(RegressionTest1)",
                        "test0720(RegressionTest1)",
                        "test0807(RegressionTest1)",
                        "test0905(RegressionTest1)",
                        "test0929(RegressionTest1)",
                        "test0953(RegressionTest1)",
                        "test0998(RegressionTest1)",
                        "test3065(RegressionTest6)",
                        "test1537(RegressionTest3)",
                        "test1569(RegressionTest3)",
                        "test1641(RegressionTest3)",
                        "test1649(RegressionTest3)",
                        "test1676(RegressionTest3)",
                        "test1790(RegressionTest3)",
                        "test1837(RegressionTest3)",
                        "test1900(RegressionTest3)",
                        "test1949(RegressionTest3)",
                        "test2514(RegressionTest5)",
                        "test2676(RegressionTest5)",
                        "test2934(RegressionTest5)",
                        "test2979(RegressionTest5)",
                        "test2034(RegressionTest4)",
                        "test2142(RegressionTest4)",
                        "test2150(RegressionTest4)",
                        "test2235(RegressionTest4)",
                        "test2347(RegressionTest4)",
                        "test1043(RegressionTest2)",
                        "test1107(RegressionTest2)",
                        "test1125(RegressionTest2)",
                        "test1275(RegressionTest2)",
                        "test1332(RegressionTest2)",
                        "test0014(RegressionTest0)",
                        "test0094(RegressionTest0)",
                        "test0114(RegressionTest0)",
                        "test0127(RegressionTest0)",
                        "test0196(RegressionTest0)",
                        "test0230(RegressionTest0)",
                        "test0257(RegressionTest0)",
                        "test0264(RegressionTest0)",
                        "test0286(RegressionTest0)",
                        "test0390(RegressionTest0)",
                        "test0466(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;"
                    ],
                    "failing_lines": [
                        [
                            "RegressionTest1.test0658(RegressionTest1.java:7482)"
                        ],
                        [
                            "RegressionTest1.test0720(RegressionTest1.java:10263)"
                        ],
                        [
                            "RegressionTest1.test0807(RegressionTest1.java:14565)"
                        ],
                        [
                            "RegressionTest1.test0905(RegressionTest1.java:19451)"
                        ],
                        [
                            "RegressionTest1.test0929(RegressionTest1.java:20507)"
                        ],
                        [
                            "RegressionTest1.test0953(RegressionTest1.java:21784)"
                        ],
                        [
                            "RegressionTest1.test0998(RegressionTest1.java:24164)"
                        ],
                        [
                            "RegressionTest6.test3065(RegressionTest6.java:2921)"
                        ],
                        [
                            "RegressionTest3.test1537(RegressionTest3.java:1978)"
                        ],
                        [
                            "RegressionTest3.test1569(RegressionTest3.java:3509)"
                        ],
                        [
                            "RegressionTest3.test1641(RegressionTest3.java:7304)"
                        ],
                        [
                            "RegressionTest3.test1649(RegressionTest3.java:7697)"
                        ],
                        [
                            "RegressionTest3.test1676(RegressionTest3.java:9079)"
                        ],
                        [
                            "RegressionTest3.test1790(RegressionTest3.java:14716)"
                        ],
                        [
                            "RegressionTest3.test1837(RegressionTest3.java:17098)"
                        ],
                        [
                            "RegressionTest3.test1900(RegressionTest3.java:20284)"
                        ],
                        [
                            "RegressionTest3.test1949(RegressionTest3.java:22668)"
                        ],
                        [
                            "RegressionTest5.test2514(RegressionTest5.java:729)"
                        ],
                        [
                            "RegressionTest5.test2676(RegressionTest5.java:8860)"
                        ],
                        [
                            "RegressionTest5.test2934(RegressionTest5.java:21266)"
                        ],
                        [
                            "RegressionTest5.test2979(RegressionTest5.java:23255)"
                        ],
                        [
                            "RegressionTest4.test2034(RegressionTest4.java:1667)"
                        ],
                        [
                            "RegressionTest4.test2142(RegressionTest4.java:6874)"
                        ],
                        [
                            "RegressionTest4.test2150(RegressionTest4.java:7269)"
                        ],
                        [
                            "RegressionTest4.test2235(RegressionTest4.java:11652)"
                        ],
                        [
                            "RegressionTest4.test2347(RegressionTest4.java:16909)"
                        ],
                        [
                            "RegressionTest2.test1043(RegressionTest2.java:2392)"
                        ],
                        [
                            "RegressionTest2.test1107(RegressionTest2.java:5597)"
                        ],
                        [
                            "RegressionTest2.test1125(RegressionTest2.java:6283)"
                        ],
                        [
                            "RegressionTest2.test1275(RegressionTest2.java:13952)"
                        ],
                        [
                            "RegressionTest2.test1332(RegressionTest2.java:16710)"
                        ],
                        [
                            "RegressionTest0.test0014(RegressionTest0.java:361)"
                        ],
                        [
                            "RegressionTest0.test0094(RegressionTest0.java:3140)"
                        ],
                        [
                            "RegressionTest0.test0114(RegressionTest0.java:3904)"
                        ],
                        [
                            "RegressionTest0.test0127(RegressionTest0.java:4366)"
                        ],
                        [
                            "RegressionTest0.test0196(RegressionTest0.java:7085)"
                        ],
                        [
                            "RegressionTest0.test0230(RegressionTest0.java:8366)"
                        ],
                        [
                            "RegressionTest0.test0257(RegressionTest0.java:9611)"
                        ],
                        [
                            "RegressionTest0.test0264(RegressionTest0.java:9914)"
                        ],
                        [
                            "RegressionTest0.test0286(RegressionTest0.java:10824)"
                        ],
                        [
                            "RegressionTest0.test0390(RegressionTest0.java:15385)"
                        ],
                        [
                            "RegressionTest0.test0466(RegressionTest0.java:18840)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch6-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-DynaMoth",
                    "failing": 28,
                    "testrun": 1818,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch6-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch2-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3346,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch6-Math-49-Arja-plausible.patch",
                    "test": "test_from_NFL_patch7_7-Math-49-Kali-A",
                    "failing": 32,
                    "testrun": 2023,
                    "failings": [
                        "test008(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test0957(RegressionTest1)",
                        "test1567(RegressionTest3)",
                        "test1622(RegressionTest3)",
                        "test1688(RegressionTest3)",
                        "test1794(RegressionTest3)",
                        "test1880(RegressionTest3)",
                        "test1121(RegressionTest2)",
                        "test1300(RegressionTest2)",
                        "test1333(RegressionTest2)",
                        "test1356(RegressionTest2)",
                        "test1480(RegressionTest2)",
                        "test0132(RegressionTest0)",
                        "test0187(RegressionTest0)",
                        "test0301(RegressionTest0)",
                        "test0372(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector46.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector95 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector24.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector9.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector91 and openMapRealVector72.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector15 and openMapRealVector7.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector20.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector35 and openMapRealVector16.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector82 and openMapRealVector81.",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.5' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: index (101)",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.5' != '1.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test008(ErrorTest0.java:237)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:671)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:742)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1168)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:1585)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:1695)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:1900)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:3104)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:3623)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:3766)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:3929)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:3985)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:4055)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:4356)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:4452)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:5346)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:5487)"
                        ],
                        [
                            "RegressionTest1.test0957(RegressionTest1.java:24665)"
                        ],
                        [
                            "RegressionTest3.test1567(RegressionTest3.java:3405)"
                        ],
                        [
                            "RegressionTest3.test1622(RegressionTest3.java:6254)"
                        ],
                        [
                            "RegressionTest3.test1688(RegressionTest3.java:9544)"
                        ],
                        [
                            "RegressionTest3.test1794(RegressionTest3.java:14607)"
                        ],
                        [
                            "RegressionTest3.test1880(RegressionTest3.java:19167)"
                        ],
                        [
                            "RegressionTest2.test1121(RegressionTest2.java:6008)"
                        ],
                        [
                            "RegressionTest2.test1300(RegressionTest2.java:14896)"
                        ],
                        [
                            "RegressionTest2.test1333(RegressionTest2.java:16561)"
                        ],
                        [
                            "RegressionTest2.test1356(RegressionTest2.java:17513)"
                        ],
                        [
                            "RegressionTest2.test1480(RegressionTest2.java:23954)"
                        ],
                        [
                            "RegressionTest0.test0132(RegressionTest0.java:6324)"
                        ],
                        [
                            "RegressionTest0.test0187(RegressionTest0.java:9527)"
                        ],
                        [
                            "RegressionTest0.test0301(RegressionTest0.java:15878)"
                        ],
                        [
                            "RegressionTest0.test0372(RegressionTest0.java:19757)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch6-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch5-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4079,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Arja/Math/patch6-Math-49-Arja-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3942,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 100.74
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/Nopol2015/Math/patch1-Math-49-Nopol2015-plausible.patch",
            "project": "Math",
            "bugid": "49",
            "dataset": "patchesDRR",
            "date": "2021-11-22T20:29:25.582572",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Nopol2015/Math/patch1-Math-49-Nopol2015-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-Nopol2015-plausible",
                    "failing": 29,
                    "testrun": 1836,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test29(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector82.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector40 and openMapRealVector5"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1195)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1249)"
                        ],
                        [
                            "ErrorTest0.test29(ErrorTest0.java:1277)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Nopol2015/Math/patch1-Math-49-Nopol2015-plausible.patch",
                    "test": "test_from_DRR_patch4-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4085,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Nopol2015/Math/patch1-Math-49-Nopol2015-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-JGenProg2015-plausible",
                    "failing": 60,
                    "testrun": 1868,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test29(ErrorTest0)",
                        "test30(ErrorTest0)",
                        "test31(ErrorTest0)",
                        "test32(ErrorTest0)",
                        "test33(ErrorTest0)",
                        "test34(ErrorTest0)",
                        "test35(ErrorTest0)",
                        "test36(ErrorTest0)",
                        "test37(ErrorTest0)",
                        "test38(ErrorTest0)",
                        "test39(ErrorTest0)",
                        "test40(ErrorTest0)",
                        "test41(ErrorTest0)",
                        "test42(ErrorTest0)",
                        "test0658(RegressionTest1)",
                        "test0774(RegressionTest1)",
                        "test0797(RegressionTest1)",
                        "test0812(RegressionTest1)",
                        "test0936(RegressionTest1)",
                        "test0949(RegressionTest1)",
                        "test0970(RegressionTest1)",
                        "test1534(RegressionTest3)",
                        "test1789(RegressionTest3)",
                        "test1795(RegressionTest3)",
                        "test1232(RegressionTest2)",
                        "test1274(RegressionTest2)",
                        "test1351(RegressionTest2)",
                        "test1358(RegressionTest2)",
                        "test1422(RegressionTest2)",
                        "test1468(RegressionTest2)",
                        "test0237(RegressionTest0)",
                        "test0339(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector91.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector48 and openMapRealVector50.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector33 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector45.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector71 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector96.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector57.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector86 and openMapRealVector2.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector54.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector67 and openMapRealVector61.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18.",
                        "org.junit.ComparisonFailure: expected:<[-1.0, []1.0]> but was:<[-1.0, [-]1.0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[-1.0, []1.0]> but was:<[-1.0, [-]1.0]>",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:122)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:190)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:246)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:304)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:341)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:377)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:435)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:496)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:532)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:594)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:621)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:681)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:737)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:793)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:840)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:897)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:1010)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:1067)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:1129)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1165)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1203)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1241)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1326)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1389)"
                        ],
                        [
                            "ErrorTest0.test29(ErrorTest0.java:1446)"
                        ],
                        [
                            "ErrorTest0.test30(ErrorTest0.java:1486)"
                        ],
                        [
                            "ErrorTest0.test31(ErrorTest0.java:1525)"
                        ],
                        [
                            "ErrorTest0.test32(ErrorTest0.java:1583)"
                        ],
                        [
                            "ErrorTest0.test33(ErrorTest0.java:1621)"
                        ],
                        [
                            "ErrorTest0.test34(ErrorTest0.java:1660)"
                        ],
                        [
                            "ErrorTest0.test35(ErrorTest0.java:1719)"
                        ],
                        [
                            "ErrorTest0.test36(ErrorTest0.java:1756)"
                        ],
                        [
                            "ErrorTest0.test37(ErrorTest0.java:1813)"
                        ],
                        [
                            "ErrorTest0.test38(ErrorTest0.java:1860)"
                        ],
                        [
                            "ErrorTest0.test39(ErrorTest0.java:1885)"
                        ],
                        [
                            "ErrorTest0.test40(ErrorTest0.java:1939)"
                        ],
                        [
                            "ErrorTest0.test41(ErrorTest0.java:1976)"
                        ],
                        [
                            "ErrorTest0.test42(ErrorTest0.java:1994)"
                        ],
                        [
                            "RegressionTest1.test0658(RegressionTest1.java:8692)"
                        ],
                        [
                            "RegressionTest1.test0774(RegressionTest1.java:15111)"
                        ],
                        [
                            "RegressionTest1.test0797(RegressionTest1.java:16114)"
                        ],
                        [
                            "RegressionTest1.test0812(RegressionTest1.java:16843)"
                        ],
                        [
                            "RegressionTest1.test0936(RegressionTest1.java:23342)"
                        ],
                        [
                            "RegressionTest1.test0949(RegressionTest1.java:24008)"
                        ],
                        [
                            "RegressionTest1.test0970(RegressionTest1.java:25134)"
                        ],
                        [
                            "RegressionTest3.test1534(RegressionTest3.java:1561)"
                        ],
                        [
                            "RegressionTest3.test1789(RegressionTest3.java:15131)"
                        ],
                        [
                            "RegressionTest3.test1795(RegressionTest3.java:15480)"
                        ],
                        [
                            "RegressionTest2.test1232(RegressionTest2.java:12019)"
                        ],
                        [
                            "RegressionTest2.test1274(RegressionTest2.java:13909)"
                        ],
                        [
                            "RegressionTest2.test1351(RegressionTest2.java:17937)"
                        ],
                        [
                            "RegressionTest2.test1358(RegressionTest2.java:18426)"
                        ],
                        [
                            "RegressionTest2.test1422(RegressionTest2.java:21944)"
                        ],
                        [
                            "RegressionTest2.test1468(RegressionTest2.java:24124)"
                        ],
                        [
                            "RegressionTest0.test0237(RegressionTest0.java:12427)"
                        ],
                        [
                            "RegressionTest0.test0339(RegressionTest0.java:18323)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Nopol2015/Math/patch1-Math-49-Nopol2015-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-Nopol",
                    "failing": 28,
                    "testrun": 1814,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Nopol2015/Math/patch1-Math-49-Nopol2015-plausible.patch",
                    "test": "test_from_DRR_patch3-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3896,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Nopol2015/Math/patch1-Math-49-Nopol2015-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-DeepRepair",
                    "failing": 0,
                    "testrun": 3963,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Nopol2015/Math/patch1-Math-49-Nopol2015-plausible.patch",
                    "test": "test_from_PFL_patch130_99-Math-49-ARJA",
                    "failing": 54,
                    "testrun": 1877,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test0679(RegressionTest1)",
                        "test0703(RegressionTest1)",
                        "test0708(RegressionTest1)",
                        "test0786(RegressionTest1)",
                        "test0833(RegressionTest1)",
                        "test0887(RegressionTest1)",
                        "test0954(RegressionTest1)",
                        "test1617(RegressionTest3)",
                        "test1653(RegressionTest3)",
                        "test1676(RegressionTest3)",
                        "test1684(RegressionTest3)",
                        "test1754(RegressionTest3)",
                        "test1791(RegressionTest3)",
                        "test1821(RegressionTest3)",
                        "test1016(RegressionTest2)",
                        "test1043(RegressionTest2)",
                        "test1057(RegressionTest2)",
                        "test1132(RegressionTest2)",
                        "test1195(RegressionTest2)",
                        "test1227(RegressionTest2)",
                        "test1321(RegressionTest2)",
                        "test1332(RegressionTest2)",
                        "test1336(RegressionTest2)",
                        "test1386(RegressionTest2)",
                        "test1440(RegressionTest2)",
                        "test1459(RegressionTest2)",
                        "test1478(RegressionTest2)",
                        "test0434(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector77 and openMapRealVector74.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector64 and openMapRealVector35.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector81 and openMapRealVector78.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector83.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector12.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector94 and openMapRealVector67.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector69 and openMapRealVector60.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector53 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector43 and openMapRealVector30.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: '100.0' != '99.0'",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:118)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:155)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:187)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:239)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:283)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:336)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:373)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:428)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:442)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:502)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:536)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:580)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:624)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:647)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:678)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:743)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:761)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:805)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:852)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:883)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:929)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:998)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1031)"
                        ],
                        [
                            "RegressionTest1.test0679(RegressionTest1.java:9366)"
                        ],
                        [
                            "RegressionTest1.test0703(RegressionTest1.java:10696)"
                        ],
                        [
                            "RegressionTest1.test0708(RegressionTest1.java:11060)"
                        ],
                        [
                            "RegressionTest1.test0786(RegressionTest1.java:15251)"
                        ],
                        [
                            "RegressionTest1.test0833(RegressionTest1.java:17643)"
                        ],
                        [
                            "RegressionTest1.test0887(RegressionTest1.java:20642)"
                        ],
                        [
                            "RegressionTest1.test0954(RegressionTest1.java:23986)"
                        ],
                        [
                            "RegressionTest3.test1617(RegressionTest3.java:6168)"
                        ],
                        [
                            "RegressionTest3.test1653(RegressionTest3.java:8271)"
                        ],
                        [
                            "RegressionTest3.test1676(RegressionTest3.java:9458)"
                        ],
                        [
                            "RegressionTest3.test1684(RegressionTest3.java:9815)"
                        ],
                        [
                            "RegressionTest3.test1754(RegressionTest3.java:13715)"
                        ],
                        [
                            "RegressionTest3.test1791(RegressionTest3.java:15620)"
                        ],
                        [
                            "RegressionTest3.test1821(RegressionTest3.java:17246)"
                        ],
                        [
                            "RegressionTest2.test1016(RegressionTest2.java:802)"
                        ],
                        [
                            "RegressionTest2.test1043(RegressionTest2.java:2271)"
                        ],
                        [
                            "RegressionTest2.test1057(RegressionTest2.java:2829)"
                        ],
                        [
                            "RegressionTest2.test1132(RegressionTest2.java:6433)"
                        ],
                        [
                            "RegressionTest2.test1195(RegressionTest2.java:9954)"
                        ],
                        [
                            "RegressionTest2.test1227(RegressionTest2.java:11818)"
                        ],
                        [
                            "RegressionTest2.test1321(RegressionTest2.java:16650)"
                        ],
                        [
                            "RegressionTest2.test1332(RegressionTest2.java:17190)"
                        ],
                        [
                            "RegressionTest2.test1336(RegressionTest2.java:17380)"
                        ],
                        [
                            "RegressionTest2.test1386(RegressionTest2.java:19943)"
                        ],
                        [
                            "RegressionTest2.test1440(RegressionTest2.java:22732)"
                        ],
                        [
                            "RegressionTest2.test1459(RegressionTest2.java:23951)"
                        ],
                        [
                            "RegressionTest2.test1478(RegressionTest2.java:25059)"
                        ],
                        [
                            "RegressionTest0.test0434(RegressionTest0.java:22983)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Nopol2015/Math/patch1-Math-49-Nopol2015-plausible.patch",
                    "test": "test_from_DRR_patch6-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3960,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Nopol2015/Math/patch1-Math-49-Nopol2015-plausible.patch",
                    "test": "test_from_DRR_patch7-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3670,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Nopol2015/Math/patch1-Math-49-Nopol2015-plausible.patch",
                    "test": "test_from_NFL_patch15_1-Math-49-AVATAR",
                    "failing": 42,
                    "testrun": 3170,
                    "failings": [
                        "test0658(RegressionTest1)",
                        "test0720(RegressionTest1)",
                        "test0807(RegressionTest1)",
                        "test0905(RegressionTest1)",
                        "test0929(RegressionTest1)",
                        "test0953(RegressionTest1)",
                        "test0998(RegressionTest1)",
                        "test3065(RegressionTest6)",
                        "test1537(RegressionTest3)",
                        "test1569(RegressionTest3)",
                        "test1641(RegressionTest3)",
                        "test1649(RegressionTest3)",
                        "test1676(RegressionTest3)",
                        "test1790(RegressionTest3)",
                        "test1837(RegressionTest3)",
                        "test1900(RegressionTest3)",
                        "test1949(RegressionTest3)",
                        "test2514(RegressionTest5)",
                        "test2676(RegressionTest5)",
                        "test2934(RegressionTest5)",
                        "test2979(RegressionTest5)",
                        "test2034(RegressionTest4)",
                        "test2142(RegressionTest4)",
                        "test2150(RegressionTest4)",
                        "test2235(RegressionTest4)",
                        "test2347(RegressionTest4)",
                        "test1043(RegressionTest2)",
                        "test1107(RegressionTest2)",
                        "test1125(RegressionTest2)",
                        "test1275(RegressionTest2)",
                        "test1332(RegressionTest2)",
                        "test0014(RegressionTest0)",
                        "test0094(RegressionTest0)",
                        "test0114(RegressionTest0)",
                        "test0127(RegressionTest0)",
                        "test0196(RegressionTest0)",
                        "test0230(RegressionTest0)",
                        "test0257(RegressionTest0)",
                        "test0264(RegressionTest0)",
                        "test0286(RegressionTest0)",
                        "test0390(RegressionTest0)",
                        "test0466(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;"
                    ],
                    "failing_lines": [
                        [
                            "RegressionTest1.test0658(RegressionTest1.java:7482)"
                        ],
                        [
                            "RegressionTest1.test0720(RegressionTest1.java:10263)"
                        ],
                        [
                            "RegressionTest1.test0807(RegressionTest1.java:14565)"
                        ],
                        [
                            "RegressionTest1.test0905(RegressionTest1.java:19451)"
                        ],
                        [
                            "RegressionTest1.test0929(RegressionTest1.java:20507)"
                        ],
                        [
                            "RegressionTest1.test0953(RegressionTest1.java:21784)"
                        ],
                        [
                            "RegressionTest1.test0998(RegressionTest1.java:24164)"
                        ],
                        [
                            "RegressionTest6.test3065(RegressionTest6.java:2921)"
                        ],
                        [
                            "RegressionTest3.test1537(RegressionTest3.java:1978)"
                        ],
                        [
                            "RegressionTest3.test1569(RegressionTest3.java:3509)"
                        ],
                        [
                            "RegressionTest3.test1641(RegressionTest3.java:7304)"
                        ],
                        [
                            "RegressionTest3.test1649(RegressionTest3.java:7697)"
                        ],
                        [
                            "RegressionTest3.test1676(RegressionTest3.java:9079)"
                        ],
                        [
                            "RegressionTest3.test1790(RegressionTest3.java:14716)"
                        ],
                        [
                            "RegressionTest3.test1837(RegressionTest3.java:17098)"
                        ],
                        [
                            "RegressionTest3.test1900(RegressionTest3.java:20284)"
                        ],
                        [
                            "RegressionTest3.test1949(RegressionTest3.java:22668)"
                        ],
                        [
                            "RegressionTest5.test2514(RegressionTest5.java:729)"
                        ],
                        [
                            "RegressionTest5.test2676(RegressionTest5.java:8860)"
                        ],
                        [
                            "RegressionTest5.test2934(RegressionTest5.java:21266)"
                        ],
                        [
                            "RegressionTest5.test2979(RegressionTest5.java:23255)"
                        ],
                        [
                            "RegressionTest4.test2034(RegressionTest4.java:1667)"
                        ],
                        [
                            "RegressionTest4.test2142(RegressionTest4.java:6874)"
                        ],
                        [
                            "RegressionTest4.test2150(RegressionTest4.java:7269)"
                        ],
                        [
                            "RegressionTest4.test2235(RegressionTest4.java:11652)"
                        ],
                        [
                            "RegressionTest4.test2347(RegressionTest4.java:16909)"
                        ],
                        [
                            "RegressionTest2.test1043(RegressionTest2.java:2392)"
                        ],
                        [
                            "RegressionTest2.test1107(RegressionTest2.java:5597)"
                        ],
                        [
                            "RegressionTest2.test1125(RegressionTest2.java:6283)"
                        ],
                        [
                            "RegressionTest2.test1275(RegressionTest2.java:13952)"
                        ],
                        [
                            "RegressionTest2.test1332(RegressionTest2.java:16710)"
                        ],
                        [
                            "RegressionTest0.test0014(RegressionTest0.java:361)"
                        ],
                        [
                            "RegressionTest0.test0094(RegressionTest0.java:3140)"
                        ],
                        [
                            "RegressionTest0.test0114(RegressionTest0.java:3904)"
                        ],
                        [
                            "RegressionTest0.test0127(RegressionTest0.java:4366)"
                        ],
                        [
                            "RegressionTest0.test0196(RegressionTest0.java:7085)"
                        ],
                        [
                            "RegressionTest0.test0230(RegressionTest0.java:8366)"
                        ],
                        [
                            "RegressionTest0.test0257(RegressionTest0.java:9611)"
                        ],
                        [
                            "RegressionTest0.test0264(RegressionTest0.java:9914)"
                        ],
                        [
                            "RegressionTest0.test0286(RegressionTest0.java:10824)"
                        ],
                        [
                            "RegressionTest0.test0390(RegressionTest0.java:15385)"
                        ],
                        [
                            "RegressionTest0.test0466(RegressionTest0.java:18840)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Nopol2015/Math/patch1-Math-49-Nopol2015-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-DynaMoth",
                    "failing": 28,
                    "testrun": 1818,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Nopol2015/Math/patch1-Math-49-Nopol2015-plausible.patch",
                    "test": "test_from_DRR_patch2-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3346,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Nopol2015/Math/patch1-Math-49-Nopol2015-plausible.patch",
                    "test": "test_from_NFL_patch7_7-Math-49-Kali-A",
                    "failing": 37,
                    "testrun": 2023,
                    "failings": [
                        "test008(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test0695(RegressionTest1)",
                        "test0726(RegressionTest1)",
                        "test0957(RegressionTest1)",
                        "test0979(RegressionTest1)",
                        "test1567(RegressionTest3)",
                        "test1622(RegressionTest3)",
                        "test1688(RegressionTest3)",
                        "test1880(RegressionTest3)",
                        "test1044(RegressionTest2)",
                        "test1121(RegressionTest2)",
                        "test1300(RegressionTest2)",
                        "test1333(RegressionTest2)",
                        "test1356(RegressionTest2)",
                        "test1408(RegressionTest2)",
                        "test1480(RegressionTest2)",
                        "test0132(RegressionTest0)",
                        "test0187(RegressionTest0)",
                        "test0301(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector46.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector24.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector9.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector91 and openMapRealVector72.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector15 and openMapRealVector7.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector20.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector35 and openMapRealVector16.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector82 and openMapRealVector81.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: index (101)",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '110.92980307021926' != '110.90761932797945'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test008(ErrorTest0.java:237)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:671)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:742)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1168)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:1583)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:1695)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:1900)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:3104)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:3173)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:3623)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:3766)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:3929)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:3985)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:4055)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:4356)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:4452)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:4645)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:5346)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:5487)"
                        ],
                        [
                            "RegressionTest1.test0695(RegressionTest1.java:10855)"
                        ],
                        [
                            "RegressionTest1.test0726(RegressionTest1.java:12633)"
                        ],
                        [
                            "RegressionTest1.test0957(RegressionTest1.java:24665)"
                        ],
                        [
                            "RegressionTest1.test0979(RegressionTest1.java:25958)"
                        ],
                        [
                            "RegressionTest3.test1567(RegressionTest3.java:3405)"
                        ],
                        [
                            "RegressionTest3.test1622(RegressionTest3.java:6254)"
                        ],
                        [
                            "RegressionTest3.test1688(RegressionTest3.java:9544)"
                        ],
                        [
                            "RegressionTest3.test1880(RegressionTest3.java:19167)"
                        ],
                        [
                            "RegressionTest2.test1044(RegressionTest2.java:2283)"
                        ],
                        [
                            "RegressionTest2.test1121(RegressionTest2.java:6008)"
                        ],
                        [
                            "RegressionTest2.test1300(RegressionTest2.java:14896)"
                        ],
                        [
                            "RegressionTest2.test1333(RegressionTest2.java:16561)"
                        ],
                        [
                            "RegressionTest2.test1356(RegressionTest2.java:17513)"
                        ],
                        [
                            "RegressionTest2.test1408(RegressionTest2.java:20283)"
                        ],
                        [
                            "RegressionTest2.test1480(RegressionTest2.java:23954)"
                        ],
                        [
                            "RegressionTest0.test0132(RegressionTest0.java:6324)"
                        ],
                        [
                            "RegressionTest0.test0187(RegressionTest0.java:9527)"
                        ],
                        [
                            "RegressionTest0.test0301(RegressionTest0.java:15878)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Nopol2015/Math/patch1-Math-49-Nopol2015-plausible.patch",
                    "test": "test_from_DRR_patch5-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4079,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/Nopol2015/Math/patch1-Math-49-Nopol2015-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3942,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 101.17
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Math/patch1-Math-49-DeepRepair.patch",
            "project": "Math",
            "bugid": "49",
            "dataset": "patchesDRR",
            "date": "2021-11-22T20:31:06.757216",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Math/patch1-Math-49-DeepRepair.patch",
                    "test": "test_from_DRR_patch1-Math-49-Nopol2015-plausible",
                    "failing": 30,
                    "testrun": 1836,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test29(ErrorTest0)",
                        "test1796(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector82.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector40 and openMapRealVector5",
                        "java.lang.AssertionError: '2.0' != '1.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1195)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1249)"
                        ],
                        [
                            "ErrorTest0.test29(ErrorTest0.java:1277)"
                        ],
                        [
                            "RegressionTest3.test1796(RegressionTest3.java:14956)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Math/patch1-Math-49-DeepRepair.patch",
                    "test": "test_from_DRR_patch4-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4085,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Math/patch1-Math-49-DeepRepair.patch",
                    "test": "test_from_DRR_patch1-Math-49-JGenProg2015-plausible",
                    "failing": 32,
                    "testrun": 1868,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test30(ErrorTest0)",
                        "test31(ErrorTest0)",
                        "test32(ErrorTest0)",
                        "test34(ErrorTest0)",
                        "test35(ErrorTest0)",
                        "test36(ErrorTest0)",
                        "test37(ErrorTest0)",
                        "test38(ErrorTest0)",
                        "test39(ErrorTest0)",
                        "test40(ErrorTest0)",
                        "test41(ErrorTest0)",
                        "test42(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector91.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector48 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector33 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector71 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector96.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector57.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector86 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector54.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector67 and openMapRealVector61.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:190)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:246)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:304)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:341)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:377)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:496)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:594)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:621)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:681)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:737)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:793)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:840)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:1010)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:1129)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1326)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1389)"
                        ],
                        [
                            "ErrorTest0.test30(ErrorTest0.java:1486)"
                        ],
                        [
                            "ErrorTest0.test31(ErrorTest0.java:1525)"
                        ],
                        [
                            "ErrorTest0.test32(ErrorTest0.java:1583)"
                        ],
                        [
                            "ErrorTest0.test34(ErrorTest0.java:1660)"
                        ],
                        [
                            "ErrorTest0.test35(ErrorTest0.java:1719)"
                        ],
                        [
                            "ErrorTest0.test36(ErrorTest0.java:1756)"
                        ],
                        [
                            "ErrorTest0.test37(ErrorTest0.java:1813)"
                        ],
                        [
                            "ErrorTest0.test38(ErrorTest0.java:1860)"
                        ],
                        [
                            "ErrorTest0.test39(ErrorTest0.java:1885)"
                        ],
                        [
                            "ErrorTest0.test40(ErrorTest0.java:1939)"
                        ],
                        [
                            "ErrorTest0.test41(ErrorTest0.java:1976)"
                        ],
                        [
                            "ErrorTest0.test42(ErrorTest0.java:1994)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Math/patch1-Math-49-DeepRepair.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-Nopol",
                    "failing": 28,
                    "testrun": 1814,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Math/patch1-Math-49-DeepRepair.patch",
                    "test": "test_from_DRR_patch3-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3896,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Math/patch1-Math-49-DeepRepair.patch",
                    "test": "test_from_DRR_patch1-Math-49-DeepRepair",
                    "failing": 0,
                    "testrun": 3963,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Math/patch1-Math-49-DeepRepair.patch",
                    "test": "test_from_PFL_patch130_99-Math-49-ARJA",
                    "failing": 26,
                    "testrun": 1877,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector77 and openMapRealVector74.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector64 and openMapRealVector35.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector81 and openMapRealVector78.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector83.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector12.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector94 and openMapRealVector67.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector69 and openMapRealVector60.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector53 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector43 and openMapRealVector30."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:118)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:155)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:187)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:239)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:283)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:336)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:373)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:428)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:442)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:502)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:536)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:580)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:624)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:647)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:678)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:743)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:761)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:805)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:852)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:883)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:929)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:998)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1031)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Math/patch1-Math-49-DeepRepair.patch",
                    "test": "test_from_DRR_patch6-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3960,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Math/patch1-Math-49-DeepRepair.patch",
                    "test": "test_from_DRR_patch7-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3670,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Math/patch1-Math-49-DeepRepair.patch",
                    "test": "test_from_NFL_patch15_1-Math-49-AVATAR",
                    "failing": 42,
                    "testrun": 3170,
                    "failings": [
                        "test0658(RegressionTest1)",
                        "test0720(RegressionTest1)",
                        "test0807(RegressionTest1)",
                        "test0905(RegressionTest1)",
                        "test0929(RegressionTest1)",
                        "test0953(RegressionTest1)",
                        "test0998(RegressionTest1)",
                        "test3065(RegressionTest6)",
                        "test1537(RegressionTest3)",
                        "test1569(RegressionTest3)",
                        "test1641(RegressionTest3)",
                        "test1649(RegressionTest3)",
                        "test1676(RegressionTest3)",
                        "test1790(RegressionTest3)",
                        "test1837(RegressionTest3)",
                        "test1900(RegressionTest3)",
                        "test1949(RegressionTest3)",
                        "test2514(RegressionTest5)",
                        "test2676(RegressionTest5)",
                        "test2934(RegressionTest5)",
                        "test2979(RegressionTest5)",
                        "test2034(RegressionTest4)",
                        "test2142(RegressionTest4)",
                        "test2150(RegressionTest4)",
                        "test2235(RegressionTest4)",
                        "test2347(RegressionTest4)",
                        "test1043(RegressionTest2)",
                        "test1107(RegressionTest2)",
                        "test1125(RegressionTest2)",
                        "test1275(RegressionTest2)",
                        "test1332(RegressionTest2)",
                        "test0014(RegressionTest0)",
                        "test0094(RegressionTest0)",
                        "test0114(RegressionTest0)",
                        "test0127(RegressionTest0)",
                        "test0196(RegressionTest0)",
                        "test0230(RegressionTest0)",
                        "test0257(RegressionTest0)",
                        "test0264(RegressionTest0)",
                        "test0286(RegressionTest0)",
                        "test0390(RegressionTest0)",
                        "test0466(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;"
                    ],
                    "failing_lines": [
                        [
                            "RegressionTest1.test0658(RegressionTest1.java:7482)"
                        ],
                        [
                            "RegressionTest1.test0720(RegressionTest1.java:10263)"
                        ],
                        [
                            "RegressionTest1.test0807(RegressionTest1.java:14565)"
                        ],
                        [
                            "RegressionTest1.test0905(RegressionTest1.java:19451)"
                        ],
                        [
                            "RegressionTest1.test0929(RegressionTest1.java:20507)"
                        ],
                        [
                            "RegressionTest1.test0953(RegressionTest1.java:21784)"
                        ],
                        [
                            "RegressionTest1.test0998(RegressionTest1.java:24164)"
                        ],
                        [
                            "RegressionTest6.test3065(RegressionTest6.java:2921)"
                        ],
                        [
                            "RegressionTest3.test1537(RegressionTest3.java:1978)"
                        ],
                        [
                            "RegressionTest3.test1569(RegressionTest3.java:3509)"
                        ],
                        [
                            "RegressionTest3.test1641(RegressionTest3.java:7304)"
                        ],
                        [
                            "RegressionTest3.test1649(RegressionTest3.java:7697)"
                        ],
                        [
                            "RegressionTest3.test1676(RegressionTest3.java:9079)"
                        ],
                        [
                            "RegressionTest3.test1790(RegressionTest3.java:14716)"
                        ],
                        [
                            "RegressionTest3.test1837(RegressionTest3.java:17098)"
                        ],
                        [
                            "RegressionTest3.test1900(RegressionTest3.java:20284)"
                        ],
                        [
                            "RegressionTest3.test1949(RegressionTest3.java:22668)"
                        ],
                        [
                            "RegressionTest5.test2514(RegressionTest5.java:729)"
                        ],
                        [
                            "RegressionTest5.test2676(RegressionTest5.java:8860)"
                        ],
                        [
                            "RegressionTest5.test2934(RegressionTest5.java:21266)"
                        ],
                        [
                            "RegressionTest5.test2979(RegressionTest5.java:23255)"
                        ],
                        [
                            "RegressionTest4.test2034(RegressionTest4.java:1667)"
                        ],
                        [
                            "RegressionTest4.test2142(RegressionTest4.java:6874)"
                        ],
                        [
                            "RegressionTest4.test2150(RegressionTest4.java:7269)"
                        ],
                        [
                            "RegressionTest4.test2235(RegressionTest4.java:11652)"
                        ],
                        [
                            "RegressionTest4.test2347(RegressionTest4.java:16909)"
                        ],
                        [
                            "RegressionTest2.test1043(RegressionTest2.java:2392)"
                        ],
                        [
                            "RegressionTest2.test1107(RegressionTest2.java:5597)"
                        ],
                        [
                            "RegressionTest2.test1125(RegressionTest2.java:6283)"
                        ],
                        [
                            "RegressionTest2.test1275(RegressionTest2.java:13952)"
                        ],
                        [
                            "RegressionTest2.test1332(RegressionTest2.java:16710)"
                        ],
                        [
                            "RegressionTest0.test0014(RegressionTest0.java:361)"
                        ],
                        [
                            "RegressionTest0.test0094(RegressionTest0.java:3140)"
                        ],
                        [
                            "RegressionTest0.test0114(RegressionTest0.java:3904)"
                        ],
                        [
                            "RegressionTest0.test0127(RegressionTest0.java:4366)"
                        ],
                        [
                            "RegressionTest0.test0196(RegressionTest0.java:7085)"
                        ],
                        [
                            "RegressionTest0.test0230(RegressionTest0.java:8366)"
                        ],
                        [
                            "RegressionTest0.test0257(RegressionTest0.java:9611)"
                        ],
                        [
                            "RegressionTest0.test0264(RegressionTest0.java:9914)"
                        ],
                        [
                            "RegressionTest0.test0286(RegressionTest0.java:10824)"
                        ],
                        [
                            "RegressionTest0.test0390(RegressionTest0.java:15385)"
                        ],
                        [
                            "RegressionTest0.test0466(RegressionTest0.java:18840)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Math/patch1-Math-49-DeepRepair.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-DynaMoth",
                    "failing": 28,
                    "testrun": 1818,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Math/patch1-Math-49-DeepRepair.patch",
                    "test": "test_from_DRR_patch2-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3346,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Math/patch1-Math-49-DeepRepair.patch",
                    "test": "test_from_NFL_patch7_7-Math-49-Kali-A",
                    "failing": 32,
                    "testrun": 2023,
                    "failings": [
                        "test008(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test0957(RegressionTest1)",
                        "test1567(RegressionTest3)",
                        "test1622(RegressionTest3)",
                        "test1688(RegressionTest3)",
                        "test1794(RegressionTest3)",
                        "test1880(RegressionTest3)",
                        "test1121(RegressionTest2)",
                        "test1300(RegressionTest2)",
                        "test1333(RegressionTest2)",
                        "test1356(RegressionTest2)",
                        "test1480(RegressionTest2)",
                        "test0132(RegressionTest0)",
                        "test0187(RegressionTest0)",
                        "test0301(RegressionTest0)",
                        "test0372(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector46.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector95 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector24.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector9.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector91 and openMapRealVector72.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector15 and openMapRealVector7.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector20.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector35 and openMapRealVector16.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector82 and openMapRealVector81.",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.5' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: index (101)",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.5' != '1.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test008(ErrorTest0.java:237)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:671)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:742)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1168)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:1585)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:1695)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:1900)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:3104)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:3623)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:3766)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:3929)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:3985)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:4055)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:4356)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:4452)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:5346)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:5487)"
                        ],
                        [
                            "RegressionTest1.test0957(RegressionTest1.java:24665)"
                        ],
                        [
                            "RegressionTest3.test1567(RegressionTest3.java:3405)"
                        ],
                        [
                            "RegressionTest3.test1622(RegressionTest3.java:6254)"
                        ],
                        [
                            "RegressionTest3.test1688(RegressionTest3.java:9544)"
                        ],
                        [
                            "RegressionTest3.test1794(RegressionTest3.java:14607)"
                        ],
                        [
                            "RegressionTest3.test1880(RegressionTest3.java:19167)"
                        ],
                        [
                            "RegressionTest2.test1121(RegressionTest2.java:6008)"
                        ],
                        [
                            "RegressionTest2.test1300(RegressionTest2.java:14896)"
                        ],
                        [
                            "RegressionTest2.test1333(RegressionTest2.java:16561)"
                        ],
                        [
                            "RegressionTest2.test1356(RegressionTest2.java:17513)"
                        ],
                        [
                            "RegressionTest2.test1480(RegressionTest2.java:23954)"
                        ],
                        [
                            "RegressionTest0.test0132(RegressionTest0.java:6324)"
                        ],
                        [
                            "RegressionTest0.test0187(RegressionTest0.java:9527)"
                        ],
                        [
                            "RegressionTest0.test0301(RegressionTest0.java:15878)"
                        ],
                        [
                            "RegressionTest0.test0372(RegressionTest0.java:19757)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Math/patch1-Math-49-DeepRepair.patch",
                    "test": "test_from_DRR_patch5-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4079,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/DeepRepair/Math/patch1-Math-49-DeepRepair.patch",
                    "test": "test_from_DRR_patch1-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3942,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 100.62
        },
        {
            "patch": "/Patches/patchesDRR/Doverfitting/JGenProg2015/Math/patch1-Math-49-JGenProg2015-plausible.patch",
            "project": "Math",
            "bugid": "49",
            "dataset": "patchesDRR",
            "date": "2021-11-22T20:32:47.382283",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/JGenProg2015/Math/patch1-Math-49-JGenProg2015-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-Nopol2015-plausible",
                    "failing": 28,
                    "testrun": 1836,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test29(ErrorTest0)",
                        "test1796(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector82.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector40 and openMapRealVector5",
                        "java.lang.AssertionError: '2.0' != '1.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1195)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1249)"
                        ],
                        [
                            "ErrorTest0.test29(ErrorTest0.java:1277)"
                        ],
                        [
                            "RegressionTest3.test1796(RegressionTest3.java:14956)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/JGenProg2015/Math/patch1-Math-49-JGenProg2015-plausible.patch",
                    "test": "test_from_DRR_patch4-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4085,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/JGenProg2015/Math/patch1-Math-49-JGenProg2015-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-JGenProg2015-plausible",
                    "failing": 42,
                    "testrun": 1868,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test29(ErrorTest0)",
                        "test30(ErrorTest0)",
                        "test31(ErrorTest0)",
                        "test32(ErrorTest0)",
                        "test33(ErrorTest0)",
                        "test34(ErrorTest0)",
                        "test35(ErrorTest0)",
                        "test36(ErrorTest0)",
                        "test37(ErrorTest0)",
                        "test38(ErrorTest0)",
                        "test39(ErrorTest0)",
                        "test40(ErrorTest0)",
                        "test41(ErrorTest0)",
                        "test42(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector53",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector91.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector48 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector90",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector53",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector33 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector90",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector90",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector53",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector71 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector96.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector90",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector57.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector86 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector7 and openMapRealVector58",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector54.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector67 and openMapRealVector61.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:135)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:190)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:246)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:304)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:341)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:377)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:438)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:496)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:534)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:594)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:621)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:681)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:737)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:793)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:840)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:900)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:1010)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:1070)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:1129)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1167)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1205)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1243)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1326)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1389)"
                        ],
                        [
                            "ErrorTest0.test29(ErrorTest0.java:1449)"
                        ],
                        [
                            "ErrorTest0.test30(ErrorTest0.java:1486)"
                        ],
                        [
                            "ErrorTest0.test31(ErrorTest0.java:1525)"
                        ],
                        [
                            "ErrorTest0.test32(ErrorTest0.java:1583)"
                        ],
                        [
                            "ErrorTest0.test33(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test34(ErrorTest0.java:1660)"
                        ],
                        [
                            "ErrorTest0.test35(ErrorTest0.java:1719)"
                        ],
                        [
                            "ErrorTest0.test36(ErrorTest0.java:1756)"
                        ],
                        [
                            "ErrorTest0.test37(ErrorTest0.java:1813)"
                        ],
                        [
                            "ErrorTest0.test38(ErrorTest0.java:1860)"
                        ],
                        [
                            "ErrorTest0.test39(ErrorTest0.java:1885)"
                        ],
                        [
                            "ErrorTest0.test40(ErrorTest0.java:1939)"
                        ],
                        [
                            "ErrorTest0.test41(ErrorTest0.java:1976)"
                        ],
                        [
                            "ErrorTest0.test42(ErrorTest0.java:1994)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/JGenProg2015/Math/patch1-Math-49-JGenProg2015-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-Nopol",
                    "failing": 26,
                    "testrun": 1814,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/JGenProg2015/Math/patch1-Math-49-JGenProg2015-plausible.patch",
                    "test": "test_from_DRR_patch3-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3896,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/JGenProg2015/Math/patch1-Math-49-JGenProg2015-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-DeepRepair",
                    "failing": 0,
                    "testrun": 3963,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/JGenProg2015/Math/patch1-Math-49-JGenProg2015-plausible.patch",
                    "test": "test_from_PFL_patch130_99-Math-49-ARJA",
                    "failing": 28,
                    "testrun": 1877,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test0610(RegressionTest1)",
                        "test0441(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector77 and openMapRealVector74.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector64 and openMapRealVector35.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector81 and openMapRealVector78.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector83.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector12.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector94 and openMapRealVector67.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector69 and openMapRealVector60.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector53 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector43 and openMapRealVector30.",
                        "java.lang.ArrayIndexOutOfBoundsException: 2",
                        "java.lang.AssertionError: '1.0' != '0.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:118)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:155)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:187)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:239)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:283)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:336)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:373)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:428)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:442)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:502)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:536)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:580)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:624)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:647)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:678)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:743)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:761)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:805)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:852)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:883)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:929)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:998)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1031)"
                        ],
                        [
                            "RegressionTest1.test0610(RegressionTest1.java:5961)"
                        ],
                        [
                            "RegressionTest0.test0441(RegressionTest0.java:23432)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/JGenProg2015/Math/patch1-Math-49-JGenProg2015-plausible.patch",
                    "test": "test_from_DRR_patch6-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3960,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/JGenProg2015/Math/patch1-Math-49-JGenProg2015-plausible.patch",
                    "test": "test_from_DRR_patch7-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3670,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/JGenProg2015/Math/patch1-Math-49-JGenProg2015-plausible.patch",
                    "test": "test_from_NFL_patch15_1-Math-49-AVATAR",
                    "failing": 42,
                    "testrun": 3170,
                    "failings": [
                        "test0658(RegressionTest1)",
                        "test0720(RegressionTest1)",
                        "test0807(RegressionTest1)",
                        "test0905(RegressionTest1)",
                        "test0929(RegressionTest1)",
                        "test0953(RegressionTest1)",
                        "test0998(RegressionTest1)",
                        "test3065(RegressionTest6)",
                        "test1537(RegressionTest3)",
                        "test1569(RegressionTest3)",
                        "test1641(RegressionTest3)",
                        "test1649(RegressionTest3)",
                        "test1676(RegressionTest3)",
                        "test1790(RegressionTest3)",
                        "test1837(RegressionTest3)",
                        "test1900(RegressionTest3)",
                        "test1949(RegressionTest3)",
                        "test2514(RegressionTest5)",
                        "test2676(RegressionTest5)",
                        "test2934(RegressionTest5)",
                        "test2979(RegressionTest5)",
                        "test2034(RegressionTest4)",
                        "test2142(RegressionTest4)",
                        "test2150(RegressionTest4)",
                        "test2235(RegressionTest4)",
                        "test2347(RegressionTest4)",
                        "test1043(RegressionTest2)",
                        "test1107(RegressionTest2)",
                        "test1125(RegressionTest2)",
                        "test1275(RegressionTest2)",
                        "test1332(RegressionTest2)",
                        "test0014(RegressionTest0)",
                        "test0094(RegressionTest0)",
                        "test0114(RegressionTest0)",
                        "test0127(RegressionTest0)",
                        "test0196(RegressionTest0)",
                        "test0230(RegressionTest0)",
                        "test0257(RegressionTest0)",
                        "test0264(RegressionTest0)",
                        "test0286(RegressionTest0)",
                        "test0390(RegressionTest0)",
                        "test0466(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;"
                    ],
                    "failing_lines": [
                        [
                            "RegressionTest1.test0658(RegressionTest1.java:7482)"
                        ],
                        [
                            "RegressionTest1.test0720(RegressionTest1.java:10263)"
                        ],
                        [
                            "RegressionTest1.test0807(RegressionTest1.java:14565)"
                        ],
                        [
                            "RegressionTest1.test0905(RegressionTest1.java:19451)"
                        ],
                        [
                            "RegressionTest1.test0929(RegressionTest1.java:20507)"
                        ],
                        [
                            "RegressionTest1.test0953(RegressionTest1.java:21784)"
                        ],
                        [
                            "RegressionTest1.test0998(RegressionTest1.java:24164)"
                        ],
                        [
                            "RegressionTest6.test3065(RegressionTest6.java:2921)"
                        ],
                        [
                            "RegressionTest3.test1537(RegressionTest3.java:1978)"
                        ],
                        [
                            "RegressionTest3.test1569(RegressionTest3.java:3509)"
                        ],
                        [
                            "RegressionTest3.test1641(RegressionTest3.java:7304)"
                        ],
                        [
                            "RegressionTest3.test1649(RegressionTest3.java:7697)"
                        ],
                        [
                            "RegressionTest3.test1676(RegressionTest3.java:9079)"
                        ],
                        [
                            "RegressionTest3.test1790(RegressionTest3.java:14716)"
                        ],
                        [
                            "RegressionTest3.test1837(RegressionTest3.java:17098)"
                        ],
                        [
                            "RegressionTest3.test1900(RegressionTest3.java:20284)"
                        ],
                        [
                            "RegressionTest3.test1949(RegressionTest3.java:22668)"
                        ],
                        [
                            "RegressionTest5.test2514(RegressionTest5.java:729)"
                        ],
                        [
                            "RegressionTest5.test2676(RegressionTest5.java:8860)"
                        ],
                        [
                            "RegressionTest5.test2934(RegressionTest5.java:21266)"
                        ],
                        [
                            "RegressionTest5.test2979(RegressionTest5.java:23255)"
                        ],
                        [
                            "RegressionTest4.test2034(RegressionTest4.java:1667)"
                        ],
                        [
                            "RegressionTest4.test2142(RegressionTest4.java:6874)"
                        ],
                        [
                            "RegressionTest4.test2150(RegressionTest4.java:7269)"
                        ],
                        [
                            "RegressionTest4.test2235(RegressionTest4.java:11652)"
                        ],
                        [
                            "RegressionTest4.test2347(RegressionTest4.java:16909)"
                        ],
                        [
                            "RegressionTest2.test1043(RegressionTest2.java:2392)"
                        ],
                        [
                            "RegressionTest2.test1107(RegressionTest2.java:5597)"
                        ],
                        [
                            "RegressionTest2.test1125(RegressionTest2.java:6283)"
                        ],
                        [
                            "RegressionTest2.test1275(RegressionTest2.java:13952)"
                        ],
                        [
                            "RegressionTest2.test1332(RegressionTest2.java:16710)"
                        ],
                        [
                            "RegressionTest0.test0014(RegressionTest0.java:361)"
                        ],
                        [
                            "RegressionTest0.test0094(RegressionTest0.java:3140)"
                        ],
                        [
                            "RegressionTest0.test0114(RegressionTest0.java:3904)"
                        ],
                        [
                            "RegressionTest0.test0127(RegressionTest0.java:4366)"
                        ],
                        [
                            "RegressionTest0.test0196(RegressionTest0.java:7085)"
                        ],
                        [
                            "RegressionTest0.test0230(RegressionTest0.java:8366)"
                        ],
                        [
                            "RegressionTest0.test0257(RegressionTest0.java:9611)"
                        ],
                        [
                            "RegressionTest0.test0264(RegressionTest0.java:9914)"
                        ],
                        [
                            "RegressionTest0.test0286(RegressionTest0.java:10824)"
                        ],
                        [
                            "RegressionTest0.test0390(RegressionTest0.java:15385)"
                        ],
                        [
                            "RegressionTest0.test0466(RegressionTest0.java:18840)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/JGenProg2015/Math/patch1-Math-49-JGenProg2015-plausible.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-DynaMoth",
                    "failing": 26,
                    "testrun": 1818,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/JGenProg2015/Math/patch1-Math-49-JGenProg2015-plausible.patch",
                    "test": "test_from_DRR_patch2-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3346,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/JGenProg2015/Math/patch1-Math-49-JGenProg2015-plausible.patch",
                    "test": "test_from_NFL_patch7_7-Math-49-Kali-A",
                    "failing": 39,
                    "testrun": 2023,
                    "failings": [
                        "test008(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test0957(RegressionTest1)",
                        "test1567(RegressionTest3)",
                        "test1688(RegressionTest3)",
                        "test1880(RegressionTest3)",
                        "test1121(RegressionTest2)",
                        "test1300(RegressionTest2)",
                        "test1333(RegressionTest2)",
                        "test1356(RegressionTest2)",
                        "test1480(RegressionTest2)",
                        "test0132(RegressionTest0)",
                        "test0187(RegressionTest0)",
                        "test0301(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector46.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector16",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector95 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector16",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector16",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector24.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector12 and openMapRealVector88",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector9.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector91 and openMapRealVector72.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector64",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector15 and openMapRealVector7.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector64",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector20.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector27",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector35 and openMapRealVector16.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector82 and openMapRealVector81.",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: index (101)",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test008(ErrorTest0.java:237)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:671)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:742)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1168)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:1503)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:1585)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:1695)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:1900)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:2298)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:2547)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:3104)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:3182)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:3412)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:3623)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:3715)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:3766)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:3929)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:3985)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:4055)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:4189)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:4356)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:4401)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:4452)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:4542)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:4647)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:5346)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:5487)"
                        ],
                        [
                            "RegressionTest1.test0957(RegressionTest1.java:24665)"
                        ],
                        [
                            "RegressionTest3.test1567(RegressionTest3.java:3405)"
                        ],
                        [
                            "RegressionTest3.test1688(RegressionTest3.java:9544)"
                        ],
                        [
                            "RegressionTest3.test1880(RegressionTest3.java:19167)"
                        ],
                        [
                            "RegressionTest2.test1121(RegressionTest2.java:6008)"
                        ],
                        [
                            "RegressionTest2.test1300(RegressionTest2.java:14896)"
                        ],
                        [
                            "RegressionTest2.test1333(RegressionTest2.java:16561)"
                        ],
                        [
                            "RegressionTest2.test1356(RegressionTest2.java:17513)"
                        ],
                        [
                            "RegressionTest2.test1480(RegressionTest2.java:23954)"
                        ],
                        [
                            "RegressionTest0.test0132(RegressionTest0.java:6324)"
                        ],
                        [
                            "RegressionTest0.test0187(RegressionTest0.java:9527)"
                        ],
                        [
                            "RegressionTest0.test0301(RegressionTest0.java:15878)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/JGenProg2015/Math/patch1-Math-49-JGenProg2015-plausible.patch",
                    "test": "test_from_DRR_patch5-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4079,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesDRR/Doverfitting/JGenProg2015/Math/patch1-Math-49-JGenProg2015-plausible.patch",
                    "test": "test_from_DRR_patch1-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3942,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 100.6
        },
        {
            "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Math/patch1_1-Math-49-DynaMoth.patch",
            "project": "Math",
            "bugid": "49",
            "dataset": "NFL",
            "date": "2021-11-22T20:34:27.986577",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Math/patch1_1-Math-49-DynaMoth.patch",
                    "test": "test_from_DRR_patch1-Math-49-Nopol2015-plausible",
                    "failing": 30,
                    "testrun": 1836,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test29(ErrorTest0)",
                        "test1648(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector82.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector40 and openMapRealVector5",
                        "java.lang.AssertionError: Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 135"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1195)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1249)"
                        ],
                        [
                            "ErrorTest0.test29(ErrorTest0.java:1277)"
                        ],
                        [
                            "RegressionTest3.test1648(RegressionTest3.java:7247)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Math/patch1_1-Math-49-DynaMoth.patch",
                    "test": "test_from_DRR_patch4-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4085,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Math/patch1_1-Math-49-DynaMoth.patch",
                    "test": "test_from_DRR_patch1-Math-49-JGenProg2015-plausible",
                    "failing": 60,
                    "testrun": 1868,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test29(ErrorTest0)",
                        "test30(ErrorTest0)",
                        "test31(ErrorTest0)",
                        "test32(ErrorTest0)",
                        "test33(ErrorTest0)",
                        "test34(ErrorTest0)",
                        "test35(ErrorTest0)",
                        "test36(ErrorTest0)",
                        "test37(ErrorTest0)",
                        "test38(ErrorTest0)",
                        "test39(ErrorTest0)",
                        "test40(ErrorTest0)",
                        "test41(ErrorTest0)",
                        "test42(ErrorTest0)",
                        "test0658(RegressionTest1)",
                        "test0774(RegressionTest1)",
                        "test0797(RegressionTest1)",
                        "test0812(RegressionTest1)",
                        "test0936(RegressionTest1)",
                        "test0949(RegressionTest1)",
                        "test0970(RegressionTest1)",
                        "test1534(RegressionTest3)",
                        "test1789(RegressionTest3)",
                        "test1795(RegressionTest3)",
                        "test1232(RegressionTest2)",
                        "test1274(RegressionTest2)",
                        "test1351(RegressionTest2)",
                        "test1358(RegressionTest2)",
                        "test1422(RegressionTest2)",
                        "test1468(RegressionTest2)",
                        "test0237(RegressionTest0)",
                        "test0339(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector91.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector48 and openMapRealVector50.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector33 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector45.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector71 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector96.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector57.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector86 and openMapRealVector2.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector54.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector67 and openMapRealVector61.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18.",
                        "org.junit.ComparisonFailure: expected:<[-1.0, []1.0]> but was:<[-1.0, [-]1.0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[-1.0, []1.0]> but was:<[-1.0, [-]1.0]>",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:122)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:190)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:246)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:304)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:341)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:377)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:435)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:496)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:532)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:594)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:621)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:681)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:737)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:793)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:840)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:897)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:1010)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:1067)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:1129)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1165)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1203)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1241)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1326)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1389)"
                        ],
                        [
                            "ErrorTest0.test29(ErrorTest0.java:1446)"
                        ],
                        [
                            "ErrorTest0.test30(ErrorTest0.java:1486)"
                        ],
                        [
                            "ErrorTest0.test31(ErrorTest0.java:1525)"
                        ],
                        [
                            "ErrorTest0.test32(ErrorTest0.java:1583)"
                        ],
                        [
                            "ErrorTest0.test33(ErrorTest0.java:1621)"
                        ],
                        [
                            "ErrorTest0.test34(ErrorTest0.java:1660)"
                        ],
                        [
                            "ErrorTest0.test35(ErrorTest0.java:1719)"
                        ],
                        [
                            "ErrorTest0.test36(ErrorTest0.java:1756)"
                        ],
                        [
                            "ErrorTest0.test37(ErrorTest0.java:1813)"
                        ],
                        [
                            "ErrorTest0.test38(ErrorTest0.java:1860)"
                        ],
                        [
                            "ErrorTest0.test39(ErrorTest0.java:1885)"
                        ],
                        [
                            "ErrorTest0.test40(ErrorTest0.java:1939)"
                        ],
                        [
                            "ErrorTest0.test41(ErrorTest0.java:1976)"
                        ],
                        [
                            "ErrorTest0.test42(ErrorTest0.java:1994)"
                        ],
                        [
                            "RegressionTest1.test0658(RegressionTest1.java:8692)"
                        ],
                        [
                            "RegressionTest1.test0774(RegressionTest1.java:15111)"
                        ],
                        [
                            "RegressionTest1.test0797(RegressionTest1.java:16114)"
                        ],
                        [
                            "RegressionTest1.test0812(RegressionTest1.java:16843)"
                        ],
                        [
                            "RegressionTest1.test0936(RegressionTest1.java:23342)"
                        ],
                        [
                            "RegressionTest1.test0949(RegressionTest1.java:24008)"
                        ],
                        [
                            "RegressionTest1.test0970(RegressionTest1.java:25134)"
                        ],
                        [
                            "RegressionTest3.test1534(RegressionTest3.java:1561)"
                        ],
                        [
                            "RegressionTest3.test1789(RegressionTest3.java:15131)"
                        ],
                        [
                            "RegressionTest3.test1795(RegressionTest3.java:15480)"
                        ],
                        [
                            "RegressionTest2.test1232(RegressionTest2.java:12019)"
                        ],
                        [
                            "RegressionTest2.test1274(RegressionTest2.java:13909)"
                        ],
                        [
                            "RegressionTest2.test1351(RegressionTest2.java:17937)"
                        ],
                        [
                            "RegressionTest2.test1358(RegressionTest2.java:18426)"
                        ],
                        [
                            "RegressionTest2.test1422(RegressionTest2.java:21944)"
                        ],
                        [
                            "RegressionTest2.test1468(RegressionTest2.java:24124)"
                        ],
                        [
                            "RegressionTest0.test0237(RegressionTest0.java:12427)"
                        ],
                        [
                            "RegressionTest0.test0339(RegressionTest0.java:18323)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Math/patch1_1-Math-49-DynaMoth.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-Nopol",
                    "failing": 27,
                    "testrun": 1814,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Math/patch1_1-Math-49-DynaMoth.patch",
                    "test": "test_from_DRR_patch3-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3896,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Math/patch1_1-Math-49-DynaMoth.patch",
                    "test": "test_from_DRR_patch1-Math-49-DeepRepair",
                    "failing": 0,
                    "testrun": 3963,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Math/patch1_1-Math-49-DynaMoth.patch",
                    "test": "test_from_PFL_patch130_99-Math-49-ARJA",
                    "failing": 55,
                    "testrun": 1877,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test0679(RegressionTest1)",
                        "test0703(RegressionTest1)",
                        "test0708(RegressionTest1)",
                        "test0786(RegressionTest1)",
                        "test0833(RegressionTest1)",
                        "test0887(RegressionTest1)",
                        "test0954(RegressionTest1)",
                        "test1617(RegressionTest3)",
                        "test1653(RegressionTest3)",
                        "test1676(RegressionTest3)",
                        "test1684(RegressionTest3)",
                        "test1754(RegressionTest3)",
                        "test1791(RegressionTest3)",
                        "test1821(RegressionTest3)",
                        "test1016(RegressionTest2)",
                        "test1043(RegressionTest2)",
                        "test1057(RegressionTest2)",
                        "test1101(RegressionTest2)",
                        "test1132(RegressionTest2)",
                        "test1195(RegressionTest2)",
                        "test1227(RegressionTest2)",
                        "test1321(RegressionTest2)",
                        "test1332(RegressionTest2)",
                        "test1336(RegressionTest2)",
                        "test1386(RegressionTest2)",
                        "test1440(RegressionTest2)",
                        "test1459(RegressionTest2)",
                        "test1478(RegressionTest2)",
                        "test0434(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector77 and openMapRealVector74.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector64 and openMapRealVector35.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector81 and openMapRealVector78.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector83.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector12.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector94 and openMapRealVector67.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector69 and openMapRealVector60.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector53 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector43 and openMapRealVector30.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: '100.0' != '99.0'",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:118)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:155)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:187)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:239)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:283)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:336)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:373)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:428)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:442)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:502)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:536)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:580)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:624)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:647)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:678)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:743)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:761)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:805)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:852)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:883)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:929)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:998)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1031)"
                        ],
                        [
                            "RegressionTest1.test0679(RegressionTest1.java:9366)"
                        ],
                        [
                            "RegressionTest1.test0703(RegressionTest1.java:10696)"
                        ],
                        [
                            "RegressionTest1.test0708(RegressionTest1.java:11060)"
                        ],
                        [
                            "RegressionTest1.test0786(RegressionTest1.java:15251)"
                        ],
                        [
                            "RegressionTest1.test0833(RegressionTest1.java:17643)"
                        ],
                        [
                            "RegressionTest1.test0887(RegressionTest1.java:20642)"
                        ],
                        [
                            "RegressionTest1.test0954(RegressionTest1.java:23986)"
                        ],
                        [
                            "RegressionTest3.test1617(RegressionTest3.java:6168)"
                        ],
                        [
                            "RegressionTest3.test1653(RegressionTest3.java:8271)"
                        ],
                        [
                            "RegressionTest3.test1676(RegressionTest3.java:9458)"
                        ],
                        [
                            "RegressionTest3.test1684(RegressionTest3.java:9815)"
                        ],
                        [
                            "RegressionTest3.test1754(RegressionTest3.java:13715)"
                        ],
                        [
                            "RegressionTest3.test1791(RegressionTest3.java:15620)"
                        ],
                        [
                            "RegressionTest3.test1821(RegressionTest3.java:17246)"
                        ],
                        [
                            "RegressionTest2.test1016(RegressionTest2.java:802)"
                        ],
                        [
                            "RegressionTest2.test1043(RegressionTest2.java:2271)"
                        ],
                        [
                            "RegressionTest2.test1057(RegressionTest2.java:2829)"
                        ],
                        [
                            "RegressionTest2.test1101(RegressionTest2.java:5046)"
                        ],
                        [
                            "RegressionTest2.test1132(RegressionTest2.java:6433)"
                        ],
                        [
                            "RegressionTest2.test1195(RegressionTest2.java:9954)"
                        ],
                        [
                            "RegressionTest2.test1227(RegressionTest2.java:11818)"
                        ],
                        [
                            "RegressionTest2.test1321(RegressionTest2.java:16650)"
                        ],
                        [
                            "RegressionTest2.test1332(RegressionTest2.java:17190)"
                        ],
                        [
                            "RegressionTest2.test1336(RegressionTest2.java:17380)"
                        ],
                        [
                            "RegressionTest2.test1386(RegressionTest2.java:19943)"
                        ],
                        [
                            "RegressionTest2.test1440(RegressionTest2.java:22732)"
                        ],
                        [
                            "RegressionTest2.test1459(RegressionTest2.java:23951)"
                        ],
                        [
                            "RegressionTest2.test1478(RegressionTest2.java:25059)"
                        ],
                        [
                            "RegressionTest0.test0434(RegressionTest0.java:22983)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Math/patch1_1-Math-49-DynaMoth.patch",
                    "test": "test_from_DRR_patch6-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3960,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Math/patch1_1-Math-49-DynaMoth.patch",
                    "test": "test_from_DRR_patch7-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3670,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Math/patch1_1-Math-49-DynaMoth.patch",
                    "test": "test_from_NFL_patch15_1-Math-49-AVATAR",
                    "failing": 42,
                    "testrun": 3170,
                    "failings": [
                        "test0658(RegressionTest1)",
                        "test0720(RegressionTest1)",
                        "test0807(RegressionTest1)",
                        "test0905(RegressionTest1)",
                        "test0929(RegressionTest1)",
                        "test0953(RegressionTest1)",
                        "test0998(RegressionTest1)",
                        "test3065(RegressionTest6)",
                        "test1537(RegressionTest3)",
                        "test1569(RegressionTest3)",
                        "test1641(RegressionTest3)",
                        "test1649(RegressionTest3)",
                        "test1676(RegressionTest3)",
                        "test1790(RegressionTest3)",
                        "test1837(RegressionTest3)",
                        "test1900(RegressionTest3)",
                        "test1949(RegressionTest3)",
                        "test2514(RegressionTest5)",
                        "test2676(RegressionTest5)",
                        "test2934(RegressionTest5)",
                        "test2979(RegressionTest5)",
                        "test2034(RegressionTest4)",
                        "test2142(RegressionTest4)",
                        "test2150(RegressionTest4)",
                        "test2235(RegressionTest4)",
                        "test2347(RegressionTest4)",
                        "test1043(RegressionTest2)",
                        "test1107(RegressionTest2)",
                        "test1125(RegressionTest2)",
                        "test1275(RegressionTest2)",
                        "test1332(RegressionTest2)",
                        "test0014(RegressionTest0)",
                        "test0094(RegressionTest0)",
                        "test0114(RegressionTest0)",
                        "test0127(RegressionTest0)",
                        "test0196(RegressionTest0)",
                        "test0230(RegressionTest0)",
                        "test0257(RegressionTest0)",
                        "test0264(RegressionTest0)",
                        "test0286(RegressionTest0)",
                        "test0390(RegressionTest0)",
                        "test0466(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;"
                    ],
                    "failing_lines": [
                        [
                            "RegressionTest1.test0658(RegressionTest1.java:7482)"
                        ],
                        [
                            "RegressionTest1.test0720(RegressionTest1.java:10263)"
                        ],
                        [
                            "RegressionTest1.test0807(RegressionTest1.java:14565)"
                        ],
                        [
                            "RegressionTest1.test0905(RegressionTest1.java:19451)"
                        ],
                        [
                            "RegressionTest1.test0929(RegressionTest1.java:20507)"
                        ],
                        [
                            "RegressionTest1.test0953(RegressionTest1.java:21784)"
                        ],
                        [
                            "RegressionTest1.test0998(RegressionTest1.java:24164)"
                        ],
                        [
                            "RegressionTest6.test3065(RegressionTest6.java:2921)"
                        ],
                        [
                            "RegressionTest3.test1537(RegressionTest3.java:1978)"
                        ],
                        [
                            "RegressionTest3.test1569(RegressionTest3.java:3509)"
                        ],
                        [
                            "RegressionTest3.test1641(RegressionTest3.java:7304)"
                        ],
                        [
                            "RegressionTest3.test1649(RegressionTest3.java:7697)"
                        ],
                        [
                            "RegressionTest3.test1676(RegressionTest3.java:9079)"
                        ],
                        [
                            "RegressionTest3.test1790(RegressionTest3.java:14716)"
                        ],
                        [
                            "RegressionTest3.test1837(RegressionTest3.java:17098)"
                        ],
                        [
                            "RegressionTest3.test1900(RegressionTest3.java:20284)"
                        ],
                        [
                            "RegressionTest3.test1949(RegressionTest3.java:22668)"
                        ],
                        [
                            "RegressionTest5.test2514(RegressionTest5.java:729)"
                        ],
                        [
                            "RegressionTest5.test2676(RegressionTest5.java:8860)"
                        ],
                        [
                            "RegressionTest5.test2934(RegressionTest5.java:21266)"
                        ],
                        [
                            "RegressionTest5.test2979(RegressionTest5.java:23255)"
                        ],
                        [
                            "RegressionTest4.test2034(RegressionTest4.java:1667)"
                        ],
                        [
                            "RegressionTest4.test2142(RegressionTest4.java:6874)"
                        ],
                        [
                            "RegressionTest4.test2150(RegressionTest4.java:7269)"
                        ],
                        [
                            "RegressionTest4.test2235(RegressionTest4.java:11652)"
                        ],
                        [
                            "RegressionTest4.test2347(RegressionTest4.java:16909)"
                        ],
                        [
                            "RegressionTest2.test1043(RegressionTest2.java:2392)"
                        ],
                        [
                            "RegressionTest2.test1107(RegressionTest2.java:5597)"
                        ],
                        [
                            "RegressionTest2.test1125(RegressionTest2.java:6283)"
                        ],
                        [
                            "RegressionTest2.test1275(RegressionTest2.java:13952)"
                        ],
                        [
                            "RegressionTest2.test1332(RegressionTest2.java:16710)"
                        ],
                        [
                            "RegressionTest0.test0014(RegressionTest0.java:361)"
                        ],
                        [
                            "RegressionTest0.test0094(RegressionTest0.java:3140)"
                        ],
                        [
                            "RegressionTest0.test0114(RegressionTest0.java:3904)"
                        ],
                        [
                            "RegressionTest0.test0127(RegressionTest0.java:4366)"
                        ],
                        [
                            "RegressionTest0.test0196(RegressionTest0.java:7085)"
                        ],
                        [
                            "RegressionTest0.test0230(RegressionTest0.java:8366)"
                        ],
                        [
                            "RegressionTest0.test0257(RegressionTest0.java:9611)"
                        ],
                        [
                            "RegressionTest0.test0264(RegressionTest0.java:9914)"
                        ],
                        [
                            "RegressionTest0.test0286(RegressionTest0.java:10824)"
                        ],
                        [
                            "RegressionTest0.test0390(RegressionTest0.java:15385)"
                        ],
                        [
                            "RegressionTest0.test0466(RegressionTest0.java:18840)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Math/patch1_1-Math-49-DynaMoth.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-DynaMoth",
                    "failing": 27,
                    "testrun": 1818,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Math/patch1_1-Math-49-DynaMoth.patch",
                    "test": "test_from_DRR_patch2-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3346,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Math/patch1_1-Math-49-DynaMoth.patch",
                    "test": "test_from_NFL_patch7_7-Math-49-Kali-A",
                    "failing": 37,
                    "testrun": 2023,
                    "failings": [
                        "test008(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test0695(RegressionTest1)",
                        "test0726(RegressionTest1)",
                        "test0957(RegressionTest1)",
                        "test0979(RegressionTest1)",
                        "test1567(RegressionTest3)",
                        "test1622(RegressionTest3)",
                        "test1688(RegressionTest3)",
                        "test1880(RegressionTest3)",
                        "test1044(RegressionTest2)",
                        "test1121(RegressionTest2)",
                        "test1300(RegressionTest2)",
                        "test1333(RegressionTest2)",
                        "test1356(RegressionTest2)",
                        "test1408(RegressionTest2)",
                        "test1480(RegressionTest2)",
                        "test0132(RegressionTest0)",
                        "test0187(RegressionTest0)",
                        "test0301(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector46.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector24.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector9.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector91 and openMapRealVector72.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector15 and openMapRealVector7.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector20.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector35 and openMapRealVector16.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector82 and openMapRealVector81.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: index (101)",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '110.92980307021926' != '110.90761932797945'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test008(ErrorTest0.java:237)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:671)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:742)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1168)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:1583)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:1695)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:1900)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:3104)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:3173)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:3623)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:3766)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:3929)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:3985)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:4055)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:4356)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:4452)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:4645)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:5346)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:5487)"
                        ],
                        [
                            "RegressionTest1.test0695(RegressionTest1.java:10855)"
                        ],
                        [
                            "RegressionTest1.test0726(RegressionTest1.java:12633)"
                        ],
                        [
                            "RegressionTest1.test0957(RegressionTest1.java:24665)"
                        ],
                        [
                            "RegressionTest1.test0979(RegressionTest1.java:25958)"
                        ],
                        [
                            "RegressionTest3.test1567(RegressionTest3.java:3405)"
                        ],
                        [
                            "RegressionTest3.test1622(RegressionTest3.java:6254)"
                        ],
                        [
                            "RegressionTest3.test1688(RegressionTest3.java:9544)"
                        ],
                        [
                            "RegressionTest3.test1880(RegressionTest3.java:19167)"
                        ],
                        [
                            "RegressionTest2.test1044(RegressionTest2.java:2283)"
                        ],
                        [
                            "RegressionTest2.test1121(RegressionTest2.java:6008)"
                        ],
                        [
                            "RegressionTest2.test1300(RegressionTest2.java:14896)"
                        ],
                        [
                            "RegressionTest2.test1333(RegressionTest2.java:16561)"
                        ],
                        [
                            "RegressionTest2.test1356(RegressionTest2.java:17513)"
                        ],
                        [
                            "RegressionTest2.test1408(RegressionTest2.java:20283)"
                        ],
                        [
                            "RegressionTest2.test1480(RegressionTest2.java:23954)"
                        ],
                        [
                            "RegressionTest0.test0132(RegressionTest0.java:6324)"
                        ],
                        [
                            "RegressionTest0.test0187(RegressionTest0.java:9527)"
                        ],
                        [
                            "RegressionTest0.test0301(RegressionTest0.java:15878)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Math/patch1_1-Math-49-DynaMoth.patch",
                    "test": "test_from_DRR_patch5-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4079,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/DynaMoth/Math/patch1_1-Math-49-DynaMoth.patch",
                    "test": "test_from_DRR_patch1-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3942,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 100.93
        },
        {
            "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Math/patch7_7-Math-49-Kali-A.patch",
            "project": "Math",
            "bugid": "49",
            "dataset": "NFL",
            "date": "2021-11-22T20:36:08.919440",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Math/patch7_7-Math-49-Kali-A.patch",
                    "test": "test_from_DRR_patch1-Math-49-Nopol2015-plausible",
                    "failing": 39,
                    "testrun": 1836,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test29(ErrorTest0)",
                        "test0678(RegressionTest1)",
                        "test0952(RegressionTest1)",
                        "test1633(RegressionTest3)",
                        "test1780(RegressionTest3)",
                        "test1793(RegressionTest3)",
                        "test1796(RegressionTest3)",
                        "test1108(RegressionTest2)",
                        "test1109(RegressionTest2)",
                        "test1441(RegressionTest2)",
                        "test1482(RegressionTest2)",
                        "test0414(RegressionTest0)",
                        "test0484(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector82.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector40 and openMapRealVector5",
                        "org.apache.commons.math.exception.OutOfRangeException: index (102)",
                        "org.apache.commons.math.exception.OutOfRangeException: index (102)",
                        "java.lang.AssertionError: '1.0' != '0.6666666666666666'",
                        "java.lang.AssertionError: '1.0' != '0.0'",
                        "java.lang.AssertionError: '1.0' != '0.0'",
                        "java.lang.AssertionError: '2.0' != '1.0'",
                        "org.apache.commons.math.exception.OutOfRangeException: index (102)",
                        "java.lang.AssertionError: '1.0' != '0.6666666666666666'",
                        "java.lang.AssertionError: '1.0' != '0.6666666666666666'",
                        "java.lang.AssertionError: '1.0' != '0.0'",
                        "java.lang.AssertionError: '1.0' != '0.0'",
                        "java.lang.AssertionError: '33.54101966249685' != '0.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1195)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1249)"
                        ],
                        [
                            "ErrorTest0.test29(ErrorTest0.java:1277)"
                        ],
                        [
                            "RegressionTest1.test0678(RegressionTest1.java:9080)"
                        ],
                        [
                            "RegressionTest1.test0952(RegressionTest1.java:24975)"
                        ],
                        [
                            "RegressionTest3.test1633(RegressionTest3.java:6583)"
                        ],
                        [
                            "RegressionTest3.test1780(RegressionTest3.java:14061)"
                        ],
                        [
                            "RegressionTest3.test1793(RegressionTest3.java:14750)"
                        ],
                        [
                            "RegressionTest3.test1796(RegressionTest3.java:14956)"
                        ],
                        [
                            "RegressionTest2.test1108(RegressionTest2.java:5971)"
                        ],
                        [
                            "RegressionTest2.test1109(RegressionTest2.java:6026)"
                        ],
                        [
                            "RegressionTest2.test1441(RegressionTest2.java:23182)"
                        ],
                        [
                            "RegressionTest2.test1482(RegressionTest2.java:25474)"
                        ],
                        [
                            "RegressionTest0.test0414(RegressionTest0.java:22392)"
                        ],
                        [
                            "RegressionTest0.test0484(RegressionTest0.java:26286)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Math/patch7_7-Math-49-Kali-A.patch",
                    "test": "test_from_DRR_patch4-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4085,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Math/patch7_7-Math-49-Kali-A.patch",
                    "test": "test_from_DRR_patch1-Math-49-JGenProg2015-plausible",
                    "failing": 43,
                    "testrun": 1868,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test29(ErrorTest0)",
                        "test30(ErrorTest0)",
                        "test31(ErrorTest0)",
                        "test32(ErrorTest0)",
                        "test33(ErrorTest0)",
                        "test34(ErrorTest0)",
                        "test35(ErrorTest0)",
                        "test36(ErrorTest0)",
                        "test37(ErrorTest0)",
                        "test38(ErrorTest0)",
                        "test39(ErrorTest0)",
                        "test40(ErrorTest0)",
                        "test41(ErrorTest0)",
                        "test42(ErrorTest0)",
                        "test0502(RegressionTest1)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector53",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector91.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector48 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector90",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector53",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector33 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector90",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector90",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector53",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector71 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector96.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector90",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector57.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector86 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector7 and openMapRealVector58",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector54.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector67 and openMapRealVector61.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18.",
                        "java.lang.AssertionError: '10.0' != '0.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:135)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:190)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:246)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:304)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:341)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:377)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:438)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:496)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:534)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:594)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:621)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:681)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:737)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:793)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:840)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:900)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:1010)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:1070)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:1129)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1167)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1205)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1243)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1326)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1389)"
                        ],
                        [
                            "ErrorTest0.test29(ErrorTest0.java:1449)"
                        ],
                        [
                            "ErrorTest0.test30(ErrorTest0.java:1486)"
                        ],
                        [
                            "ErrorTest0.test31(ErrorTest0.java:1525)"
                        ],
                        [
                            "ErrorTest0.test32(ErrorTest0.java:1583)"
                        ],
                        [
                            "ErrorTest0.test33(ErrorTest0.java:1623)"
                        ],
                        [
                            "ErrorTest0.test34(ErrorTest0.java:1660)"
                        ],
                        [
                            "ErrorTest0.test35(ErrorTest0.java:1719)"
                        ],
                        [
                            "ErrorTest0.test36(ErrorTest0.java:1756)"
                        ],
                        [
                            "ErrorTest0.test37(ErrorTest0.java:1813)"
                        ],
                        [
                            "ErrorTest0.test38(ErrorTest0.java:1860)"
                        ],
                        [
                            "ErrorTest0.test39(ErrorTest0.java:1885)"
                        ],
                        [
                            "ErrorTest0.test40(ErrorTest0.java:1939)"
                        ],
                        [
                            "ErrorTest0.test41(ErrorTest0.java:1976)"
                        ],
                        [
                            "ErrorTest0.test42(ErrorTest0.java:1994)"
                        ],
                        [
                            "RegressionTest1.test0502(RegressionTest1.java:49)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Math/patch7_7-Math-49-Kali-A.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-Nopol",
                    "failing": 36,
                    "testrun": 1814,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test0674(RegressionTest1)",
                        "test0952(RegressionTest1)",
                        "test1635(RegressionTest3)",
                        "test1651(RegressionTest3)",
                        "test1744(RegressionTest3)",
                        "test1110(RegressionTest2)",
                        "test1111(RegressionTest2)",
                        "test1445(RegressionTest2)",
                        "test1484(RegressionTest2)",
                        "test0412(RegressionTest0)",
                        "test0482(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "org.apache.commons.math.exception.OutOfRangeException: index (102)",
                        "org.apache.commons.math.exception.OutOfRangeException: index (102)",
                        "java.lang.AssertionError: '1.0' != '0.6666666666666666'",
                        "java.lang.ArrayIndexOutOfBoundsException: 135",
                        "org.junit.ComparisonFailure: expected:<[[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -]0.0]> but was:<[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ]0.0]>",
                        "org.apache.commons.math.exception.OutOfRangeException: index (102)",
                        "java.lang.AssertionError: '1.0' != '0.6666666666666666'",
                        "java.lang.AssertionError: '1.0' != '0.6666666666666666'",
                        "java.lang.AssertionError: '1.0' != '0.0'",
                        "java.lang.AssertionError: '1.0' != '0.0'",
                        "java.lang.AssertionError: '33.54101966249685' != '0.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ],
                        [
                            "RegressionTest1.test0674(RegressionTest1.java:8886)"
                        ],
                        [
                            "RegressionTest1.test0952(RegressionTest1.java:24910)"
                        ],
                        [
                            "RegressionTest3.test1635(RegressionTest3.java:6858)"
                        ],
                        [
                            "RegressionTest3.test1651(RegressionTest3.java:7526)"
                        ],
                        [
                            "RegressionTest3.test1744(RegressionTest3.java:11964)"
                        ],
                        [
                            "RegressionTest2.test1110(RegressionTest2.java:5911)"
                        ],
                        [
                            "RegressionTest2.test1111(RegressionTest2.java:5966)"
                        ],
                        [
                            "RegressionTest2.test1445(RegressionTest2.java:23143)"
                        ],
                        [
                            "RegressionTest2.test1484(RegressionTest2.java:25390)"
                        ],
                        [
                            "RegressionTest0.test0412(RegressionTest0.java:22375)"
                        ],
                        [
                            "RegressionTest0.test0482(RegressionTest0.java:26272)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Math/patch7_7-Math-49-Kali-A.patch",
                    "test": "test_from_DRR_patch3-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3896,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Math/patch7_7-Math-49-Kali-A.patch",
                    "test": "test_from_DRR_patch1-Math-49-DeepRepair",
                    "failing": 0,
                    "testrun": 3963,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Math/patch7_7-Math-49-Kali-A.patch",
                    "test": "test_from_PFL_patch130_99-Math-49-ARJA",
                    "failing": 36,
                    "testrun": 1877,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test0610(RegressionTest1)",
                        "test0657(RegressionTest1)",
                        "test0694(RegressionTest1)",
                        "test0922(RegressionTest1)",
                        "test0988(RegressionTest1)",
                        "test1600(RegressionTest3)",
                        "test1666(RegressionTest3)",
                        "test1739(RegressionTest3)",
                        "test1849(RegressionTest3)",
                        "test0441(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector77 and openMapRealVector74.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector64 and openMapRealVector35.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector81 and openMapRealVector78.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector83.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector12.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector94 and openMapRealVector67.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector69 and openMapRealVector60.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector53 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector43 and openMapRealVector30.",
                        "java.lang.ArrayIndexOutOfBoundsException: 2",
                        "org.apache.commons.math.exception.OutOfRangeException: index (10)",
                        "org.apache.commons.math.exception.OutOfRangeException: index (10)",
                        "java.lang.AssertionError: '101.03506376041943' != '101.01643682625131'",
                        "java.lang.AssertionError: '10103.506376041943' != '10101.643682625132'",
                        "org.apache.commons.math.exception.OutOfRangeException: index (10)",
                        "org.apache.commons.math.exception.OutOfRangeException: index (10)",
                        "java.lang.AssertionError: '1.0' != '0.0'",
                        "java.lang.AssertionError: '1.0' != '0.0'",
                        "java.lang.AssertionError: '1.0' != '0.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:118)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:155)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:187)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:239)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:283)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:336)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:373)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:428)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:442)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:502)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:536)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:580)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:624)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:647)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:678)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:743)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:761)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:805)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:852)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:883)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:929)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:998)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1031)"
                        ],
                        [
                            "RegressionTest1.test0610(RegressionTest1.java:5961)"
                        ],
                        [
                            "RegressionTest1.test0657(RegressionTest1.java:8179)"
                        ],
                        [
                            "RegressionTest1.test0694(RegressionTest1.java:10091)"
                        ],
                        [
                            "RegressionTest1.test0922(RegressionTest1.java:22503)"
                        ],
                        [
                            "RegressionTest1.test0988(RegressionTest1.java:25760)"
                        ],
                        [
                            "RegressionTest3.test1600(RegressionTest3.java:5120)"
                        ],
                        [
                            "RegressionTest3.test1666(RegressionTest3.java:8922)"
                        ],
                        [
                            "RegressionTest3.test1739(RegressionTest3.java:12797)"
                        ],
                        [
                            "RegressionTest3.test1849(RegressionTest3.java:18629)"
                        ],
                        [
                            "RegressionTest0.test0441(RegressionTest0.java:23432)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Math/patch7_7-Math-49-Kali-A.patch",
                    "test": "test_from_DRR_patch6-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3960,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Math/patch7_7-Math-49-Kali-A.patch",
                    "test": "test_from_DRR_patch7-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3670,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Math/patch7_7-Math-49-Kali-A.patch",
                    "test": "test_from_NFL_patch15_1-Math-49-AVATAR",
                    "failing": 42,
                    "testrun": 3170,
                    "failings": [
                        "test0658(RegressionTest1)",
                        "test0720(RegressionTest1)",
                        "test0807(RegressionTest1)",
                        "test0905(RegressionTest1)",
                        "test0929(RegressionTest1)",
                        "test0953(RegressionTest1)",
                        "test0998(RegressionTest1)",
                        "test3065(RegressionTest6)",
                        "test1537(RegressionTest3)",
                        "test1569(RegressionTest3)",
                        "test1641(RegressionTest3)",
                        "test1649(RegressionTest3)",
                        "test1676(RegressionTest3)",
                        "test1790(RegressionTest3)",
                        "test1837(RegressionTest3)",
                        "test1900(RegressionTest3)",
                        "test1949(RegressionTest3)",
                        "test2514(RegressionTest5)",
                        "test2676(RegressionTest5)",
                        "test2934(RegressionTest5)",
                        "test2979(RegressionTest5)",
                        "test2034(RegressionTest4)",
                        "test2142(RegressionTest4)",
                        "test2150(RegressionTest4)",
                        "test2235(RegressionTest4)",
                        "test2347(RegressionTest4)",
                        "test1043(RegressionTest2)",
                        "test1107(RegressionTest2)",
                        "test1125(RegressionTest2)",
                        "test1275(RegressionTest2)",
                        "test1332(RegressionTest2)",
                        "test0014(RegressionTest0)",
                        "test0094(RegressionTest0)",
                        "test0114(RegressionTest0)",
                        "test0127(RegressionTest0)",
                        "test0196(RegressionTest0)",
                        "test0230(RegressionTest0)",
                        "test0257(RegressionTest0)",
                        "test0264(RegressionTest0)",
                        "test0286(RegressionTest0)",
                        "test0390(RegressionTest0)",
                        "test0466(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;"
                    ],
                    "failing_lines": [
                        [
                            "RegressionTest1.test0658(RegressionTest1.java:7482)"
                        ],
                        [
                            "RegressionTest1.test0720(RegressionTest1.java:10263)"
                        ],
                        [
                            "RegressionTest1.test0807(RegressionTest1.java:14565)"
                        ],
                        [
                            "RegressionTest1.test0905(RegressionTest1.java:19451)"
                        ],
                        [
                            "RegressionTest1.test0929(RegressionTest1.java:20507)"
                        ],
                        [
                            "RegressionTest1.test0953(RegressionTest1.java:21784)"
                        ],
                        [
                            "RegressionTest1.test0998(RegressionTest1.java:24164)"
                        ],
                        [
                            "RegressionTest6.test3065(RegressionTest6.java:2921)"
                        ],
                        [
                            "RegressionTest3.test1537(RegressionTest3.java:1978)"
                        ],
                        [
                            "RegressionTest3.test1569(RegressionTest3.java:3509)"
                        ],
                        [
                            "RegressionTest3.test1641(RegressionTest3.java:7304)"
                        ],
                        [
                            "RegressionTest3.test1649(RegressionTest3.java:7697)"
                        ],
                        [
                            "RegressionTest3.test1676(RegressionTest3.java:9079)"
                        ],
                        [
                            "RegressionTest3.test1790(RegressionTest3.java:14716)"
                        ],
                        [
                            "RegressionTest3.test1837(RegressionTest3.java:17098)"
                        ],
                        [
                            "RegressionTest3.test1900(RegressionTest3.java:20284)"
                        ],
                        [
                            "RegressionTest3.test1949(RegressionTest3.java:22668)"
                        ],
                        [
                            "RegressionTest5.test2514(RegressionTest5.java:729)"
                        ],
                        [
                            "RegressionTest5.test2676(RegressionTest5.java:8860)"
                        ],
                        [
                            "RegressionTest5.test2934(RegressionTest5.java:21266)"
                        ],
                        [
                            "RegressionTest5.test2979(RegressionTest5.java:23255)"
                        ],
                        [
                            "RegressionTest4.test2034(RegressionTest4.java:1667)"
                        ],
                        [
                            "RegressionTest4.test2142(RegressionTest4.java:6874)"
                        ],
                        [
                            "RegressionTest4.test2150(RegressionTest4.java:7269)"
                        ],
                        [
                            "RegressionTest4.test2235(RegressionTest4.java:11652)"
                        ],
                        [
                            "RegressionTest4.test2347(RegressionTest4.java:16909)"
                        ],
                        [
                            "RegressionTest2.test1043(RegressionTest2.java:2392)"
                        ],
                        [
                            "RegressionTest2.test1107(RegressionTest2.java:5597)"
                        ],
                        [
                            "RegressionTest2.test1125(RegressionTest2.java:6283)"
                        ],
                        [
                            "RegressionTest2.test1275(RegressionTest2.java:13952)"
                        ],
                        [
                            "RegressionTest2.test1332(RegressionTest2.java:16710)"
                        ],
                        [
                            "RegressionTest0.test0014(RegressionTest0.java:361)"
                        ],
                        [
                            "RegressionTest0.test0094(RegressionTest0.java:3140)"
                        ],
                        [
                            "RegressionTest0.test0114(RegressionTest0.java:3904)"
                        ],
                        [
                            "RegressionTest0.test0127(RegressionTest0.java:4366)"
                        ],
                        [
                            "RegressionTest0.test0196(RegressionTest0.java:7085)"
                        ],
                        [
                            "RegressionTest0.test0230(RegressionTest0.java:8366)"
                        ],
                        [
                            "RegressionTest0.test0257(RegressionTest0.java:9611)"
                        ],
                        [
                            "RegressionTest0.test0264(RegressionTest0.java:9914)"
                        ],
                        [
                            "RegressionTest0.test0286(RegressionTest0.java:10824)"
                        ],
                        [
                            "RegressionTest0.test0390(RegressionTest0.java:15385)"
                        ],
                        [
                            "RegressionTest0.test0466(RegressionTest0.java:18840)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Math/patch7_7-Math-49-Kali-A.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-DynaMoth",
                    "failing": 36,
                    "testrun": 1818,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test0674(RegressionTest1)",
                        "test0952(RegressionTest1)",
                        "test1635(RegressionTest3)",
                        "test1651(RegressionTest3)",
                        "test1744(RegressionTest3)",
                        "test1110(RegressionTest2)",
                        "test1111(RegressionTest2)",
                        "test1445(RegressionTest2)",
                        "test1484(RegressionTest2)",
                        "test0412(RegressionTest0)",
                        "test0482(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "org.apache.commons.math.exception.OutOfRangeException: index (102)",
                        "org.apache.commons.math.exception.OutOfRangeException: index (102)",
                        "java.lang.AssertionError: '1.0' != '0.6666666666666666'",
                        "java.lang.ArrayIndexOutOfBoundsException: 135",
                        "org.junit.ComparisonFailure: expected:<[[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -]0.0]> but was:<[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ]0.0]>",
                        "org.apache.commons.math.exception.OutOfRangeException: index (102)",
                        "java.lang.AssertionError: '1.0' != '0.6666666666666666'",
                        "java.lang.AssertionError: '1.0' != '0.6666666666666666'",
                        "java.lang.AssertionError: '1.0' != '0.0'",
                        "java.lang.AssertionError: '1.0' != '0.0'",
                        "java.lang.AssertionError: '33.54101966249685' != '0.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ],
                        [
                            "RegressionTest1.test0674(RegressionTest1.java:8886)"
                        ],
                        [
                            "RegressionTest1.test0952(RegressionTest1.java:24910)"
                        ],
                        [
                            "RegressionTest3.test1635(RegressionTest3.java:6858)"
                        ],
                        [
                            "RegressionTest3.test1651(RegressionTest3.java:7526)"
                        ],
                        [
                            "RegressionTest3.test1744(RegressionTest3.java:11964)"
                        ],
                        [
                            "RegressionTest2.test1110(RegressionTest2.java:5911)"
                        ],
                        [
                            "RegressionTest2.test1111(RegressionTest2.java:5966)"
                        ],
                        [
                            "RegressionTest2.test1445(RegressionTest2.java:23143)"
                        ],
                        [
                            "RegressionTest2.test1484(RegressionTest2.java:25390)"
                        ],
                        [
                            "RegressionTest0.test0412(RegressionTest0.java:22375)"
                        ],
                        [
                            "RegressionTest0.test0482(RegressionTest0.java:26272)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Math/patch7_7-Math-49-Kali-A.patch",
                    "test": "test_from_DRR_patch2-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3346,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Math/patch7_7-Math-49-Kali-A.patch",
                    "test": "test_from_NFL_patch7_7-Math-49-Kali-A",
                    "failing": 142,
                    "testrun": 2023,
                    "failings": [
                        "test001(ErrorTest0)",
                        "test002(ErrorTest0)",
                        "test003(ErrorTest0)",
                        "test004(ErrorTest0)",
                        "test005(ErrorTest0)",
                        "test006(ErrorTest0)",
                        "test007(ErrorTest0)",
                        "test008(ErrorTest0)",
                        "test009(ErrorTest0)",
                        "test010(ErrorTest0)",
                        "test011(ErrorTest0)",
                        "test012(ErrorTest0)",
                        "test013(ErrorTest0)",
                        "test014(ErrorTest0)",
                        "test015(ErrorTest0)",
                        "test016(ErrorTest0)",
                        "test017(ErrorTest0)",
                        "test018(ErrorTest0)",
                        "test019(ErrorTest0)",
                        "test020(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test022(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test024(ErrorTest0)",
                        "test025(ErrorTest0)",
                        "test026(ErrorTest0)",
                        "test027(ErrorTest0)",
                        "test028(ErrorTest0)",
                        "test029(ErrorTest0)",
                        "test030(ErrorTest0)",
                        "test031(ErrorTest0)",
                        "test032(ErrorTest0)",
                        "test033(ErrorTest0)",
                        "test034(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test036(ErrorTest0)",
                        "test037(ErrorTest0)",
                        "test038(ErrorTest0)",
                        "test039(ErrorTest0)",
                        "test040(ErrorTest0)",
                        "test041(ErrorTest0)",
                        "test042(ErrorTest0)",
                        "test043(ErrorTest0)",
                        "test044(ErrorTest0)",
                        "test045(ErrorTest0)",
                        "test046(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test048(ErrorTest0)",
                        "test049(ErrorTest0)",
                        "test050(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test052(ErrorTest0)",
                        "test053(ErrorTest0)",
                        "test054(ErrorTest0)",
                        "test055(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test057(ErrorTest0)",
                        "test058(ErrorTest0)",
                        "test059(ErrorTest0)",
                        "test060(ErrorTest0)",
                        "test061(ErrorTest0)",
                        "test062(ErrorTest0)",
                        "test063(ErrorTest0)",
                        "test064(ErrorTest0)",
                        "test065(ErrorTest0)",
                        "test066(ErrorTest0)",
                        "test067(ErrorTest0)",
                        "test068(ErrorTest0)",
                        "test069(ErrorTest0)",
                        "test070(ErrorTest0)",
                        "test071(ErrorTest0)",
                        "test072(ErrorTest0)",
                        "test073(ErrorTest0)",
                        "test074(ErrorTest0)",
                        "test075(ErrorTest0)",
                        "test076(ErrorTest0)",
                        "test077(ErrorTest0)",
                        "test078(ErrorTest0)",
                        "test079(ErrorTest0)",
                        "test080(ErrorTest0)",
                        "test081(ErrorTest0)",
                        "test082(ErrorTest0)",
                        "test083(ErrorTest0)",
                        "test084(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test086(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test088(ErrorTest0)",
                        "test089(ErrorTest0)",
                        "test090(ErrorTest0)",
                        "test091(ErrorTest0)",
                        "test092(ErrorTest0)",
                        "test093(ErrorTest0)",
                        "test094(ErrorTest0)",
                        "test095(ErrorTest0)",
                        "test096(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test098(ErrorTest0)",
                        "test099(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test101(ErrorTest0)",
                        "test102(ErrorTest0)",
                        "test103(ErrorTest0)",
                        "test104(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test107(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test109(ErrorTest0)",
                        "test110(ErrorTest0)",
                        "test111(ErrorTest0)",
                        "test112(ErrorTest0)",
                        "test113(ErrorTest0)",
                        "test114(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test116(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test118(ErrorTest0)",
                        "test119(ErrorTest0)",
                        "test120(ErrorTest0)",
                        "test121(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test123(ErrorTest0)",
                        "test124(ErrorTest0)",
                        "test125(ErrorTest0)",
                        "test126(ErrorTest0)",
                        "test127(ErrorTest0)",
                        "test128(ErrorTest0)",
                        "test129(ErrorTest0)",
                        "test130(ErrorTest0)",
                        "test131(ErrorTest0)",
                        "test132(ErrorTest0)",
                        "test133(ErrorTest0)",
                        "test134(ErrorTest0)",
                        "test135(ErrorTest0)",
                        "test136(ErrorTest0)",
                        "test137(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test139(ErrorTest0)",
                        "test140(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test142(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector7",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector7",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector5 and openMapRealVector9",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector7 and openMapRealVector2",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector4 and openMapRealVector51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector18",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector7",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector9",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector18",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector7",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector9",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector18",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector9",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector56",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector9",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector7",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector4 and openMapRealVector11",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector18",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector18",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector18",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector5 and openMapRealVector16",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector9",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector5 and openMapRealVector15",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector6 and openMapRealVector69",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector5 and openMapRealVector15",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector5 and openMapRealVector47",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector6",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector18",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector36",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector5 and openMapRealVector71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector44",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector46.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector7 and openMapRealVector2",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector6",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector5 and openMapRealVector15",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector50",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector7 and openMapRealVector2",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector53",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector81",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector16",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector7",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector95 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector6",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector44",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector77",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector15 and openMapRealVector31",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector5",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector25",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector70",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector5",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector42",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector70",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector5 and openMapRealVector60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector30 and openMapRealVector31",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector65",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector5 and openMapRealVector30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector16",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector12",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector5 and openMapRealVector15",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector71",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector9",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector70",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector8 and openMapRealVector66",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector9",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector9",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector9",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector5",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector18",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector5 and openMapRealVector15",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector16",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector70",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector25 and openMapRealVector26",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector43",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector90",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector24.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector21",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector12 and openMapRealVector88",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector11",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector28 and openMapRealVector51",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector5 and openMapRealVector30",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector5 and openMapRealVector15",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector9.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector91 and openMapRealVector72.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector40",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector23 and openMapRealVector31",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector5 and openMapRealVector60",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector3 and openMapRealVector45",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector16",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector4 and openMapRealVector83",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector15 and openMapRealVector7.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector64",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector20.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector10 and openMapRealVector20",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector57",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector75",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector52",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector27",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector15 and openMapRealVector54",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector28",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector4 and realVector98",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector63",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector23 and openMapRealVector39",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector33 and openMapRealVector41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector41",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector40",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector9",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector52",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector7 and openMapRealVector2",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector5 and openMapRealVector15",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector7 and openMapRealVector17",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector5 and openMapRealVector72",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector11",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector35 and openMapRealVector16.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector11",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector4 and realVector98",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector82 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector21"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test001(ErrorTest0.java:38)"
                        ],
                        [
                            "ErrorTest0.test002(ErrorTest0.java:69)"
                        ],
                        [
                            "ErrorTest0.test003(ErrorTest0.java:90)"
                        ],
                        [
                            "ErrorTest0.test004(ErrorTest0.java:119)"
                        ],
                        [
                            "ErrorTest0.test005(ErrorTest0.java:161)"
                        ],
                        [
                            "ErrorTest0.test006(ErrorTest0.java:185)"
                        ],
                        [
                            "ErrorTest0.test007(ErrorTest0.java:214)"
                        ],
                        [
                            "ErrorTest0.test008(ErrorTest0.java:237)"
                        ],
                        [
                            "ErrorTest0.test009(ErrorTest0.java:275)"
                        ],
                        [
                            "ErrorTest0.test010(ErrorTest0.java:300)"
                        ],
                        [
                            "ErrorTest0.test011(ErrorTest0.java:318)"
                        ],
                        [
                            "ErrorTest0.test012(ErrorTest0.java:378)"
                        ],
                        [
                            "ErrorTest0.test013(ErrorTest0.java:402)"
                        ],
                        [
                            "ErrorTest0.test014(ErrorTest0.java:440)"
                        ],
                        [
                            "ErrorTest0.test015(ErrorTest0.java:486)"
                        ],
                        [
                            "ErrorTest0.test016(ErrorTest0.java:524)"
                        ],
                        [
                            "ErrorTest0.test017(ErrorTest0.java:545)"
                        ],
                        [
                            "ErrorTest0.test018(ErrorTest0.java:584)"
                        ],
                        [
                            "ErrorTest0.test019(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test020(ErrorTest0.java:648)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:671)"
                        ],
                        [
                            "ErrorTest0.test022(ErrorTest0.java:719)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:742)"
                        ],
                        [
                            "ErrorTest0.test024(ErrorTest0.java:783)"
                        ],
                        [
                            "ErrorTest0.test025(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test026(ErrorTest0.java:845)"
                        ],
                        [
                            "ErrorTest0.test027(ErrorTest0.java:898)"
                        ],
                        [
                            "ErrorTest0.test028(ErrorTest0.java:921)"
                        ],
                        [
                            "ErrorTest0.test029(ErrorTest0.java:965)"
                        ],
                        [
                            "ErrorTest0.test030(ErrorTest0.java:977)"
                        ],
                        [
                            "ErrorTest0.test031(ErrorTest0.java:1001)"
                        ],
                        [
                            "ErrorTest0.test032(ErrorTest0.java:1036)"
                        ],
                        [
                            "ErrorTest0.test033(ErrorTest0.java:1090)"
                        ],
                        [
                            "ErrorTest0.test034(ErrorTest0.java:1133)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1168)"
                        ],
                        [
                            "ErrorTest0.test036(ErrorTest0.java:1186)"
                        ],
                        [
                            "ErrorTest0.test037(ErrorTest0.java:1198)"
                        ],
                        [
                            "ErrorTest0.test038(ErrorTest0.java:1221)"
                        ],
                        [
                            "ErrorTest0.test039(ErrorTest0.java:1265)"
                        ],
                        [
                            "ErrorTest0.test040(ErrorTest0.java:1307)"
                        ],
                        [
                            "ErrorTest0.test041(ErrorTest0.java:1325)"
                        ],
                        [
                            "ErrorTest0.test042(ErrorTest0.java:1369)"
                        ],
                        [
                            "ErrorTest0.test043(ErrorTest0.java:1415)"
                        ],
                        [
                            "ErrorTest0.test044(ErrorTest0.java:1467)"
                        ],
                        [
                            "ErrorTest0.test045(ErrorTest0.java:1503)"
                        ],
                        [
                            "ErrorTest0.test046(ErrorTest0.java:1521)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:1585)"
                        ],
                        [
                            "ErrorTest0.test048(ErrorTest0.java:1616)"
                        ],
                        [
                            "ErrorTest0.test049(ErrorTest0.java:1660)"
                        ],
                        [
                            "ErrorTest0.test050(ErrorTest0.java:1672)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:1695)"
                        ],
                        [
                            "ErrorTest0.test052(ErrorTest0.java:1739)"
                        ],
                        [
                            "ErrorTest0.test053(ErrorTest0.java:1788)"
                        ],
                        [
                            "ErrorTest0.test054(ErrorTest0.java:1835)"
                        ],
                        [
                            "ErrorTest0.test055(ErrorTest0.java:1867)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:1900)"
                        ],
                        [
                            "ErrorTest0.test057(ErrorTest0.java:1949)"
                        ],
                        [
                            "ErrorTest0.test058(ErrorTest0.java:1970)"
                        ],
                        [
                            "ErrorTest0.test059(ErrorTest0.java:2025)"
                        ],
                        [
                            "ErrorTest0.test060(ErrorTest0.java:2084)"
                        ],
                        [
                            "ErrorTest0.test061(ErrorTest0.java:2137)"
                        ],
                        [
                            "ErrorTest0.test062(ErrorTest0.java:2168)"
                        ],
                        [
                            "ErrorTest0.test063(ErrorTest0.java:2202)"
                        ],
                        [
                            "ErrorTest0.test064(ErrorTest0.java:2255)"
                        ],
                        [
                            "ErrorTest0.test065(ErrorTest0.java:2298)"
                        ],
                        [
                            "ErrorTest0.test066(ErrorTest0.java:2353)"
                        ],
                        [
                            "ErrorTest0.test067(ErrorTest0.java:2397)"
                        ],
                        [
                            "ErrorTest0.test068(ErrorTest0.java:2439)"
                        ],
                        [
                            "ErrorTest0.test069(ErrorTest0.java:2482)"
                        ],
                        [
                            "ErrorTest0.test070(ErrorTest0.java:2507)"
                        ],
                        [
                            "ErrorTest0.test071(ErrorTest0.java:2547)"
                        ],
                        [
                            "ErrorTest0.test072(ErrorTest0.java:2602)"
                        ],
                        [
                            "ErrorTest0.test073(ErrorTest0.java:2645)"
                        ],
                        [
                            "ErrorTest0.test074(ErrorTest0.java:2679)"
                        ],
                        [
                            "ErrorTest0.test075(ErrorTest0.java:2725)"
                        ],
                        [
                            "ErrorTest0.test076(ErrorTest0.java:2748)"
                        ],
                        [
                            "ErrorTest0.test077(ErrorTest0.java:2795)"
                        ],
                        [
                            "ErrorTest0.test078(ErrorTest0.java:2837)"
                        ],
                        [
                            "ErrorTest0.test079(ErrorTest0.java:2892)"
                        ],
                        [
                            "ErrorTest0.test080(ErrorTest0.java:2915)"
                        ],
                        [
                            "ErrorTest0.test081(ErrorTest0.java:2957)"
                        ],
                        [
                            "ErrorTest0.test082(ErrorTest0.java:2995)"
                        ],
                        [
                            "ErrorTest0.test083(ErrorTest0.java:3033)"
                        ],
                        [
                            "ErrorTest0.test084(ErrorTest0.java:3071)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:3104)"
                        ],
                        [
                            "ErrorTest0.test086(ErrorTest0.java:3153)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:3182)"
                        ],
                        [
                            "ErrorTest0.test088(ErrorTest0.java:3225)"
                        ],
                        [
                            "ErrorTest0.test089(ErrorTest0.java:3274)"
                        ],
                        [
                            "ErrorTest0.test090(ErrorTest0.java:3323)"
                        ],
                        [
                            "ErrorTest0.test091(ErrorTest0.java:3360)"
                        ],
                        [
                            "ErrorTest0.test092(ErrorTest0.java:3412)"
                        ],
                        [
                            "ErrorTest0.test093(ErrorTest0.java:3469)"
                        ],
                        [
                            "ErrorTest0.test094(ErrorTest0.java:3508)"
                        ],
                        [
                            "ErrorTest0.test095(ErrorTest0.java:3546)"
                        ],
                        [
                            "ErrorTest0.test096(ErrorTest0.java:3602)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:3623)"
                        ],
                        [
                            "ErrorTest0.test098(ErrorTest0.java:3657)"
                        ],
                        [
                            "ErrorTest0.test099(ErrorTest0.java:3715)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:3766)"
                        ],
                        [
                            "ErrorTest0.test101(ErrorTest0.java:3805)"
                        ],
                        [
                            "ErrorTest0.test102(ErrorTest0.java:3857)"
                        ],
                        [
                            "ErrorTest0.test103(ErrorTest0.java:3882)"
                        ],
                        [
                            "ErrorTest0.test104(ErrorTest0.java:3905)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:3929)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:3985)"
                        ],
                        [
                            "ErrorTest0.test107(ErrorTest0.java:4016)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:4055)"
                        ],
                        [
                            "ErrorTest0.test109(ErrorTest0.java:4102)"
                        ],
                        [
                            "ErrorTest0.test110(ErrorTest0.java:4146)"
                        ],
                        [
                            "ErrorTest0.test111(ErrorTest0.java:4189)"
                        ],
                        [
                            "ErrorTest0.test112(ErrorTest0.java:4246)"
                        ],
                        [
                            "ErrorTest0.test113(ErrorTest0.java:4279)"
                        ],
                        [
                            "ErrorTest0.test114(ErrorTest0.java:4338)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:4356)"
                        ],
                        [
                            "ErrorTest0.test116(ErrorTest0.java:4401)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:4452)"
                        ],
                        [
                            "ErrorTest0.test118(ErrorTest0.java:4502)"
                        ],
                        [
                            "ErrorTest0.test119(ErrorTest0.java:4542)"
                        ],
                        [
                            "ErrorTest0.test120(ErrorTest0.java:4588)"
                        ],
                        [
                            "ErrorTest0.test121(ErrorTest0.java:4625)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:4647)"
                        ],
                        [
                            "ErrorTest0.test123(ErrorTest0.java:4689)"
                        ],
                        [
                            "ErrorTest0.test124(ErrorTest0.java:4725)"
                        ],
                        [
                            "ErrorTest0.test125(ErrorTest0.java:4784)"
                        ],
                        [
                            "ErrorTest0.test126(ErrorTest0.java:4826)"
                        ],
                        [
                            "ErrorTest0.test127(ErrorTest0.java:4875)"
                        ],
                        [
                            "ErrorTest0.test128(ErrorTest0.java:4927)"
                        ],
                        [
                            "ErrorTest0.test129(ErrorTest0.java:4961)"
                        ],
                        [
                            "ErrorTest0.test130(ErrorTest0.java:4992)"
                        ],
                        [
                            "ErrorTest0.test131(ErrorTest0.java:5030)"
                        ],
                        [
                            "ErrorTest0.test132(ErrorTest0.java:5065)"
                        ],
                        [
                            "ErrorTest0.test133(ErrorTest0.java:5125)"
                        ],
                        [
                            "ErrorTest0.test134(ErrorTest0.java:5174)"
                        ],
                        [
                            "ErrorTest0.test135(ErrorTest0.java:5222)"
                        ],
                        [
                            "ErrorTest0.test136(ErrorTest0.java:5280)"
                        ],
                        [
                            "ErrorTest0.test137(ErrorTest0.java:5319)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:5346)"
                        ],
                        [
                            "ErrorTest0.test139(ErrorTest0.java:5371)"
                        ],
                        [
                            "ErrorTest0.test140(ErrorTest0.java:5430)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:5487)"
                        ],
                        [
                            "ErrorTest0.test142(ErrorTest0.java:5521)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Math/patch7_7-Math-49-Kali-A.patch",
                    "test": "test_from_DRR_patch5-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4079,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Kali-A/Math/patch7_7-Math-49-Kali-A.patch",
                    "test": "test_from_DRR_patch1-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3942,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 99.68
        },
        {
            "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/jKali/Math/patch22_16-Math-49-jKali.patch",
            "project": "Math",
            "bugid": "49",
            "dataset": "NFL",
            "date": "2021-11-22T20:37:48.605826",
            "project_checked": "ok",
            "compiledProjectModified": "no",
            "patchApplied": "no",
            "arrive_end": "no",
            "patched_project_pass_all_test": "no"
        },
        {
            "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Nopol/Math/patch1_1-Math-49-Nopol.patch",
            "project": "Math",
            "bugid": "49",
            "dataset": "NFL",
            "date": "2021-11-22T20:37:54.300430",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Nopol/Math/patch1_1-Math-49-Nopol.patch",
                    "test": "test_from_DRR_patch1-Math-49-Nopol2015-plausible",
                    "failing": 30,
                    "testrun": 1836,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test29(ErrorTest0)",
                        "test1648(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector82.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector40 and openMapRealVector5",
                        "java.lang.AssertionError: Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 135"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1195)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1249)"
                        ],
                        [
                            "ErrorTest0.test29(ErrorTest0.java:1277)"
                        ],
                        [
                            "RegressionTest3.test1648(RegressionTest3.java:7247)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Nopol/Math/patch1_1-Math-49-Nopol.patch",
                    "test": "test_from_DRR_patch4-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4085,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Nopol/Math/patch1_1-Math-49-Nopol.patch",
                    "test": "test_from_DRR_patch1-Math-49-JGenProg2015-plausible",
                    "failing": 60,
                    "testrun": 1868,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test29(ErrorTest0)",
                        "test30(ErrorTest0)",
                        "test31(ErrorTest0)",
                        "test32(ErrorTest0)",
                        "test33(ErrorTest0)",
                        "test34(ErrorTest0)",
                        "test35(ErrorTest0)",
                        "test36(ErrorTest0)",
                        "test37(ErrorTest0)",
                        "test38(ErrorTest0)",
                        "test39(ErrorTest0)",
                        "test40(ErrorTest0)",
                        "test41(ErrorTest0)",
                        "test42(ErrorTest0)",
                        "test0658(RegressionTest1)",
                        "test0774(RegressionTest1)",
                        "test0797(RegressionTest1)",
                        "test0812(RegressionTest1)",
                        "test0936(RegressionTest1)",
                        "test0949(RegressionTest1)",
                        "test0970(RegressionTest1)",
                        "test1534(RegressionTest3)",
                        "test1789(RegressionTest3)",
                        "test1795(RegressionTest3)",
                        "test1232(RegressionTest2)",
                        "test1274(RegressionTest2)",
                        "test1351(RegressionTest2)",
                        "test1358(RegressionTest2)",
                        "test1422(RegressionTest2)",
                        "test1468(RegressionTest2)",
                        "test0237(RegressionTest0)",
                        "test0339(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector91.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector48 and openMapRealVector50.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector33 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector45.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector71 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector96.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector57.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector86 and openMapRealVector2.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector54.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector67 and openMapRealVector61.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18.",
                        "org.junit.ComparisonFailure: expected:<[-1.0, []1.0]> but was:<[-1.0, [-]1.0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[-1.0, []1.0]> but was:<[-1.0, [-]1.0]>",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.junit.ComparisonFailure: expected:<[99.0, [1].0]> but was:<[99.0, [0].0]>"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:122)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:190)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:246)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:304)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:341)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:377)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:435)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:496)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:532)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:594)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:621)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:681)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:737)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:793)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:840)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:897)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:1010)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:1067)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:1129)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1165)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1203)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1241)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1326)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1389)"
                        ],
                        [
                            "ErrorTest0.test29(ErrorTest0.java:1446)"
                        ],
                        [
                            "ErrorTest0.test30(ErrorTest0.java:1486)"
                        ],
                        [
                            "ErrorTest0.test31(ErrorTest0.java:1525)"
                        ],
                        [
                            "ErrorTest0.test32(ErrorTest0.java:1583)"
                        ],
                        [
                            "ErrorTest0.test33(ErrorTest0.java:1621)"
                        ],
                        [
                            "ErrorTest0.test34(ErrorTest0.java:1660)"
                        ],
                        [
                            "ErrorTest0.test35(ErrorTest0.java:1719)"
                        ],
                        [
                            "ErrorTest0.test36(ErrorTest0.java:1756)"
                        ],
                        [
                            "ErrorTest0.test37(ErrorTest0.java:1813)"
                        ],
                        [
                            "ErrorTest0.test38(ErrorTest0.java:1860)"
                        ],
                        [
                            "ErrorTest0.test39(ErrorTest0.java:1885)"
                        ],
                        [
                            "ErrorTest0.test40(ErrorTest0.java:1939)"
                        ],
                        [
                            "ErrorTest0.test41(ErrorTest0.java:1976)"
                        ],
                        [
                            "ErrorTest0.test42(ErrorTest0.java:1994)"
                        ],
                        [
                            "RegressionTest1.test0658(RegressionTest1.java:8692)"
                        ],
                        [
                            "RegressionTest1.test0774(RegressionTest1.java:15111)"
                        ],
                        [
                            "RegressionTest1.test0797(RegressionTest1.java:16114)"
                        ],
                        [
                            "RegressionTest1.test0812(RegressionTest1.java:16843)"
                        ],
                        [
                            "RegressionTest1.test0936(RegressionTest1.java:23342)"
                        ],
                        [
                            "RegressionTest1.test0949(RegressionTest1.java:24008)"
                        ],
                        [
                            "RegressionTest1.test0970(RegressionTest1.java:25134)"
                        ],
                        [
                            "RegressionTest3.test1534(RegressionTest3.java:1561)"
                        ],
                        [
                            "RegressionTest3.test1789(RegressionTest3.java:15131)"
                        ],
                        [
                            "RegressionTest3.test1795(RegressionTest3.java:15480)"
                        ],
                        [
                            "RegressionTest2.test1232(RegressionTest2.java:12019)"
                        ],
                        [
                            "RegressionTest2.test1274(RegressionTest2.java:13909)"
                        ],
                        [
                            "RegressionTest2.test1351(RegressionTest2.java:17937)"
                        ],
                        [
                            "RegressionTest2.test1358(RegressionTest2.java:18426)"
                        ],
                        [
                            "RegressionTest2.test1422(RegressionTest2.java:21944)"
                        ],
                        [
                            "RegressionTest2.test1468(RegressionTest2.java:24124)"
                        ],
                        [
                            "RegressionTest0.test0237(RegressionTest0.java:12427)"
                        ],
                        [
                            "RegressionTest0.test0339(RegressionTest0.java:18323)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Nopol/Math/patch1_1-Math-49-Nopol.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-Nopol",
                    "failing": 27,
                    "testrun": 1814,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Nopol/Math/patch1_1-Math-49-Nopol.patch",
                    "test": "test_from_DRR_patch3-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3896,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Nopol/Math/patch1_1-Math-49-Nopol.patch",
                    "test": "test_from_DRR_patch1-Math-49-DeepRepair",
                    "failing": 0,
                    "testrun": 3963,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Nopol/Math/patch1_1-Math-49-Nopol.patch",
                    "test": "test_from_PFL_patch130_99-Math-49-ARJA",
                    "failing": 55,
                    "testrun": 1877,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test0679(RegressionTest1)",
                        "test0703(RegressionTest1)",
                        "test0708(RegressionTest1)",
                        "test0786(RegressionTest1)",
                        "test0833(RegressionTest1)",
                        "test0887(RegressionTest1)",
                        "test0954(RegressionTest1)",
                        "test1617(RegressionTest3)",
                        "test1653(RegressionTest3)",
                        "test1676(RegressionTest3)",
                        "test1684(RegressionTest3)",
                        "test1754(RegressionTest3)",
                        "test1791(RegressionTest3)",
                        "test1821(RegressionTest3)",
                        "test1016(RegressionTest2)",
                        "test1043(RegressionTest2)",
                        "test1057(RegressionTest2)",
                        "test1101(RegressionTest2)",
                        "test1132(RegressionTest2)",
                        "test1195(RegressionTest2)",
                        "test1227(RegressionTest2)",
                        "test1321(RegressionTest2)",
                        "test1332(RegressionTest2)",
                        "test1336(RegressionTest2)",
                        "test1386(RegressionTest2)",
                        "test1440(RegressionTest2)",
                        "test1459(RegressionTest2)",
                        "test1478(RegressionTest2)",
                        "test0434(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector77 and openMapRealVector74.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector64 and openMapRealVector35.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector81 and openMapRealVector78.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector83.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector12.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector94 and openMapRealVector67.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector69 and openMapRealVector60.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector53 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector43 and openMapRealVector30.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: '100.0' != '99.0'",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:118)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:155)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:187)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:239)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:283)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:336)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:373)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:428)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:442)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:502)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:536)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:580)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:624)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:647)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:678)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:743)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:761)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:805)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:852)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:883)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:929)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:998)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1031)"
                        ],
                        [
                            "RegressionTest1.test0679(RegressionTest1.java:9366)"
                        ],
                        [
                            "RegressionTest1.test0703(RegressionTest1.java:10696)"
                        ],
                        [
                            "RegressionTest1.test0708(RegressionTest1.java:11060)"
                        ],
                        [
                            "RegressionTest1.test0786(RegressionTest1.java:15251)"
                        ],
                        [
                            "RegressionTest1.test0833(RegressionTest1.java:17643)"
                        ],
                        [
                            "RegressionTest1.test0887(RegressionTest1.java:20642)"
                        ],
                        [
                            "RegressionTest1.test0954(RegressionTest1.java:23986)"
                        ],
                        [
                            "RegressionTest3.test1617(RegressionTest3.java:6168)"
                        ],
                        [
                            "RegressionTest3.test1653(RegressionTest3.java:8271)"
                        ],
                        [
                            "RegressionTest3.test1676(RegressionTest3.java:9458)"
                        ],
                        [
                            "RegressionTest3.test1684(RegressionTest3.java:9815)"
                        ],
                        [
                            "RegressionTest3.test1754(RegressionTest3.java:13715)"
                        ],
                        [
                            "RegressionTest3.test1791(RegressionTest3.java:15620)"
                        ],
                        [
                            "RegressionTest3.test1821(RegressionTest3.java:17246)"
                        ],
                        [
                            "RegressionTest2.test1016(RegressionTest2.java:802)"
                        ],
                        [
                            "RegressionTest2.test1043(RegressionTest2.java:2271)"
                        ],
                        [
                            "RegressionTest2.test1057(RegressionTest2.java:2829)"
                        ],
                        [
                            "RegressionTest2.test1101(RegressionTest2.java:5046)"
                        ],
                        [
                            "RegressionTest2.test1132(RegressionTest2.java:6433)"
                        ],
                        [
                            "RegressionTest2.test1195(RegressionTest2.java:9954)"
                        ],
                        [
                            "RegressionTest2.test1227(RegressionTest2.java:11818)"
                        ],
                        [
                            "RegressionTest2.test1321(RegressionTest2.java:16650)"
                        ],
                        [
                            "RegressionTest2.test1332(RegressionTest2.java:17190)"
                        ],
                        [
                            "RegressionTest2.test1336(RegressionTest2.java:17380)"
                        ],
                        [
                            "RegressionTest2.test1386(RegressionTest2.java:19943)"
                        ],
                        [
                            "RegressionTest2.test1440(RegressionTest2.java:22732)"
                        ],
                        [
                            "RegressionTest2.test1459(RegressionTest2.java:23951)"
                        ],
                        [
                            "RegressionTest2.test1478(RegressionTest2.java:25059)"
                        ],
                        [
                            "RegressionTest0.test0434(RegressionTest0.java:22983)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Nopol/Math/patch1_1-Math-49-Nopol.patch",
                    "test": "test_from_DRR_patch6-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3960,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Nopol/Math/patch1_1-Math-49-Nopol.patch",
                    "test": "test_from_DRR_patch7-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3670,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Nopol/Math/patch1_1-Math-49-Nopol.patch",
                    "test": "test_from_NFL_patch15_1-Math-49-AVATAR",
                    "failing": 42,
                    "testrun": 3170,
                    "failings": [
                        "test0658(RegressionTest1)",
                        "test0720(RegressionTest1)",
                        "test0807(RegressionTest1)",
                        "test0905(RegressionTest1)",
                        "test0929(RegressionTest1)",
                        "test0953(RegressionTest1)",
                        "test0998(RegressionTest1)",
                        "test3065(RegressionTest6)",
                        "test1537(RegressionTest3)",
                        "test1569(RegressionTest3)",
                        "test1641(RegressionTest3)",
                        "test1649(RegressionTest3)",
                        "test1676(RegressionTest3)",
                        "test1790(RegressionTest3)",
                        "test1837(RegressionTest3)",
                        "test1900(RegressionTest3)",
                        "test1949(RegressionTest3)",
                        "test2514(RegressionTest5)",
                        "test2676(RegressionTest5)",
                        "test2934(RegressionTest5)",
                        "test2979(RegressionTest5)",
                        "test2034(RegressionTest4)",
                        "test2142(RegressionTest4)",
                        "test2150(RegressionTest4)",
                        "test2235(RegressionTest4)",
                        "test2347(RegressionTest4)",
                        "test1043(RegressionTest2)",
                        "test1107(RegressionTest2)",
                        "test1125(RegressionTest2)",
                        "test1275(RegressionTest2)",
                        "test1332(RegressionTest2)",
                        "test0014(RegressionTest0)",
                        "test0094(RegressionTest0)",
                        "test0114(RegressionTest0)",
                        "test0127(RegressionTest0)",
                        "test0196(RegressionTest0)",
                        "test0230(RegressionTest0)",
                        "test0257(RegressionTest0)",
                        "test0264(RegressionTest0)",
                        "test0286(RegressionTest0)",
                        "test0390(RegressionTest0)",
                        "test0466(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;"
                    ],
                    "failing_lines": [
                        [
                            "RegressionTest1.test0658(RegressionTest1.java:7482)"
                        ],
                        [
                            "RegressionTest1.test0720(RegressionTest1.java:10263)"
                        ],
                        [
                            "RegressionTest1.test0807(RegressionTest1.java:14565)"
                        ],
                        [
                            "RegressionTest1.test0905(RegressionTest1.java:19451)"
                        ],
                        [
                            "RegressionTest1.test0929(RegressionTest1.java:20507)"
                        ],
                        [
                            "RegressionTest1.test0953(RegressionTest1.java:21784)"
                        ],
                        [
                            "RegressionTest1.test0998(RegressionTest1.java:24164)"
                        ],
                        [
                            "RegressionTest6.test3065(RegressionTest6.java:2921)"
                        ],
                        [
                            "RegressionTest3.test1537(RegressionTest3.java:1978)"
                        ],
                        [
                            "RegressionTest3.test1569(RegressionTest3.java:3509)"
                        ],
                        [
                            "RegressionTest3.test1641(RegressionTest3.java:7304)"
                        ],
                        [
                            "RegressionTest3.test1649(RegressionTest3.java:7697)"
                        ],
                        [
                            "RegressionTest3.test1676(RegressionTest3.java:9079)"
                        ],
                        [
                            "RegressionTest3.test1790(RegressionTest3.java:14716)"
                        ],
                        [
                            "RegressionTest3.test1837(RegressionTest3.java:17098)"
                        ],
                        [
                            "RegressionTest3.test1900(RegressionTest3.java:20284)"
                        ],
                        [
                            "RegressionTest3.test1949(RegressionTest3.java:22668)"
                        ],
                        [
                            "RegressionTest5.test2514(RegressionTest5.java:729)"
                        ],
                        [
                            "RegressionTest5.test2676(RegressionTest5.java:8860)"
                        ],
                        [
                            "RegressionTest5.test2934(RegressionTest5.java:21266)"
                        ],
                        [
                            "RegressionTest5.test2979(RegressionTest5.java:23255)"
                        ],
                        [
                            "RegressionTest4.test2034(RegressionTest4.java:1667)"
                        ],
                        [
                            "RegressionTest4.test2142(RegressionTest4.java:6874)"
                        ],
                        [
                            "RegressionTest4.test2150(RegressionTest4.java:7269)"
                        ],
                        [
                            "RegressionTest4.test2235(RegressionTest4.java:11652)"
                        ],
                        [
                            "RegressionTest4.test2347(RegressionTest4.java:16909)"
                        ],
                        [
                            "RegressionTest2.test1043(RegressionTest2.java:2392)"
                        ],
                        [
                            "RegressionTest2.test1107(RegressionTest2.java:5597)"
                        ],
                        [
                            "RegressionTest2.test1125(RegressionTest2.java:6283)"
                        ],
                        [
                            "RegressionTest2.test1275(RegressionTest2.java:13952)"
                        ],
                        [
                            "RegressionTest2.test1332(RegressionTest2.java:16710)"
                        ],
                        [
                            "RegressionTest0.test0014(RegressionTest0.java:361)"
                        ],
                        [
                            "RegressionTest0.test0094(RegressionTest0.java:3140)"
                        ],
                        [
                            "RegressionTest0.test0114(RegressionTest0.java:3904)"
                        ],
                        [
                            "RegressionTest0.test0127(RegressionTest0.java:4366)"
                        ],
                        [
                            "RegressionTest0.test0196(RegressionTest0.java:7085)"
                        ],
                        [
                            "RegressionTest0.test0230(RegressionTest0.java:8366)"
                        ],
                        [
                            "RegressionTest0.test0257(RegressionTest0.java:9611)"
                        ],
                        [
                            "RegressionTest0.test0264(RegressionTest0.java:9914)"
                        ],
                        [
                            "RegressionTest0.test0286(RegressionTest0.java:10824)"
                        ],
                        [
                            "RegressionTest0.test0390(RegressionTest0.java:15385)"
                        ],
                        [
                            "RegressionTest0.test0466(RegressionTest0.java:18840)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Nopol/Math/patch1_1-Math-49-Nopol.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-DynaMoth",
                    "failing": 27,
                    "testrun": 1818,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Nopol/Math/patch1_1-Math-49-Nopol.patch",
                    "test": "test_from_DRR_patch2-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3346,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Nopol/Math/patch1_1-Math-49-Nopol.patch",
                    "test": "test_from_NFL_patch7_7-Math-49-Kali-A",
                    "failing": 37,
                    "testrun": 2023,
                    "failings": [
                        "test008(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test087(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test122(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test0695(RegressionTest1)",
                        "test0726(RegressionTest1)",
                        "test0957(RegressionTest1)",
                        "test0979(RegressionTest1)",
                        "test1567(RegressionTest3)",
                        "test1622(RegressionTest3)",
                        "test1688(RegressionTest3)",
                        "test1880(RegressionTest3)",
                        "test1044(RegressionTest2)",
                        "test1121(RegressionTest2)",
                        "test1300(RegressionTest2)",
                        "test1333(RegressionTest2)",
                        "test1356(RegressionTest2)",
                        "test1408(RegressionTest2)",
                        "test1480(RegressionTest2)",
                        "test0132(RegressionTest0)",
                        "test0187(RegressionTest0)",
                        "test0301(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector46.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector24.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector9.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector91 and openMapRealVector72.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector15 and openMapRealVector7.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector20.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector35 and openMapRealVector16.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector82 and openMapRealVector81.",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "org.apache.commons.math.MathRuntimeException$6: map has been modified while iterating",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: index (101)",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '110.92980307021926' != '110.90761932797945'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test008(ErrorTest0.java:237)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:671)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:742)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1168)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:1583)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:1695)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:1900)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:3104)"
                        ],
                        [
                            "ErrorTest0.test087(ErrorTest0.java:3173)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:3623)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:3766)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:3929)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:3985)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:4055)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:4356)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:4452)"
                        ],
                        [
                            "ErrorTest0.test122(ErrorTest0.java:4645)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:5346)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:5487)"
                        ],
                        [
                            "RegressionTest1.test0695(RegressionTest1.java:10855)"
                        ],
                        [
                            "RegressionTest1.test0726(RegressionTest1.java:12633)"
                        ],
                        [
                            "RegressionTest1.test0957(RegressionTest1.java:24665)"
                        ],
                        [
                            "RegressionTest1.test0979(RegressionTest1.java:25958)"
                        ],
                        [
                            "RegressionTest3.test1567(RegressionTest3.java:3405)"
                        ],
                        [
                            "RegressionTest3.test1622(RegressionTest3.java:6254)"
                        ],
                        [
                            "RegressionTest3.test1688(RegressionTest3.java:9544)"
                        ],
                        [
                            "RegressionTest3.test1880(RegressionTest3.java:19167)"
                        ],
                        [
                            "RegressionTest2.test1044(RegressionTest2.java:2283)"
                        ],
                        [
                            "RegressionTest2.test1121(RegressionTest2.java:6008)"
                        ],
                        [
                            "RegressionTest2.test1300(RegressionTest2.java:14896)"
                        ],
                        [
                            "RegressionTest2.test1333(RegressionTest2.java:16561)"
                        ],
                        [
                            "RegressionTest2.test1356(RegressionTest2.java:17513)"
                        ],
                        [
                            "RegressionTest2.test1408(RegressionTest2.java:20283)"
                        ],
                        [
                            "RegressionTest2.test1480(RegressionTest2.java:23954)"
                        ],
                        [
                            "RegressionTest0.test0132(RegressionTest0.java:6324)"
                        ],
                        [
                            "RegressionTest0.test0187(RegressionTest0.java:9527)"
                        ],
                        [
                            "RegressionTest0.test0301(RegressionTest0.java:15878)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Nopol/Math/patch1_1-Math-49-Nopol.patch",
                    "test": "test_from_DRR_patch5-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4079,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/Nopol/Math/patch1_1-Math-49-Nopol.patch",
                    "test": "test_from_DRR_patch1-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3942,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 100.34
        },
        {
            "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/AVATAR/Math/patch15_1-Math-49-AVATAR.patch",
            "project": "Math",
            "bugid": "49",
            "dataset": "NFL",
            "date": "2021-11-22T20:39:34.646590",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/AVATAR/Math/patch15_1-Math-49-AVATAR.patch",
                    "test": "test_from_DRR_patch1-Math-49-Nopol2015-plausible",
                    "failing": 30,
                    "testrun": 1836,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test29(ErrorTest0)",
                        "test1796(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector82.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector40 and openMapRealVector5",
                        "java.lang.AssertionError: '2.0' != '1.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1195)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1249)"
                        ],
                        [
                            "ErrorTest0.test29(ErrorTest0.java:1277)"
                        ],
                        [
                            "RegressionTest3.test1796(RegressionTest3.java:14956)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/AVATAR/Math/patch15_1-Math-49-AVATAR.patch",
                    "test": "test_from_DRR_patch4-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4085,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/AVATAR/Math/patch15_1-Math-49-AVATAR.patch",
                    "test": "test_from_DRR_patch1-Math-49-JGenProg2015-plausible",
                    "failing": 0,
                    "testrun": 0,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)"
                    ],
                    "status": "ERROR",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ]
                    ],
                    "errorLog": "no test generated"
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/AVATAR/Math/patch15_1-Math-49-AVATAR.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-Nopol",
                    "failing": 28,
                    "testrun": 1814,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/AVATAR/Math/patch15_1-Math-49-AVATAR.patch",
                    "test": "test_from_DRR_patch3-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3896,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/AVATAR/Math/patch15_1-Math-49-AVATAR.patch",
                    "test": "test_from_DRR_patch1-Math-49-DeepRepair",
                    "failing": 0,
                    "testrun": 3963,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/AVATAR/Math/patch15_1-Math-49-AVATAR.patch",
                    "test": "test_from_PFL_patch130_99-Math-49-ARJA",
                    "failing": 0,
                    "testrun": 0,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test0679(RegressionTest1)"
                    ],
                    "status": "ERROR",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector77 and openMapRealVector74.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector64 and openMapRealVector35.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector81 and openMapRealVector78.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector83.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector12.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector94 and openMapRealVector67.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector69 and openMapRealVector60.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector53 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector43 and openMapRealVector30.",
                        "'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:118)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:155)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:187)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:239)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:283)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:336)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:373)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:428)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:442)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:502)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:536)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:580)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:624)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:647)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:678)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:743)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:761)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:805)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:852)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:883)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:929)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:998)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1031)"
                        ]
                    ],
                    "errorLog": "no test generated"
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/AVATAR/Math/patch15_1-Math-49-AVATAR.patch",
                    "test": "test_from_DRR_patch6-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3960,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/AVATAR/Math/patch15_1-Math-49-AVATAR.patch",
                    "test": "test_from_DRR_patch7-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3670,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/AVATAR/Math/patch15_1-Math-49-AVATAR.patch",
                    "test": "test_from_NFL_patch15_1-Math-49-AVATAR",
                    "failing": 0,
                    "testrun": 3170,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/AVATAR/Math/patch15_1-Math-49-AVATAR.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-DynaMoth",
                    "failing": 28,
                    "testrun": 1818,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/AVATAR/Math/patch15_1-Math-49-AVATAR.patch",
                    "test": "test_from_DRR_patch2-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3346,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/AVATAR/Math/patch15_1-Math-49-AVATAR.patch",
                    "test": "test_from_NFL_patch7_7-Math-49-Kali-A",
                    "failing": 0,
                    "testrun": 0,
                    "failings": [
                        "test008(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test047(ErrorTest0)"
                    ],
                    "status": "ERROR",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector46.",
                        "'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test008(ErrorTest0.java:237)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:671)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:742)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1168)"
                        ]
                    ],
                    "errorLog": "no test generated"
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/AVATAR/Math/patch15_1-Math-49-AVATAR.patch",
                    "test": "test_from_DRR_patch5-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4079,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/NFL/Doverfitting/AVATAR/Math/patch15_1-Math-49-AVATAR.patch",
                    "test": "test_from_DRR_patch1-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3942,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 100.65
        },
        {
            "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/ARJA/Math/patch130_99-Math-49-ARJA.patch",
            "project": "Math",
            "bugid": "49",
            "dataset": "PFL",
            "date": "2021-11-22T20:41:15.297580",
            "project_checked": "ok",
            "compiledProjectModified": "ok",
            "patchApplied": "ok",
            "arrive_end": "ok",
            "patched_project_pass_all_test": "ok",
            "test_execution": [
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/ARJA/Math/patch130_99-Math-49-ARJA.patch",
                    "test": "test_from_DRR_patch1-Math-49-Nopol2015-plausible",
                    "failing": 30,
                    "testrun": 1836,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test29(ErrorTest0)",
                        "test1796(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector82.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector40 and openMapRealVector5",
                        "java.lang.AssertionError: '2.0' != '1.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1195)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1249)"
                        ],
                        [
                            "ErrorTest0.test29(ErrorTest0.java:1277)"
                        ],
                        [
                            "RegressionTest3.test1796(RegressionTest3.java:14956)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/ARJA/Math/patch130_99-Math-49-ARJA.patch",
                    "test": "test_from_DRR_patch4-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4085,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/ARJA/Math/patch130_99-Math-49-ARJA.patch",
                    "test": "test_from_DRR_patch1-Math-49-JGenProg2015-plausible",
                    "failing": 32,
                    "testrun": 1868,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test28(ErrorTest0)",
                        "test30(ErrorTest0)",
                        "test31(ErrorTest0)",
                        "test32(ErrorTest0)",
                        "test34(ErrorTest0)",
                        "test35(ErrorTest0)",
                        "test36(ErrorTest0)",
                        "test37(ErrorTest0)",
                        "test38(ErrorTest0)",
                        "test39(ErrorTest0)",
                        "test40(ErrorTest0)",
                        "test41(ErrorTest0)",
                        "test42(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector91.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector48 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector33 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector88 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector90 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector71 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector96.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector57.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector86 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector93 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector54.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector67 and openMapRealVector61.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:190)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:246)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:304)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:341)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:377)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:496)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:594)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:621)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:681)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:737)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:793)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:840)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:1010)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:1129)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1292)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1326)"
                        ],
                        [
                            "ErrorTest0.test28(ErrorTest0.java:1389)"
                        ],
                        [
                            "ErrorTest0.test30(ErrorTest0.java:1486)"
                        ],
                        [
                            "ErrorTest0.test31(ErrorTest0.java:1525)"
                        ],
                        [
                            "ErrorTest0.test32(ErrorTest0.java:1583)"
                        ],
                        [
                            "ErrorTest0.test34(ErrorTest0.java:1660)"
                        ],
                        [
                            "ErrorTest0.test35(ErrorTest0.java:1719)"
                        ],
                        [
                            "ErrorTest0.test36(ErrorTest0.java:1756)"
                        ],
                        [
                            "ErrorTest0.test37(ErrorTest0.java:1813)"
                        ],
                        [
                            "ErrorTest0.test38(ErrorTest0.java:1860)"
                        ],
                        [
                            "ErrorTest0.test39(ErrorTest0.java:1885)"
                        ],
                        [
                            "ErrorTest0.test40(ErrorTest0.java:1939)"
                        ],
                        [
                            "ErrorTest0.test41(ErrorTest0.java:1976)"
                        ],
                        [
                            "ErrorTest0.test42(ErrorTest0.java:1994)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/ARJA/Math/patch130_99-Math-49-ARJA.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-Nopol",
                    "failing": 28,
                    "testrun": 1814,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/ARJA/Math/patch130_99-Math-49-ARJA.patch",
                    "test": "test_from_DRR_patch3-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3896,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/ARJA/Math/patch130_99-Math-49-ARJA.patch",
                    "test": "test_from_DRR_patch1-Math-49-DeepRepair",
                    "failing": 0,
                    "testrun": 3963,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/ARJA/Math/patch130_99-Math-49-ARJA.patch",
                    "test": "test_from_PFL_patch130_99-Math-49-ARJA",
                    "failing": 26,
                    "testrun": 1877,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector77 and openMapRealVector74.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector64 and openMapRealVector35.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector81 and openMapRealVector78.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector83.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector45.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector1 and realVector64",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector12.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector94 and openMapRealVector67.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector16 and openMapRealVector18.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector32.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector69 and openMapRealVector60.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector30 and openMapRealVector3.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector53 and openMapRealVector40.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector43 and openMapRealVector30."
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:118)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:155)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:187)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:239)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:283)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:336)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:373)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:428)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:442)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:502)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:536)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:580)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:624)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:647)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:678)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:743)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:761)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:805)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:852)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:883)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:929)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:960)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:998)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1031)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/ARJA/Math/patch130_99-Math-49-ARJA.patch",
                    "test": "test_from_DRR_patch6-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3960,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/ARJA/Math/patch130_99-Math-49-ARJA.patch",
                    "test": "test_from_DRR_patch7-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3670,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/ARJA/Math/patch130_99-Math-49-ARJA.patch",
                    "test": "test_from_NFL_patch15_1-Math-49-AVATAR",
                    "failing": 42,
                    "testrun": 3170,
                    "failings": [
                        "test0658(RegressionTest1)",
                        "test0720(RegressionTest1)",
                        "test0807(RegressionTest1)",
                        "test0905(RegressionTest1)",
                        "test0929(RegressionTest1)",
                        "test0953(RegressionTest1)",
                        "test0998(RegressionTest1)",
                        "test3065(RegressionTest6)",
                        "test1537(RegressionTest3)",
                        "test1569(RegressionTest3)",
                        "test1641(RegressionTest3)",
                        "test1649(RegressionTest3)",
                        "test1676(RegressionTest3)",
                        "test1790(RegressionTest3)",
                        "test1837(RegressionTest3)",
                        "test1900(RegressionTest3)",
                        "test1949(RegressionTest3)",
                        "test2514(RegressionTest5)",
                        "test2676(RegressionTest5)",
                        "test2934(RegressionTest5)",
                        "test2979(RegressionTest5)",
                        "test2034(RegressionTest4)",
                        "test2142(RegressionTest4)",
                        "test2150(RegressionTest4)",
                        "test2235(RegressionTest4)",
                        "test2347(RegressionTest4)",
                        "test1043(RegressionTest2)",
                        "test1107(RegressionTest2)",
                        "test1125(RegressionTest2)",
                        "test1275(RegressionTest2)",
                        "test1332(RegressionTest2)",
                        "test0014(RegressionTest0)",
                        "test0094(RegressionTest0)",
                        "test0114(RegressionTest0)",
                        "test0127(RegressionTest0)",
                        "test0196(RegressionTest0)",
                        "test0230(RegressionTest0)",
                        "test0257(RegressionTest0)",
                        "test0264(RegressionTest0)",
                        "test0286(RegressionTest0)",
                        "test0390(RegressionTest0)",
                        "test0466(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;",
                        "java.lang.AssertionError: Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;"
                    ],
                    "failing_lines": [
                        [
                            "RegressionTest1.test0658(RegressionTest1.java:7482)"
                        ],
                        [
                            "RegressionTest1.test0720(RegressionTest1.java:10263)"
                        ],
                        [
                            "RegressionTest1.test0807(RegressionTest1.java:14565)"
                        ],
                        [
                            "RegressionTest1.test0905(RegressionTest1.java:19451)"
                        ],
                        [
                            "RegressionTest1.test0929(RegressionTest1.java:20507)"
                        ],
                        [
                            "RegressionTest1.test0953(RegressionTest1.java:21784)"
                        ],
                        [
                            "RegressionTest1.test0998(RegressionTest1.java:24164)"
                        ],
                        [
                            "RegressionTest6.test3065(RegressionTest6.java:2921)"
                        ],
                        [
                            "RegressionTest3.test1537(RegressionTest3.java:1978)"
                        ],
                        [
                            "RegressionTest3.test1569(RegressionTest3.java:3509)"
                        ],
                        [
                            "RegressionTest3.test1641(RegressionTest3.java:7304)"
                        ],
                        [
                            "RegressionTest3.test1649(RegressionTest3.java:7697)"
                        ],
                        [
                            "RegressionTest3.test1676(RegressionTest3.java:9079)"
                        ],
                        [
                            "RegressionTest3.test1790(RegressionTest3.java:14716)"
                        ],
                        [
                            "RegressionTest3.test1837(RegressionTest3.java:17098)"
                        ],
                        [
                            "RegressionTest3.test1900(RegressionTest3.java:20284)"
                        ],
                        [
                            "RegressionTest3.test1949(RegressionTest3.java:22668)"
                        ],
                        [
                            "RegressionTest5.test2514(RegressionTest5.java:729)"
                        ],
                        [
                            "RegressionTest5.test2676(RegressionTest5.java:8860)"
                        ],
                        [
                            "RegressionTest5.test2934(RegressionTest5.java:21266)"
                        ],
                        [
                            "RegressionTest5.test2979(RegressionTest5.java:23255)"
                        ],
                        [
                            "RegressionTest4.test2034(RegressionTest4.java:1667)"
                        ],
                        [
                            "RegressionTest4.test2142(RegressionTest4.java:6874)"
                        ],
                        [
                            "RegressionTest4.test2150(RegressionTest4.java:7269)"
                        ],
                        [
                            "RegressionTest4.test2235(RegressionTest4.java:11652)"
                        ],
                        [
                            "RegressionTest4.test2347(RegressionTest4.java:16909)"
                        ],
                        [
                            "RegressionTest2.test1043(RegressionTest2.java:2392)"
                        ],
                        [
                            "RegressionTest2.test1107(RegressionTest2.java:5597)"
                        ],
                        [
                            "RegressionTest2.test1125(RegressionTest2.java:6283)"
                        ],
                        [
                            "RegressionTest2.test1275(RegressionTest2.java:13952)"
                        ],
                        [
                            "RegressionTest2.test1332(RegressionTest2.java:16710)"
                        ],
                        [
                            "RegressionTest0.test0014(RegressionTest0.java:361)"
                        ],
                        [
                            "RegressionTest0.test0094(RegressionTest0.java:3140)"
                        ],
                        [
                            "RegressionTest0.test0114(RegressionTest0.java:3904)"
                        ],
                        [
                            "RegressionTest0.test0127(RegressionTest0.java:4366)"
                        ],
                        [
                            "RegressionTest0.test0196(RegressionTest0.java:7085)"
                        ],
                        [
                            "RegressionTest0.test0230(RegressionTest0.java:8366)"
                        ],
                        [
                            "RegressionTest0.test0257(RegressionTest0.java:9611)"
                        ],
                        [
                            "RegressionTest0.test0264(RegressionTest0.java:9914)"
                        ],
                        [
                            "RegressionTest0.test0286(RegressionTest0.java:10824)"
                        ],
                        [
                            "RegressionTest0.test0390(RegressionTest0.java:15385)"
                        ],
                        [
                            "RegressionTest0.test0466(RegressionTest0.java:18840)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/ARJA/Math/patch130_99-Math-49-ARJA.patch",
                    "test": "test_from_NFL_patch1_1-Math-49-DynaMoth",
                    "failing": 28,
                    "testrun": 1818,
                    "failings": [
                        "test01(ErrorTest0)",
                        "test02(ErrorTest0)",
                        "test03(ErrorTest0)",
                        "test04(ErrorTest0)",
                        "test05(ErrorTest0)",
                        "test06(ErrorTest0)",
                        "test07(ErrorTest0)",
                        "test08(ErrorTest0)",
                        "test09(ErrorTest0)",
                        "test10(ErrorTest0)",
                        "test11(ErrorTest0)",
                        "test12(ErrorTest0)",
                        "test13(ErrorTest0)",
                        "test14(ErrorTest0)",
                        "test15(ErrorTest0)",
                        "test16(ErrorTest0)",
                        "test17(ErrorTest0)",
                        "test18(ErrorTest0)",
                        "test19(ErrorTest0)",
                        "test20(ErrorTest0)",
                        "test21(ErrorTest0)",
                        "test22(ErrorTest0)",
                        "test23(ErrorTest0)",
                        "test24(ErrorTest0)",
                        "test25(ErrorTest0)",
                        "test26(ErrorTest0)",
                        "test27(ErrorTest0)",
                        "test1651(RegressionTest3)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector68 and openMapRealVector69.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector96 and openMapRealVector98.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and realVector43",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector92 and openMapRealVector94.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector85 and openMapRealVector2.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector10 and openMapRealVector11.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector58 and openMapRealVector59.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector80 and openMapRealVector81.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector54 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector51 and openMapRealVector48.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on openMapRealVector2 and openMapRealVector74",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector52 and openMapRealVector53.",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector25 and openMapRealVector68",
                        "java.lang.AssertionError: Contract failed: equals-hashcode on realVector39 and openMapRealVector82",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector49 and openMapRealVector50.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector44 and openMapRealVector41.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector79 and openMapRealVector77.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector17 and openMapRealVector6.",
                        "java.lang.ArrayIndexOutOfBoundsException"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test01(ErrorTest0.java:51)"
                        ],
                        [
                            "ErrorTest0.test02(ErrorTest0.java:86)"
                        ],
                        [
                            "ErrorTest0.test03(ErrorTest0.java:123)"
                        ],
                        [
                            "ErrorTest0.test04(ErrorTest0.java:182)"
                        ],
                        [
                            "ErrorTest0.test05(ErrorTest0.java:240)"
                        ],
                        [
                            "ErrorTest0.test06(ErrorTest0.java:286)"
                        ],
                        [
                            "ErrorTest0.test07(ErrorTest0.java:317)"
                        ],
                        [
                            "ErrorTest0.test08(ErrorTest0.java:375)"
                        ],
                        [
                            "ErrorTest0.test09(ErrorTest0.java:432)"
                        ],
                        [
                            "ErrorTest0.test10(ErrorTest0.java:464)"
                        ],
                        [
                            "ErrorTest0.test11(ErrorTest0.java:478)"
                        ],
                        [
                            "ErrorTest0.test12(ErrorTest0.java:515)"
                        ],
                        [
                            "ErrorTest0.test13(ErrorTest0.java:555)"
                        ],
                        [
                            "ErrorTest0.test14(ErrorTest0.java:608)"
                        ],
                        [
                            "ErrorTest0.test15(ErrorTest0.java:656)"
                        ],
                        [
                            "ErrorTest0.test16(ErrorTest0.java:696)"
                        ],
                        [
                            "ErrorTest0.test17(ErrorTest0.java:747)"
                        ],
                        [
                            "ErrorTest0.test18(ErrorTest0.java:784)"
                        ],
                        [
                            "ErrorTest0.test19(ErrorTest0.java:821)"
                        ],
                        [
                            "ErrorTest0.test20(ErrorTest0.java:869)"
                        ],
                        [
                            "ErrorTest0.test21(ErrorTest0.java:917)"
                        ],
                        [
                            "ErrorTest0.test22(ErrorTest0.java:963)"
                        ],
                        [
                            "ErrorTest0.test23(ErrorTest0.java:1018)"
                        ],
                        [
                            "ErrorTest0.test24(ErrorTest0.java:1064)"
                        ],
                        [
                            "ErrorTest0.test25(ErrorTest0.java:1096)"
                        ],
                        [
                            "ErrorTest0.test26(ErrorTest0.java:1149)"
                        ],
                        [
                            "ErrorTest0.test27(ErrorTest0.java:1173)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/ARJA/Math/patch130_99-Math-49-ARJA.patch",
                    "test": "test_from_DRR_patch2-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3346,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/ARJA/Math/patch130_99-Math-49-ARJA.patch",
                    "test": "test_from_NFL_patch7_7-Math-49-Kali-A",
                    "failing": 32,
                    "testrun": 2023,
                    "failings": [
                        "test008(ErrorTest0)",
                        "test021(ErrorTest0)",
                        "test023(ErrorTest0)",
                        "test035(ErrorTest0)",
                        "test047(ErrorTest0)",
                        "test051(ErrorTest0)",
                        "test056(ErrorTest0)",
                        "test085(ErrorTest0)",
                        "test097(ErrorTest0)",
                        "test100(ErrorTest0)",
                        "test105(ErrorTest0)",
                        "test106(ErrorTest0)",
                        "test108(ErrorTest0)",
                        "test115(ErrorTest0)",
                        "test117(ErrorTest0)",
                        "test138(ErrorTest0)",
                        "test141(ErrorTest0)",
                        "test0957(RegressionTest1)",
                        "test1567(RegressionTest3)",
                        "test1622(RegressionTest3)",
                        "test1688(RegressionTest3)",
                        "test1794(RegressionTest3)",
                        "test1880(RegressionTest3)",
                        "test1121(RegressionTest2)",
                        "test1300(RegressionTest2)",
                        "test1333(RegressionTest2)",
                        "test1356(RegressionTest2)",
                        "test1480(RegressionTest2)",
                        "test0132(RegressionTest0)",
                        "test0187(RegressionTest0)",
                        "test0301(RegressionTest0)",
                        "test0372(RegressionTest0)"
                    ],
                    "status": "ok",
                    "test_executed": [
                        "ErrorTest0",
                        "RegressionTest1",
                        "RegressionTest3",
                        "RegressionTest2",
                        "RegressionTest0"
                    ],
                    "failing_assertions": [
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector47 and openMapRealVector46.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector95 and openMapRealVector5.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector22.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector41 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector23 and openMapRealVector24.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector75 and openMapRealVector4.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector28 and openMapRealVector9.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector91 and openMapRealVector72.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector56 and openMapRealVector52.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector15 and openMapRealVector7.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector76 and openMapRealVector20.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector35 and openMapRealVector16.",
                        "java.lang.AssertionError: Contract failed: equals-symmetric on realVector82 and openMapRealVector81.",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '0.5' != '1.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: '99.0' != '101.0'",
                        "java.lang.AssertionError: Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: index (101)",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '1.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.0' != '10.0'",
                        "java.lang.AssertionError: '0.5' != '1.0'"
                    ],
                    "failing_lines": [
                        [
                            "ErrorTest0.test008(ErrorTest0.java:237)"
                        ],
                        [
                            "ErrorTest0.test021(ErrorTest0.java:671)"
                        ],
                        [
                            "ErrorTest0.test023(ErrorTest0.java:742)"
                        ],
                        [
                            "ErrorTest0.test035(ErrorTest0.java:1168)"
                        ],
                        [
                            "ErrorTest0.test047(ErrorTest0.java:1585)"
                        ],
                        [
                            "ErrorTest0.test051(ErrorTest0.java:1695)"
                        ],
                        [
                            "ErrorTest0.test056(ErrorTest0.java:1900)"
                        ],
                        [
                            "ErrorTest0.test085(ErrorTest0.java:3104)"
                        ],
                        [
                            "ErrorTest0.test097(ErrorTest0.java:3623)"
                        ],
                        [
                            "ErrorTest0.test100(ErrorTest0.java:3766)"
                        ],
                        [
                            "ErrorTest0.test105(ErrorTest0.java:3929)"
                        ],
                        [
                            "ErrorTest0.test106(ErrorTest0.java:3985)"
                        ],
                        [
                            "ErrorTest0.test108(ErrorTest0.java:4055)"
                        ],
                        [
                            "ErrorTest0.test115(ErrorTest0.java:4356)"
                        ],
                        [
                            "ErrorTest0.test117(ErrorTest0.java:4452)"
                        ],
                        [
                            "ErrorTest0.test138(ErrorTest0.java:5346)"
                        ],
                        [
                            "ErrorTest0.test141(ErrorTest0.java:5487)"
                        ],
                        [
                            "RegressionTest1.test0957(RegressionTest1.java:24665)"
                        ],
                        [
                            "RegressionTest3.test1567(RegressionTest3.java:3405)"
                        ],
                        [
                            "RegressionTest3.test1622(RegressionTest3.java:6254)"
                        ],
                        [
                            "RegressionTest3.test1688(RegressionTest3.java:9544)"
                        ],
                        [
                            "RegressionTest3.test1794(RegressionTest3.java:14607)"
                        ],
                        [
                            "RegressionTest3.test1880(RegressionTest3.java:19167)"
                        ],
                        [
                            "RegressionTest2.test1121(RegressionTest2.java:6008)"
                        ],
                        [
                            "RegressionTest2.test1300(RegressionTest2.java:14896)"
                        ],
                        [
                            "RegressionTest2.test1333(RegressionTest2.java:16561)"
                        ],
                        [
                            "RegressionTest2.test1356(RegressionTest2.java:17513)"
                        ],
                        [
                            "RegressionTest2.test1480(RegressionTest2.java:23954)"
                        ],
                        [
                            "RegressionTest0.test0132(RegressionTest0.java:6324)"
                        ],
                        [
                            "RegressionTest0.test0187(RegressionTest0.java:9527)"
                        ],
                        [
                            "RegressionTest0.test0301(RegressionTest0.java:15878)"
                        ],
                        [
                            "RegressionTest0.test0372(RegressionTest0.java:19757)"
                        ]
                    ]
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/ARJA/Math/patch130_99-Math-49-ARJA.patch",
                    "test": "test_from_DRR_patch5-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 4079,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest8",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                },
                {
                    "patch": "/Patches/patchesEffectivenessICSE20/PFL/Doverfitting/ARJA/Math/patch130_99-Math-49-ARJA.patch",
                    "test": "test_from_DRR_patch1-Math-49-Arja-plausible",
                    "failing": 0,
                    "testrun": 3942,
                    "failings": [],
                    "status": "ok",
                    "test_executed": [
                        "RegressionTest1",
                        "RegressionTest6",
                        "RegressionTest3",
                        "RegressionTest5",
                        "RegressionTest4",
                        "RegressionTest2",
                        "RegressionTest0",
                        "RegressionTest7"
                    ],
                    "failing_assertions": [],
                    "failing_lines": []
                }
            ],
            "duration": 101.59
        }
    ],
    "date": "2021-11-22T20:17:37.503445",
    "duration": -0.0
}